<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http:///org/omg/uml2/infrastructure/cmof"
    xmlns:basic="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:behavioralfeatures="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:classifiers="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:cmof="http:///org/omg/uml2/infrastructure/cmof"
    xmlns:cmofextension="http:///org/omg/uml2/infrastructure/cmofextension"
    xmlns:comments="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:constraints="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:constructs="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:elements="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:emof="http://schema.omg.org/spec/mof/2.0/emof"
    xmlns:expressions="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:namespaces="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:ownerships="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:redefinitions="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:reflection="http:///org/omg/uml2/infrastructure/cmofreflection"
    xmlns:super="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:visibilities="http://schema.omg.org/spec/UML/2.1.1"
    xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <!--
    S.C. 10/18/2008 - Changed unversioned schema location/file for XMI to 2.1.1 version
    S.C. 10/18/2008 - Changed schema location/file for all uml2 schema imports to common local file
    -->    
    <xsd:import
        namespace="http:///org/omg/uml2/infrastructure/cmofextension" schemaLocation="CmofextensionXMI.xsd"/>
    <xsd:import namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import
        namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import
        namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import
        namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import
        namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import
        namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import
        namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import
        namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import namespace="http://schema.omg.org/spec/mof/2.0/emof" schemaLocation="EMOFXMI.xsd"/>
    <xsd:import namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import
        namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import
        namespace="http:///org/omg/uml2/infrastructure/cmofreflection" schemaLocation="CmofreflectionXMI.xsd"/>
    <xsd:import
        namespace="http://schema.omg.org/spec/UML/2.1.1" schemaLocation="UML2XMI.xsd"/>
    <xsd:import namespace="http://schema.omg.org/spec/XMI/2.1" schemaLocation="XMI-2.1.1.xsd"/>
    <xsd:simpleType name="PackageMergeKind">
        <xsd:restriction base="xsd:NCName">
            <xsd:enumeration value="exdend"/>
            <xsd:enumeration value="define"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:complexType name="PackageMerge">
        <xsd:complexContent>
            <xsd:extension base="cmof:DirectedRelationship">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="mergingPackage" type="constructs:Package"/>
                    <xsd:element name="mergedPackage" type="constructs:Package"/>
                    <xsd:element name="mergeType" type="cmof:PackageMergeKind"/>
                </xsd:choice>
                <xsd:attribute name="mergingPackage" type="xsd:string"/>
                <xsd:attribute name="mergedPackage" type="xsd:string"/>
                <xsd:attribute name="mergeType" type="cmof:PackageMergeKind"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="PackageMerge" type="cmof:PackageMerge"/>
    <xsd:complexType name="Element">
        <xsd:complexContent>
            <xsd:extension base="reflection:Object">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="ownedElement" type="ownerships:Element"/>
                    <xsd:element name="owner" type="ownerships:Element"/>
                    <xsd:element name="ownedComment" type="comments:Comment"/>
                </xsd:choice>
                <xsd:attribute name="owner" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Element" type="cmof:Element"/>
    <xsd:complexType name="Classifier">
        <xsd:complexContent>
            <xsd:extension base="cmof:Namespace">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="package" type="basic:Package"/>
                    <xsd:element name="feature" type="classifiers:Feature"/>
                    <xsd:element name="isAbstract" type="xsd:boolean"/>
                    <xsd:element name="inheritedMember" type="namespaces:NamedElement"/>
                    <xsd:element name="general" type="super:Classifier"/>
                    <xsd:element name="attribute" type="constructs:Property"/>
                </xsd:choice>
                <xsd:attribute name="package" type="xsd:string"/>
                <xsd:attribute name="feature" type="xsd:string"/>
                <xsd:attribute name="isAbstract" type="xsd:boolean"/>
                <xsd:attribute name="inheritedMember" type="xsd:string"/>
                <xsd:attribute name="general" type="xsd:string"/>
                <xsd:attribute name="attribute" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Classifier" type="cmof:Classifier"/>
    <xsd:complexType name="DirectedRelationship">
        <xsd:complexContent>
            <xsd:extension base="cmof:Relationship">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="source" type="cmof:Element"/>
                    <xsd:element name="target" type="cmof:Element"/>
                </xsd:choice>
                <xsd:attribute name="source" type="xsd:string"/>
                <xsd:attribute name="target" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="DirectedRelationship" type="cmof:DirectedRelationship"/>
    <xsd:complexType name="Feature">
        <xsd:complexContent>
            <xsd:extension base="cmof:RedefinableElement">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="featuringClassifier" type="cmof:Classifier"/>
                </xsd:choice>
                <xsd:attribute name="featuringClassifier" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Feature" type="cmof:Feature"/>
    <xsd:complexType name="MultiplicityElement">
        <xsd:complexContent>
            <xsd:extension base="cmof:Element">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="isOrdered" type="xsd:boolean"/>
                    <xsd:element name="isUnique" type="xsd:boolean"/>
                    <xsd:element name="lower" type="xsd:int"/>
                    <xsd:element name="upper" type="xsd:string"/>                                        
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="qualifiedName" type="xsd:string"/>
                    <xsd:element name="type" type="basic:Type"/>
                    <xsd:element name="namespace" type="namespaces:Namespace"/>
                    <xsd:element name="visibility" type="visibilities:VisibilityKind"/>
                </xsd:choice>
                <xsd:attribute name="isOrdered" type="xsd:boolean"/>
                <xsd:attribute name="isUnique" type="xsd:boolean"/>
                <xsd:attribute name="lower" type="xsd:int"/>
                <xsd:attribute name="upper" type="xsd:string"/>
                <xsd:attribute name="type" type="xsd:string"/>
                <xsd:attribute name="name" type="xsd:string"/>
                <xsd:attribute name="qualifiedName" type="xsd:string"/>
                <xsd:attribute name="namespace" type="xsd:string"/>
                <xsd:attribute name="visibility" type="visibilities:VisibilityKind"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="MultiplicityElement" type="cmof:MultiplicityElement"/>
    <xsd:complexType name="Namespace">
        <xsd:complexContent>
            <xsd:extension base="cmof:NamedElement">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="member" type="namespaces:NamedElement"/>
                    <xsd:element name="ownedRule" type="constraints:Constraint"/>
                    <xsd:element name="ownedMember" type="namespaces:NamedElement"/>                    
                    <xsd:element name="importedMember" type="constructs:PackageableElement"/>
                    <xsd:element name="elementImport" type="constructs:ElementImport"/>
                    <xsd:element name="packageImport" type="constructs:PackageImport"/>
                </xsd:choice>
                <xsd:attribute name="member" type="xsd:string"/>
                <xsd:attribute name="importedMember" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Namespace" type="cmof:Namespace"/>
    <xsd:complexType name="PackageableElement">
        <xsd:complexContent>
            <xsd:extension base="cmof:NamedElement"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="PackageableElement" type="cmof:PackageableElement"/>
    <xsd:complexType name="RedefinableElement">
        <xsd:complexContent>
            <xsd:extension base="cmof:NamedElement">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="redefinedElement" type="redefinitions:RedefinableElement"/>
                    <xsd:element name="redefinitionContext" type="super:Classifier"/>
                </xsd:choice>
                <xsd:attribute name="redefinedElement" type="xsd:string"/>
                <xsd:attribute name="redefinitionContext" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="RedefinableElement" type="cmof:RedefinableElement"/>
    <xsd:complexType name="Relationship">
        <xsd:complexContent>
            <xsd:extension base="cmof:Element">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="relatedElement" type="cmof:Element"/>
                </xsd:choice>
                <xsd:attribute name="relatedElement" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Relationship" type="cmof:Relationship"/>
    <xsd:complexType name="StructuralFeature">
        <xsd:complexContent>
            <xsd:extension base="cmof:Feature">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="isOrdered" type="xsd:boolean"/>
                    <xsd:element name="isUnique" type="xsd:boolean"/>
                    <xsd:element name="lower" type="xsd:int"/>
                    <xsd:element name="upper" type="xsd:string"/>
                    <xsd:element name="type" type="emof:Type"/>
                    <xsd:element name="isReadOnly" type="xsd:boolean"/>
                </xsd:choice>
                <xsd:attribute name="isOrdered" type="xsd:boolean"/>
                <xsd:attribute name="isUnique" type="xsd:boolean"/>
                <xsd:attribute name="lower" type="xsd:int"/>
                <xsd:attribute name="upper" type="xsd:string"/>
                <xsd:attribute name="type" type="xsd:string"/>
                <xsd:attribute name="isReadOnly" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="StructuralFeature" type="cmof:StructuralFeature"/>
    <xsd:complexType name="TypedElement">
        <xsd:complexContent>
            <xsd:extension base="basic:TypedElement">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="TypedElement" type="cmof:TypedElement"/>
    <xsd:complexType name="ValueSpecification">
        <xsd:complexContent>
            <xsd:extension base="cmof:TypedElement"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="ValueSpecification" type="cmof:ValueSpecification"/>
    <xsd:complexType name="Association">
        <xsd:complexContent>
            <xsd:extension base="cmof:Classifier">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="relatedElement" type="ownerships:Element"/>
                    <xsd:element name="isDerived" type="xsd:boolean"/>
                    <xsd:element name="ownedEnd" type="constructs:Property"/>
                    <xsd:element name="endType" type="constructs:Type"/>
                    <xsd:element name="memberEnd" type="constructs:Property"/>
                </xsd:choice>
                <xsd:attribute name="relatedElement" type="xsd:string"/>
                <xsd:attribute name="isDerived" type="xsd:boolean"/>
                <xsd:attribute name="endType" type="xsd:string"/>
                <xsd:attribute name="memberEnd" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Association" type="cmof:Association"/>
    <xsd:complexType name="Class">
        <xsd:complexContent>
            <xsd:extension base="basic:Class">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Class" type="cmof:Class"/>
    <xsd:complexType name="Property">
        <xsd:complexContent>
            <xsd:extension base="basic:Property">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Property" type="cmof:Property"/>
    <xsd:complexType name="DataType">
        <xsd:complexContent>
            <xsd:extension base="basic:DataType">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="DataType" type="cmof:DataType"/>
    <xsd:complexType name="Enumeration">
        <xsd:complexContent>
            <xsd:extension base="basic:Enumeration">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Enumeration" type="cmof:Enumeration"/>
    <xsd:complexType name="EnumerationLiteral">
        <xsd:complexContent>
            <xsd:extension base="basic:EnumerationLiteral">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="EnumerationLiteral" type="cmof:EnumerationLiteral"/>
    <xsd:complexType name="PrimitiveType">
        <xsd:complexContent>
            <xsd:extension base="basic:PrimitiveType">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="PrimitiveType" type="cmof:PrimitiveType"/>
    <xsd:complexType name="Constraint">
        <xsd:complexContent>
            <xsd:extension base="cmof:PackageableElement">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="context" type="namespaces:Namespace"/>
                    <xsd:element name="specification" type="expressions:ValueSpecification"/>
                    <xsd:element name="constrainedElement" type="ownerships:Element"/>
                </xsd:choice>
                <xsd:attribute name="context" type="xsd:string"/>
                <xsd:attribute name="constrainedElement" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Constraint" type="cmof:Constraint"/>
    <xsd:complexType name="OpaqueExpression">
        <xsd:complexContent>
            <xsd:extension base="cmof:ValueSpecification">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="body" type="xsd:string"/>
                    <xsd:element name="language" type="xsd:string"/>
                </xsd:choice>
                <xsd:attribute name="body" type="xsd:string"/>
                <xsd:attribute name="language" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="OpaqueExpression" type="cmof:OpaqueExpression"/>
    <xsd:complexType name="Operation">
        <xsd:complexContent>
            <xsd:extension base="basic:Operation">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Operation" type="cmof:Operation"/>
    <xsd:complexType name="Parameter">
        <xsd:complexContent>
            <xsd:extension base="basic:Parameter">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Parameter" type="cmof:Parameter"/>
    <xsd:complexType name="BehavioralFeature">
        <xsd:complexContent>
            <xsd:extension base="cmof:Feature">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="BehavioralFeature" type="cmof:BehavioralFeature"/>
    <xsd:complexType name="ElementImport">
        <xsd:complexContent>
            <xsd:extension base="cmof:DirectedRelationship">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="visibility" type="visibilities:VisibilityKind"/>
                    <xsd:element name="alias" type="xsd:string"/>
                    <xsd:element name="importedElement" type="constructs:PackageableElement"/>
                    <xsd:element name="importingNamespace" type="constructs:Namespace"/>
                </xsd:choice>
                <xsd:attribute name="visibility" type="visibilities:VisibilityKind"/>
                <xsd:attribute name="alias" type="xsd:string"/>
                <xsd:attribute name="importedElement" type="xsd:string"/>
                <xsd:attribute name="importingNamespace" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="ElementImport" type="cmof:ElementImport"/>
    <xsd:complexType name="Package">
        <xsd:complexContent>
            <xsd:extension base="basic:Package">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Package" type="cmof:Package"/>
    <xsd:complexType name="PackageImport">
        <xsd:complexContent>
            <xsd:extension base="cmof:DirectedRelationship">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="visibility" type="visibilities:VisibilityKind"/>
                    <xsd:element name="importedPackage" type="constructs:Package"/>
                    <xsd:element name="importingNamespace" type="constructs:Namespace"/>
                </xsd:choice>
                <xsd:attribute name="visibility" type="visibilities:VisibilityKind"/>
                <xsd:attribute name="importedPackage" type="xsd:string"/>
                <xsd:attribute name="importingNamespace" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="PackageImport" type="cmof:PackageImport"/>
    <xsd:complexType name="Comment">
        <xsd:complexContent>
            <xsd:extension base="cmof:Element">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="body" type="xsd:string"/>
                    <xsd:element name="annotatedElement" type="ownerships:Element"/>
                </xsd:choice>
                <xsd:attribute name="body" type="xsd:string"/>
                <xsd:attribute name="annotatedElement" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Comment" type="cmof:Comment"/>
    <xsd:complexType name="Type">
        <xsd:complexContent>
            <xsd:extension base="basic:Type">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="dummy" type="xsd:string"/>
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Type" type="cmof:Type"/>
    <xsd:complexType name="NamedElement">
        <xsd:complexContent>
            <xsd:extension base="basic:NamedElement">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="ownedElement" type="ownerships:Element"/>
                    <xsd:element name="owner" type="ownerships:Element"/>
                    <xsd:element name="qualifiedName" type="xsd:string"/>
                    <xsd:element name="namespace" type="cmof:Namespace"/>
                    <xsd:element name="link" type="cmof:Link"/>
                </xsd:choice>
                <xsd:attribute name="owner" type="xsd:string"/>
                <xsd:attribute name="qualifiedName" type="xsd:string"/>
                <xsd:attribute name="namespace" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="NamedElement" type="cmof:NamedElement"/>
    <xsd:complexType name="Expression">
        <xsd:complexContent>
            <xsd:extension base="cmof:ValueSpecification">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="symbol" type="xsd:string"/>
                    <xsd:element name="operand" type="expressions:ValueSpecification"/>
                </xsd:choice>
                <xsd:attribute name="symbol" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Expression" type="cmof:Expression"/>
    <xsd:complexType name="Factory">
        <xsd:complexContent>
            <xsd:extension base="cmof:Object">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="package" type="emof:Package"/>
                </xsd:choice>
                <xsd:attribute name="package" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Factory" type="cmof:Factory"/>
    <xsd:complexType name="Object">
        <xsd:complexContent>
            <xsd:extension base="elements:Element">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="link" type="cmof:Link"/>
                </xsd:choice>
                <xsd:attribute name="link" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Object" type="cmof:Object"/>
    <xsd:complexType name="Extent">
        <xsd:complexContent>
            <xsd:extension base="elements:Element"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Extent" type="cmof:Extent"/>
    <xsd:complexType name="URIExtent">
        <xsd:complexContent>
            <xsd:extension base="cmof:Extent"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="URIExtent" type="cmof:URIExtent"/>
    <xsd:complexType name="Tag">
        <xsd:complexContent>
            <xsd:extension base="cmof:Object">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="value" type="xsd:string"/>
                    <xsd:element name="element" type="elements:Element"/>
                    <xsd:element name="elements" type="elements:Element"/>
                </xsd:choice>
                <xsd:attribute name="name" type="xsd:string"/>
                <xsd:attribute name="value" type="xsd:string"/>
                <xsd:attribute name="element" type="xsd:string"/>
                <xsd:attribute name="elements" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Tag" type="cmof:Tag"/>
    <xsd:complexType name="NewClass">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element ref="xmi:Extension"/>
        </xsd:choice>
        <xsd:attribute ref="xmi:id"/>
        <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    </xsd:complexType>
    <xsd:element name="NewClass" type="cmof:NewClass"/>
    <xsd:complexType name="Link">
        <xsd:complexContent>
            <xsd:extension base="elements:Element">
                <xsd:choice maxOccurs="unbounded" minOccurs="0">
                    <xsd:element name="secondObject" type="cmof:Object"/>
                    <xsd:element name="firstObject" type="cmof:Object"/>
                    <xsd:element name="association" type="constructs:Association"/>
                </xsd:choice>
                <xsd:attribute name="secondObject" type="xsd:string"/>
                <xsd:attribute name="firstObject" type="xsd:string"/>
                <xsd:attribute name="association" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="Link" type="cmof:Link"/>
    <xsd:complexType name="Argument">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="value" type="comments:Element"/>
            <xsd:element ref="xmi:Extension"/>
        </xsd:choice>
        <xsd:attribute ref="xmi:id"/>
        <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="value" type="xsd:string"/>
    </xsd:complexType>
    <xsd:element name="Argument" type="cmof:Argument"/>
    <xsd:complexType name="Exception">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="description" type="xsd:string"/>
            <xsd:element name="objectInError" type="cmofextension:Object"/>
            <xsd:element name="elementInError" type="cmofextension:Object"/>
            <xsd:element ref="xmi:Extension"/>
        </xsd:choice>
        <xsd:attribute ref="xmi:id"/>
        <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
        <xsd:attribute name="description" type="xsd:string"/>
        <xsd:attribute name="objectInError" type="xsd:string"/>
        <xsd:attribute name="elementInError" type="xsd:string"/>
    </xsd:complexType>
    <xsd:element name="Exception" type="cmof:Exception"/>
</xsd:schema>
