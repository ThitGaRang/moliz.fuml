<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/1" xmlns:Uml2Debug="http:///schemas/Uml2Debug/_BYFEIP7yEdufa83D85EEEw/16" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/2.1.0/UML" xsi:schemaLocation="http:///schemas/Default/1 Default.profile.uml#_169u5BRBEd-0fNU76fYmlA http:///schemas/Uml2Debug/_BYFEIP7yEdufa83D85EEEw/16 Uml2Debug.profile.uml#_169rYBRBEd-0fNU76fYmlA">
  <uml:Model xmi:id="_17HrwhRBEd-0fNU76fYmlA" name="fUML">
    <eAnnotations xmi:id="_17HrwxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/emf/2002/Ecore"/>
    <packageImport xmi:id="_17HrxBRBEd-0fNU76fYmlA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_17HrxRRBEd-0fNU76fYmlA" name="Semantics">
      <packagedElement xmi:type="uml:Package" xmi:id="_17HrxhRBEd-0fNU76fYmlA" name="Actions">
        <packagedElement xmi:type="uml:Package" xmi:id="_17HrxxRBEd-0fNU76fYmlA" name="BasicActions">
          <packageImport xmi:id="_17HryBRBEd-0fNU76fYmlA" importedPackage="_17RHLRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17HryRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17HryhRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17HryxRBEd-0fNU76fYmlA" importedPackage="_17RUoBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17HrzBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17HrzRRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17HrzhRBEd-0fNU76fYmlA" importedPackage="_17RMjRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17HrzxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17Hr0BRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hr0RRBEd-0fNU76fYmlA" name="SendSignalActionActivation">
            <ownedComment xmi:id="_17Hr0hRBEd-0fNU76fYmlA" annotatedElement="_17Hr0RRBEd-0fNU76fYmlA">
              <body>A send signal action activation is an invocation action activation for a send signal action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hr0xRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hr1BRBEd-0fNU76fYmlA" general="_17Hr7RRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17Hr1RRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17Hr1hRBEd-0fNU76fYmlA" annotatedElement="_17Hr1RRBEd-0fNU76fYmlA">
                <body>// Get the value from the target pin. If the value is not a reference, then do nothing.&#xD;
// Otherwise, construct a signal using the values from the argument pins and send it to the referent object.&#xD;
&#xD;
SendSignalAction action = (SendSignalAction)(this.node);&#xD;
Value target = this.takeTokens(action.target).getValue(0);&#xD;
&#xD;
if (target instanceof Reference) {&#xD;
    Signal signal = action.signal;&#xD;
&#xD;
    SignalInstance signalInstance = new SignalInstance();&#xD;
    signalInstance.type = signal;&#xD;
&#xD;
    PropertyList attributes = signal.ownedAttribute;&#xD;
    InputPinList argumentPins = action.argument;&#xD;
    for (int i = 0; i &lt; attributes.size(); i++) {&#xD;
        Property attribute = attributes.getValue(i);&#xD;
        InputPin argumentPin = argumentPins.getValue(i);&#xD;
        ValueList values = this.takeTokens(argumentPin);&#xD;
        signalInstance.setFeatureValue(attribute, values, 0);&#xD;
    }&#xD;
&#xD;
    ((Reference)target).send(signalInstance);&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hr1xRBEd-0fNU76fYmlA" name="PinActivation" isAbstract="true">
            <ownedComment xmi:id="_17Hr2BRBEd-0fNU76fYmlA" annotatedElement="_17Hr1xRBEd-0fNU76fYmlA">
              <body>A pin activation is an object node activation for a node that is a pin.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hr2RRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hr2hRBEd-0fNU76fYmlA" general="_17RHfxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17Hr2xRBEd-0fNU76fYmlA" name="actionActivation" type="_17HsGhRBEd-0fNU76fYmlA" association="_17HsbBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17Hr3BRBEd-0fNU76fYmlA" annotatedElement="_17Hr2xRBEd-0fNU76fYmlA">
                <body>The activation of the action that owns the pin for this pin activation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17Hr3RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17Hr3hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17Hr3xRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17Hr4BRBEd-0fNU76fYmlA" annotatedElement="_17Hr3xRBEd-0fNU76fYmlA">
                <body>// Add all incoming tokens to the pin.&#xD;
// [Note that a pin will consume all tokens offered to it, even if this is more than the multiplicity upper bound, but will only offer tokens up to that upper bound.]&#xD;
&#xD;
Debug.println(&quot;[fire] Pin &quot; + (this.node==null? &quot;&quot;: this.node.name + &quot;...&quot;));&#xD;
&#xD;
this.addTokens(incomingTokens);&#xD;
&#xD;
&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17Hr4RRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17Hr4hRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17Hr4xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17Hr5BRBEd-0fNU76fYmlA" name="takeOfferedTokens">
              <ownedComment xmi:id="_17Hr5RRBEd-0fNU76fYmlA">
                <body>// Take only a number of tokens only up to the limit allowed by&#xD;
// the multiplicity upper bound of the pin for this activation.&#xD;
&#xD;
int count = this.countUnofferedTokens();&#xD;
int upper = -1;&#xD;
&#xD;
// Note: A pin activation used in an expansion activation group &#xD;
// will have this.node == null.&#xD;
if (this.node != null) { &#xD;
    upper = ((Pin)(this.node)).multiplicityElement.upper.naturalValue;&#xD;
}&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
&#xD;
// Note: upper &lt; 0 indicates an unbounded upper multiplicity.&#xD;
if (upper &lt; 0 | count &lt; upper) {&#xD;
    ActivityEdgeInstanceList incomingEdges = this.incomingEdges;&#xD;
    for (int i=0; i&lt;incomingEdges.size(); i++) {&#xD;
        ActivityEdgeInstance edge = incomingEdges.getValue(i);&#xD;
        int incomingCount = edge.countOfferedValues();&#xD;
        TokenList incomingTokens = new TokenList();&#xD;
        if (upper &lt; 0 | incomingCount &lt; upper - count) {&#xD;
             incomingTokens = edge.takeOfferedTokens();&#xD;
            count = count + incomingCount;&#xD;
        } else if (count &lt; upper) {&#xD;
            incomingTokens = edge.takeOfferedTokens(upper-count);&#xD;
            count = upper;&#xD;
        }&#xD;
        for (int j = 0; j &lt; incomingTokens.size(); j++) {&#xD;
            Token token = incomingTokens.getValue(j);&#xD;
            tokens.addValue(token);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
return tokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17Hr5hRBEd-0fNU76fYmlA" name="Parameter1" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17Hr5xRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17Hr6BRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hr6RRBEd-0fNU76fYmlA" name="OutputPinActivation">
            <ownedComment xmi:id="_17Hr6hRBEd-0fNU76fYmlA" annotatedElement="_17Hr6RRBEd-0fNU76fYmlA">
              <body>An output pin activation is a pin activation for an output pin.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hr6xRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hr7BRBEd-0fNU76fYmlA" general="_17Hr1xRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hr7RRBEd-0fNU76fYmlA" name="InvocationActionActivation" isAbstract="true">
            <ownedComment xmi:id="_17Hr7hRBEd-0fNU76fYmlA" annotatedElement="_17Hr7RRBEd-0fNU76fYmlA">
              <body>An invocation action activation is an action activation of an invocation action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hr7xRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hr8BRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hr8RRBEd-0fNU76fYmlA" name="InputPinActivation">
            <ownedComment xmi:id="_17Hr8hRBEd-0fNU76fYmlA" annotatedElement="_17Hr8RRBEd-0fNU76fYmlA">
              <body>An input pin activation is a pin activation for an input pin.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hr8xRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hr9BRBEd-0fNU76fYmlA" general="_17Hr1xRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17Hr9RRBEd-0fNU76fYmlA" name="receiveOffer">
              <ownedComment xmi:id="_17Hr9hRBEd-0fNU76fYmlA" annotatedElement="_17Hr9RRBEd-0fNU76fYmlA">
                <body>// Forward the offer to the action activation.  [When all input pins are ready, the action will fire them.]&#xD;
&#xD;
this.actionActivation.receiveOffer();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17Hr9xRBEd-0fNU76fYmlA" name="isReady">
              <ownedComment xmi:id="_17Hr-BRBEd-0fNU76fYmlA" annotatedElement="_17Hr9xRBEd-0fNU76fYmlA">
                <body>// Return true if the total number of values already being offered by this pin plus those being offered &#xD;
// by the sources of incoming edges is at least equal to the minimum multiplicity of the pin.&#xD;
&#xD;
boolean ready = super.isReady();&#xD;
if (ready) {&#xD;
    int totalValueCount = this.countUnofferedTokens() + this.countOfferedValues();&#xD;
    int minimum = ((Pin)this.node).multiplicityElement.lower;&#xD;
    ready =  totalValueCount >= minimum;&#xD;
}&#xD;
&#xD;
return ready;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17Hr-RRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hr-hRBEd-0fNU76fYmlA" name="CallActionActivation" isAbstract="true">
            <ownedComment xmi:id="_17Hr-xRBEd-0fNU76fYmlA" annotatedElement="_17Hr-hRBEd-0fNU76fYmlA">
              <body>A call action activation is an invocation action activation for a call action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hr_BRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hr_RRBEd-0fNU76fYmlA" general="_17Hr7RRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17Hr_hRBEd-0fNU76fYmlA" name="callExecutions" visibility="public" type="_17RMWhRBEd-0fNU76fYmlA" aggregation="composite" association="_17HsbRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17Hr_xRBEd-0fNU76fYmlA" annotatedElement="_17Hr_hRBEd-0fNU76fYmlA">
                <body>The set of execution object for currently ongoing calls made through this call action activation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HsABRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HsARRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17HsAhRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HsAxRBEd-0fNU76fYmlA" annotatedElement="_17HsAhRBEd-0fNU76fYmlA">
                <body>// Get the call execution object, set its input parameters from the argument pins and execute it.&#xD;
// Once execution completes, copy the values of the output parameters of the call execution to the result pins of the call action execution, then destroy the execution.&#xD;
&#xD;
Execution callExecution = this.getCallExecution();&#xD;
&#xD;
if (callExecution != null) {&#xD;
    this.callExecutions.addValue(callExecution);&#xD;
&#xD;
    CallAction callAction = (CallAction)(this.node);&#xD;
    InputPinList argumentPins = callAction.argument;&#xD;
    OutputPinList resultPins = callAction.result;&#xD;
&#xD;
    ParameterList parameters = callExecution.getBehavior().ownedParameter;&#xD;
&#xD;
    int pinNumber = 1;&#xD;
    int i = 1;&#xD;
    while (i &lt;= parameters.size()) {&#xD;
        Parameter parameter = parameters.getValue(i-1);&#xD;
        if (parameter.direction == ParameterDirectionKind.in |&#xD;
            parameter.direction == ParameterDirectionKind.inout) {&#xD;
            ParameterValue parameterValue = new ParameterValue();&#xD;
            parameterValue.parameter = parameter;&#xD;
            parameterValue.values = this.takeTokens(argumentPins.getValue(pinNumber-1));&#xD;
            callExecution.setParameterValue(parameterValue);&#xD;
            pinNumber = pinNumber + 1;&#xD;
        }&#xD;
        i = i + 1;&#xD;
    }&#xD;
&#xD;
    callExecution.execute();&#xD;
&#xD;
    ParameterValueList outputParameterValues = callExecution.getOutputParameterValues();&#xD;
    for (int j = 0; j &lt; outputParameterValues.size();  j++) {&#xD;
        ParameterValue outputParameterValue = outputParameterValues.getValue(j);&#xD;
        OutputPin resultPin = resultPins.getValue(j);&#xD;
        this.putTokens(resultPin, outputParameterValue.values);&#xD;
    }&#xD;
&#xD;
    callExecution.destroy();&#xD;
    this.removeCallExecution(callExecution);&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsBBRBEd-0fNU76fYmlA" name="getCallExecution" isAbstract="true">
              <ownedComment xmi:id="_17HsBRRBEd-0fNU76fYmlA" annotatedElement="_17HsBBRBEd-0fNU76fYmlA">
                <body>Get the execution object for the called behavior.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsBhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMWhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsBxRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17HsCBRBEd-0fNU76fYmlA" annotatedElement="_17HsBxRBEd-0fNU76fYmlA">
                <body>// Terminate all call executions (if any), then terminate the call action activation (self).&#xD;
&#xD;
for (int i = 0; i &lt; this.callExecutions.size(); i++) {&#xD;
    Execution execution = this.callExecutions.getValue(i);&#xD;
    execution.terminate();&#xD;
}&#xD;
&#xD;
super.terminate();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsCRRBEd-0fNU76fYmlA" name="removeCallExecution">
              <ownedComment xmi:id="_17HsChRBEd-0fNU76fYmlA">
                <body>// Remove the given execution from the current list of call executions.&#xD;
&#xD;
boolean notFound = true;&#xD;
int i = 1;&#xD;
while (notFound &amp; i &lt;= this.callExecutions.size()) {&#xD;
    if (this.callExecutions.getValue(i-1) == execution) {&#xD;
        this.callExecutions.removeValue(i-1);&#xD;
        notFound = false;&#xD;
    }&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsCxRBEd-0fNU76fYmlA" name="execution" type="_17RMWhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HsDBRBEd-0fNU76fYmlA" name="CallBehaviorActionActivation">
            <ownedComment xmi:id="_17HsDRRBEd-0fNU76fYmlA" annotatedElement="_17HsDBRBEd-0fNU76fYmlA">
              <body>A call behavior action activation is a call action activation for a call behavior action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsDhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HsDxRBEd-0fNU76fYmlA" general="_17Hr-hRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HsEBRBEd-0fNU76fYmlA" name="getCallExecution">
              <ownedComment xmi:id="_17HsERRBEd-0fNU76fYmlA" annotatedElement="_17HsEBRBEd-0fNU76fYmlA">
                <body>// Create and execution for the given behavior at the current locus and return the resulting execution object.&#xD;
// If the given behavior is in the context of a classifier, then pass the current context object as the context for the call.&#xD;
// Otherwise, use a null context.&#xD;
// [Note that this requires the behavior context to be compatible with the type of the current contect object.]&#xD;
&#xD;
Behavior behavior = ((CallBehaviorAction)(this.node)).behavior;&#xD;
&#xD;
Object_  context;&#xD;
if (behavior.context == null) {&#xD;
    context = null;&#xD;
} else {&#xD;
    // Debug.println(&quot;[getCallExecution] behavior context = &quot; + behavior.context.name);&#xD;
    context = this.getExecutionContext();&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[getCallExecution] context = &quot; + context);&#xD;
&#xD;
return this.getExecutionLocus().factory.createExecution(behavior, context);&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsEhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMWhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HsExRBEd-0fNU76fYmlA" name="CallOperationActionActivation">
            <ownedComment xmi:id="_17HsFBRBEd-0fNU76fYmlA" annotatedElement="_17HsExRBEd-0fNU76fYmlA">
              <body>A call operation action activation is a call action activation for a call operation action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsFRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HsFhRBEd-0fNU76fYmlA" general="_17Hr-hRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HsFxRBEd-0fNU76fYmlA" name="getCallExecution">
              <ownedComment xmi:id="_17HsGBRBEd-0fNU76fYmlA" annotatedElement="_17HsFxRBEd-0fNU76fYmlA">
                <body>// If the value on the target input pin is a reference, dispatch the operation to it and return the resulting execution object.&#xD;
&#xD;
CallOperationAction action = (CallOperationAction)(this.node);&#xD;
Value target = this.takeTokens(action.target).getValue(0);&#xD;
&#xD;
Execution execution;&#xD;
if (target instanceof Reference) {&#xD;
    execution = ((Reference)target).dispatch(action.operation);&#xD;
}&#xD;
else {&#xD;
    execution = null;&#xD;
}&#xD;
&#xD;
return execution;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsGRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMWhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HsGhRBEd-0fNU76fYmlA" name="ActionActivation" isAbstract="true">
            <ownedComment xmi:id="_17HsGxRBEd-0fNU76fYmlA" annotatedElement="_17HsGhRBEd-0fNU76fYmlA">
              <body>An action activation is an activity node activation for a node that is an action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsHBRBEd-0fNU76fYmlA">
              <body>import java.util.*;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HsHRRBEd-0fNU76fYmlA" general="_17RIhxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17HsHhRBEd-0fNU76fYmlA" name="pinActivations" type="_17Hr1xRBEd-0fNU76fYmlA" association="_17HsbBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17HsHxRBEd-0fNU76fYmlA" annotatedElement="_17HsHhRBEd-0fNU76fYmlA">
                <body>The activations of the pins owned by the action of this action activation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HsIBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HsIRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17HsIhRBEd-0fNU76fYmlA" name="firing" visibility="public">
              <ownedComment xmi:id="_17HsIxRBEd-0fNU76fYmlA" annotatedElement="_17HsIhRBEd-0fNU76fYmlA">
                <body>Whether this action activation is already firing. This attribute is only used if the action for this action activation has isLocallyReentrant = false (the default). If isLocallyReentrant=true, then firing always just remains false.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17HsJBRBEd-0fNU76fYmlA" name="run">
              <ownedComment xmi:id="_17HsJRRBEd-0fNU76fYmlA" annotatedElement="_17HsJBRBEd-0fNU76fYmlA">
                <body>// Run this action activation and any outoging fork node attached to it.&#xD;
&#xD;
super.run();&#xD;
&#xD;
if (this.outgoingEdges.size() > 0) {&#xD;
    this.outgoingEdges.getValue(0).target.run();&#xD;
}&#xD;
&#xD;
this.firing = false;&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsJhRBEd-0fNU76fYmlA" name="takeOfferedTokens">
              <ownedComment xmi:id="_17HsJxRBEd-0fNU76fYmlA">
                <body>// Take any incoming offers of control tokens, then concurrently fire all input pin activations.&#xD;
&#xD;
ActivityEdgeInstanceList incomingEdges = this.incomingEdges;&#xD;
for (int i = 0; i &lt; incomingEdges.size(); i++) {&#xD;
    ActivityEdgeInstance incomingEdge = incomingEdges.getValue(i);&#xD;
    TokenList tokens = incomingEdge.takeOfferedTokens();&#xD;
    for (int j = 0; j &lt; tokens.size(); j++) {&#xD;
        Token token = tokens.getValue(j);&#xD;
        token.withdraw();&#xD;
    }&#xD;
}&#xD;
&#xD;
Action action = (Action)(this.node);&#xD;
&#xD;
// Debug.println(&quot;[fire] Firing pins...&quot;);&#xD;
&#xD;
// *** Fire all input pins concurrently. ***&#xD;
InputPinList inputPins = action.input;&#xD;
for (Iterator i = inputPins.iterator(); i.hasNext();) {&#xD;
    InputPin pin = (InputPin)(i.next());&#xD;
    PinActivation pinActivation = this.getPinActivation(pin);&#xD;
    pinActivation.fire(pinActivation.takeOfferedTokens());&#xD;
}&#xD;
&#xD;
return new TokenList();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsKBRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HsKRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HsKhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsKxRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17HsLBRBEd-0fNU76fYmlA" annotatedElement="_17HsKxRBEd-0fNU76fYmlA">
                <body>// Do the main action behavior then concurrently fire all output pin activations &#xD;
// and offer a single control token.  Then activate the action again, &#xD;
// if there are still enough tokens available to the input pins &#xD;
// and the action has no incoming control flows.&#xD;
&#xD;
Debug.println(&quot;[fire] Action &quot; + this.node.name + &quot;...&quot;);&#xD;
&#xD;
Action action = (Action)this.node;&#xD;
InputPinList inputPins = action.input;&#xD;
&#xD;
if (!action.isLocallyReentrant) {&#xD;
    this.firing = true;&#xD;
}&#xD;
&#xD;
boolean fireAgain = false;&#xD;
do {&#xD;
&#xD;
    this.doAction();&#xD;
    this.sendOffers();&#xD;
&#xD;
    Debug.println(&quot;[fire] Checking if &quot; + this.node.name + &quot; should fire again...&quot;);&#xD;
&#xD;
    fireAgain = inputPins.size() > 0 &amp; action.incoming.size() == 0;&#xD;
    int j = 1;&#xD;
    while (fireAgain &amp; j &lt;= inputPins.size()) {&#xD;
        PinActivation inputPinActivation = this.getPinActivation(inputPins.getValue(j-1));&#xD;
        fireAgain = inputPinActivation.isReady();&#xD;
        j = j + 1;&#xD;
    }&#xD;
&#xD;
} while (fireAgain);&#xD;
&#xD;
this.firing = false;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsLRRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HsLhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HsLxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsMBRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17HsMRRBEd-0fNU76fYmlA" annotatedElement="_17HsMBRBEd-0fNU76fYmlA">
                <body>// Terminate this action activation and any outgoing fork node attached to it.&#xD;
&#xD;
super.terminate();&#xD;
&#xD;
if (this.outgoingEdges.size() > 0) {&#xD;
    this.outgoingEdges.getValue(0).target.terminate();&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsMhRBEd-0fNU76fYmlA" name="isReady">
              <ownedComment xmi:id="_17HsMxRBEd-0fNU76fYmlA" annotatedElement="_17HsMhRBEd-0fNU76fYmlA">
                <body>// In addition to the default condition, check that, if the action has isLocallyReentrant=false, then the activation is not currently firing,&#xD;
// and that the sources of all incoming edges (control flows) have offers and all input pin activations are ready.&#xD;
// [This assumes that all edges directly incoming to the action are control flows.]&#xD;
&#xD;
boolean ready = super.isReady() &amp; (((Action)this.node).isLocallyReentrant | !this.isFiring());&#xD;
&#xD;
int i = 1;&#xD;
while (ready &amp; i &lt;= this.incomingEdges.size()) {&#xD;
    ready = this.incomingEdges.getValue(i-1).hasOffer();&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
InputPinList inputPins = ((Action)(this.node)).input;&#xD;
int j = 1;&#xD;
while (ready &amp; j &lt;= inputPins.size()) {&#xD;
    ready = this.getPinActivation(inputPins.getValue(j-1)).isReady();&#xD;
    j = j + 1;&#xD;
}&#xD;
&#xD;
return ready;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsNBRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsNRRBEd-0fNU76fYmlA" name="isFiring">
              <ownedComment xmi:id="_17HsNhRBEd-0fNU76fYmlA">
                <body>// Indicate whether this action activation is currently firing or not.&#xD;
&#xD;
return firing;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsNxRBEd-0fNU76fYmlA" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsOBRBEd-0fNU76fYmlA" name="doAction" isAbstract="true">
              <ownedComment xmi:id="_17HsORRBEd-0fNU76fYmlA" annotatedElement="_17HsOBRBEd-0fNU76fYmlA">
                <body>Do the required action behavior.&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsOhRBEd-0fNU76fYmlA" name="sendOffers">
              <ownedComment xmi:id="_17HsOxRBEd-0fNU76fYmlA" annotatedElement="_17HsOhRBEd-0fNU76fYmlA">
                <body>// Fire all output pins and send offers on all outgoing control flows.&#xD;
&#xD;
Action action = (Action)(this.node);&#xD;
&#xD;
// *** Send offers from all output pins concurrently. ***&#xD;
OutputPinList outputPins = action.output;&#xD;
for (Iterator i = outputPins.iterator(); i.hasNext();) {&#xD;
    OutputPin outputPin = (OutputPin)i.next();&#xD;
    PinActivation pinActivation = this.getPinActivation(outputPin);&#xD;
    pinActivation.sendUnofferedTokens();&#xD;
}&#xD;
&#xD;
// Send offers on all outgoing control flows.&#xD;
if (this.outgoingEdges.size() > 0) {&#xD;
    TokenList tokens = new TokenList();&#xD;
    tokens.addValue(new ControlToken());&#xD;
    this.addTokens(tokens);&#xD;
    this.outgoingEdges.getValue(0).sendOffer(tokens);&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsPBRBEd-0fNU76fYmlA" name="createNodeActivations">
              <ownedComment xmi:id="_17HsPRRBEd-0fNU76fYmlA" annotatedElement="_17HsPBRBEd-0fNU76fYmlA">
                <body>// Create node activations for the input and output pins of the action for this activation.&#xD;
// [Note: Pins are owned by their actions, not by the enclosing activity (or group), so they must be activated through the action activation.]&#xD;
&#xD;
Action action = (Action)(this.node);&#xD;
&#xD;
ActivityNodeList inputPinNodes = new ActivityNodeList();&#xD;
InputPinList inputPins = action.input;&#xD;
for (int i = 0; i &lt; inputPins.size(); i++) {&#xD;
    InputPin inputPin = inputPins.getValue(i);&#xD;
    inputPinNodes.addValue(inputPin);&#xD;
}&#xD;
&#xD;
this.group.createNodeActivations(inputPinNodes);&#xD;
&#xD;
for (int i = 0; i &lt; inputPinNodes.size(); i++) {&#xD;
    ActivityNode node = inputPinNodes.getValue(i);&#xD;
    this.addPinActivation((PinActivation)(this.group.getNodeActivation(node)));&#xD;
}&#xD;
&#xD;
ActivityNodeList outputPinNodes = new ActivityNodeList();&#xD;
OutputPinList outputPins = action.output;&#xD;
for (int i = 0; i &lt; outputPins.size(); i++) {&#xD;
    OutputPin outputPin = outputPins.getValue(i);&#xD;
    outputPinNodes.addValue(outputPin);&#xD;
}&#xD;
&#xD;
this.group.createNodeActivations(outputPinNodes);&#xD;
&#xD;
for (int i = 0; i &lt; outputPinNodes.size(); i++) {&#xD;
    ActivityNode node = outputPinNodes.getValue(i);&#xD;
    this.addPinActivation((PinActivation)(this.group.getNodeActivation(node)));&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsPhRBEd-0fNU76fYmlA" name="addOutgoingEdge">
              <ownedComment xmi:id="_17HsPxRBEd-0fNU76fYmlA" annotatedElement="_17HsPhRBEd-0fNU76fYmlA">
                <body>// If there are no outgoing activity edge instances, create a single activity edge instance with a fork node execution at the other end.&#xD;
// Add the give edge to the fork node execution that is the target of the activity edge instance out of this action execution.&#xD;
// [This assumes that all edges directly outgoing from the action are control flows, with an implicit fork for offers out of the action.]&#xD;
&#xD;
ActivityNodeActivation forkNodeActivation;&#xD;
&#xD;
if (this.outgoingEdges.size() == 0) {&#xD;
    forkNodeActivation = new ForkNodeActivation();&#xD;
    ActivityEdgeInstance newEdge = new ActivityEdgeInstance();&#xD;
    super.addOutgoingEdge(newEdge);&#xD;
    forkNodeActivation.addIncomingEdge(newEdge);&#xD;
}&#xD;
else {&#xD;
    forkNodeActivation = this.outgoingEdges.getValue(0).target;&#xD;
}&#xD;
&#xD;
forkNodeActivation.addOutgoingEdge(edge);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsQBRBEd-0fNU76fYmlA" name="edge" type="_17RIQRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsQRRBEd-0fNU76fYmlA" name="addPinActivation">
              <ownedComment xmi:id="_17HsQhRBEd-0fNU76fYmlA" annotatedElement="_17HsQRRBEd-0fNU76fYmlA">
                <body>// Add a pin activation to this action activation.&#xD;
&#xD;
this.pinActivations.addValue(pinActivation);&#xD;
pinActivation.actionActivation = this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsQxRBEd-0fNU76fYmlA" name="pinActivation" type="_17Hr1xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsRBRBEd-0fNU76fYmlA" name="getPinActivation">
              <ownedComment xmi:id="_17HsRRRBEd-0fNU76fYmlA" annotatedElement="_17HsRBRBEd-0fNU76fYmlA">
                <body>// Precondition: The given pin is owned by the action of the action activation.&#xD;
// Return the pin activation corresponding to the given pin.&#xD;
&#xD;
PinActivation pinActivation = null;&#xD;
int i = 1;&#xD;
while (pinActivation == null &amp; i &lt;= this.pinActivations.size()) {&#xD;
    PinActivation thisPinActivation = this.pinActivations.getValue(i-1);&#xD;
    if (thisPinActivation.node == pin) {&#xD;
        pinActivation = thisPinActivation;&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return pinActivation;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsRhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17Hr1xRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17HsRxRBEd-0fNU76fYmlA" name="pin" type="_17RUwBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsSBRBEd-0fNU76fYmlA" name="putToken">
              <ownedComment xmi:id="_17HsSRRBEd-0fNU76fYmlA">
                <body>// Precondition: The action execution has fired and the given pin is owned by the action of the action execution.&#xD;
// Place a token for the given value on the pin activation corresponding to the given output pin.&#xD;
&#xD;
Debug.println(&quot;[putToken] node = &quot; + this.node.name);&#xD;
&#xD;
ObjectToken token = new ObjectToken();&#xD;
token.value = value;&#xD;
&#xD;
PinActivation pinActivation = this.getPinActivation(pin);&#xD;
pinActivation.addToken(token);&#xD;
</body>
              </ownedComment>
              <ownedComment xmi:id="_17HsShRBEd-0fNU76fYmlA">
                <body>// Precondition: The action execution has fired and the given pin is owned by the action of the action execution.&#xD;
// Place a token for the given value on the pin activation corresponding to the given output pin.&#xD;
&#xD;
Debug.println(&quot;[putToken] node = &quot; + this.node.name);&#xD;
&#xD;
ObjectToken token = new ObjectToken();&#xD;
token.value = value;&#xD;
PinActivation pinActivation = this.getPinActivation(pin);&#xD;
pinActivation.addToken(token);&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsSxRBEd-0fNU76fYmlA" name="pin" type="_17RUvRRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsTBRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsTRRBEd-0fNU76fYmlA" name="putTokens">
              <ownedComment xmi:id="_17HsThRBEd-0fNU76fYmlA" annotatedElement="_17HsTRRBEd-0fNU76fYmlA">
                <body>// Precondition: The action execution has fired and the given pin is owned by the action of the action execution.&#xD;
// Place tokens for the given values on the pin activation corresponding to the given output pin.&#xD;
&#xD;
// Debug.println(&quot;[putTokens] node = &quot; + this.node.name);&#xD;
&#xD;
for (int i = 0; i &lt; values.size(); i++) {&#xD;
    Value value = values.getValue(i);&#xD;
    this.putToken(pin, value);&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsTxRBEd-0fNU76fYmlA" name="pin" type="_17RUvRRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsUBRBEd-0fNU76fYmlA" name="values" type="_17RKJhRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HsURRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HsUhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsUxRBEd-0fNU76fYmlA" name="getTokens">
              <ownedComment xmi:id="_17HsVBRBEd-0fNU76fYmlA">
                <body>// Precondition: The action execution has fired and the given pin is owned by the action of the action execution.&#xD;
// Get any tokens held by the pin activation corresponding to the given input pin and return them &#xD;
// (but leave the tokens on the pin).&#xD;
&#xD;
Debug.println(&quot;[getTokens] node = &quot; + this.node.name + &quot;, pin = &quot; + pin.name);&#xD;
&#xD;
PinActivation pinActivation = this.getPinActivation(pin);&#xD;
TokenList tokens = pinActivation.getUnofferedTokens();&#xD;
&#xD;
ValueList values = new ValueList();&#xD;
for (int i = 0; i &lt; tokens.size(); i++) {&#xD;
    Token token = tokens.getValue(i);&#xD;
    Value value = ((ObjectToken)token).value;&#xD;
    if (value != null) {&#xD;
        values.addValue(value);&#xD;
    }&#xD;
}&#xD;
&#xD;
return values;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsVRRBEd-0fNU76fYmlA" name="pin" type="_17RU1hRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsVhRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HsVxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HsWBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsWRRBEd-0fNU76fYmlA" name="takeTokens">
              <ownedComment xmi:id="_17HsWhRBEd-0fNU76fYmlA" annotatedElement="_17HsWRRBEd-0fNU76fYmlA">
                <body>// Precondition: The action execution has fired and the given pin is owned by the action of the action execution.&#xD;
// Take any tokens held by the pin activation corresponding to the given input pin and return them.&#xD;
&#xD;
Debug.println(&quot;[takeTokens] node = &quot; + this.node.name + &quot;, pin = &quot; + pin.name);&#xD;
&#xD;
PinActivation pinActivation = this.getPinActivation(pin);&#xD;
TokenList tokens = pinActivation.takeUnofferedTokens();&#xD;
&#xD;
ValueList values = new ValueList();&#xD;
for (int i = 0; i &lt; tokens.size(); i++) {&#xD;
    Token token = tokens.getValue(i);&#xD;
    Value value = ((ObjectToken)token).value;&#xD;
    if (value != null) {&#xD;
        values.addValue(value);&#xD;
    }&#xD;
}&#xD;
&#xD;
return values;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsWxRBEd-0fNU76fYmlA" name="pin" type="_17RU1hRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsXBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HsXRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HsXhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsXxRBEd-0fNU76fYmlA" name="isSourceFor">
              <ownedComment xmi:id="_17HsYBRBEd-0fNU76fYmlA" annotatedElement="_17HsXxRBEd-0fNU76fYmlA">
                <body>// If this action has an outgoing fork node, check that the fork node is the source of the given edge instance.&#xD;
&#xD;
boolean isSource = false;&#xD;
if (this.outgoingEdges.size() > 0) {&#xD;
    isSource = this.outgoingEdges.getValue(0).target.isSourceFor(edgeInstance);&#xD;
}&#xD;
&#xD;
return isSource;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsYRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17HsYhRBEd-0fNU76fYmlA" name="edgeInstance" type="_17RIQRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsYxRBEd-0fNU76fYmlA" name="valueParticipatesInLink">
              <ownedComment xmi:id="_17HsZBRBEd-0fNU76fYmlA" annotatedElement="_17HsYxRBEd-0fNU76fYmlA">
                <body>// Test if the given value participates in the given link.&#xD;
&#xD;
FeatureValueList linkFeatureValues = link.getFeatureValues();&#xD;
&#xD;
boolean participates = false;&#xD;
int i = 1;&#xD;
while (!participates &amp; i &lt;= linkFeatureValues.size()) {&#xD;
    participates = linkFeatureValues.getValue(i-1).values.getValue(0).equals(value);&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return participates;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsZRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17HsZhRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsZxRBEd-0fNU76fYmlA" name="link" type="_17RLCRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsaBRBEd-0fNU76fYmlA" name="makeBooleanValue">
              <ownedComment xmi:id="_17HsaRRBEd-0fNU76fYmlA" annotatedElement="_17HsaBRBEd-0fNU76fYmlA">
                <body>// Make a Boolean value using the built-in Boolean primitive type.&#xD;
// [This ensures that Boolean values created internally are the same as the default used for evaluating Boolean literals.]&#xD;
&#xD;
LiteralBoolean booleanLiteral = new LiteralBoolean();&#xD;
booleanLiteral.value = value;&#xD;
return (BooleanValue)(this.getExecutionLocus().executor.evaluate(booleanLiteral));&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsahRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RL0xRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17HsaxRBEd-0fNU76fYmlA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17HsbBRBEd-0fNU76fYmlA" name="A_pinActivations_actionActivation" memberEnd="_17HsHhRBEd-0fNU76fYmlA _17Hr2xRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17HsbRRBEd-0fNU76fYmlA" name="A_callExecutions_callActionActivation" memberEnd="_17Hr_hRBEd-0fNU76fYmlA _17HsbhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17HsbhRBEd-0fNU76fYmlA" visibility="private" type="_17Hr-hRBEd-0fNU76fYmlA" association="_17HsbRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HsbxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HscBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17HscRRBEd-0fNU76fYmlA" name="IntermediateActions">
          <packageImport xmi:id="_17HschRBEd-0fNU76fYmlA" importedPackage="_17HrxxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17HscxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17HsdBRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17HsdRRBEd-0fNU76fYmlA" importedPackage="_17RVZxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17HsdhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17HsdxRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HseBRBEd-0fNU76fYmlA" name="WriteLinkActionActivation" isAbstract="true">
            <ownedComment xmi:id="_17HseRRBEd-0fNU76fYmlA" annotatedElement="_17HseBRBEd-0fNU76fYmlA">
              <body>A write link action activation is a link action activation for a write link action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsehRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HsexRBEd-0fNU76fYmlA" general="_17HswxRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HsfBRBEd-0fNU76fYmlA" name="WriteStructuralFeatureActionActivation" isAbstract="true">
            <ownedComment xmi:id="_17HsfRRBEd-0fNU76fYmlA" annotatedElement="_17HsfBRBEd-0fNU76fYmlA">
              <body>A write structural feature action activation is a structural feature action activation for a write structural feature action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsfhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HsfxRBEd-0fNU76fYmlA" general="_17HslBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HsgBRBEd-0fNU76fYmlA" name="position">
              <ownedComment xmi:id="_17HsgRRBEd-0fNU76fYmlA" annotatedElement="_17HsgBRBEd-0fNU76fYmlA">
                <body>// Return the position (counting from 1) of the first occurance of the given value in the given list at or after the starting index, or 0 if it is not found.&#xD;
&#xD;
boolean found = false;&#xD;
int i = startAt;&#xD;
while (!found &amp; i &lt;= list.size()) {&#xD;
    found = list.getValue(i-1).equals(value);&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
if (!found) {&#xD;
    i = 1;&#xD;
}&#xD;
&#xD;
return i - 1;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsghRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17HsgxRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HshBRBEd-0fNU76fYmlA" name="list" type="_17RKJhRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HshRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HshhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17HshxRBEd-0fNU76fYmlA" name="startAt">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HsiBRBEd-0fNU76fYmlA" name="ValueSpecificationActionActivation">
            <ownedComment xmi:id="_17HsiRRBEd-0fNU76fYmlA" annotatedElement="_17HsiBRBEd-0fNU76fYmlA">
              <body>A value specification action activation is an action activation for a value specification action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsihRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HsixRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HsjBRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HsjRRBEd-0fNU76fYmlA" annotatedElement="_17HsjBRBEd-0fNU76fYmlA">
                <body>// Evaluate the value specification for the action and place the result on the result pin of the action.&#xD;
&#xD;
ValueSpecificationAction action = (ValueSpecificationAction)(this.node);&#xD;
&#xD;
Value value = this.getExecutionLocus().executor.evaluate(action.value);&#xD;
this.putToken(action.result, value);&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HsjhRBEd-0fNU76fYmlA" name="TestIdentityActionActivation">
            <ownedComment xmi:id="_17HsjxRBEd-0fNU76fYmlA" annotatedElement="_17HsjhRBEd-0fNU76fYmlA">
              <body>A test identity action activation is an action activation for a test identity action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HskBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HskRRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HskhRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HskxRBEd-0fNU76fYmlA" annotatedElement="_17HskhRBEd-0fNU76fYmlA">
                <body>// Get the values from the first and second input pins and test if they are equal. (Note the equality of references is defined to be that they have identical referents.)&#xD;
// If they are equal, place true on the pin execution for the result output pin, otherwise place false.&#xD;
&#xD;
TestIdentityAction action = (TestIdentityAction)(this.node);&#xD;
&#xD;
Value firstValue = this.takeTokens(action.first).getValue(0);&#xD;
Value secondValue = this.takeTokens(action.second).getValue(0);&#xD;
&#xD;
Value testResult = this.makeBooleanValue(firstValue.equals(secondValue));&#xD;
this.putToken(action.result, testResult);&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HslBRBEd-0fNU76fYmlA" name="StructuralFeatureActionActivation" isAbstract="true">
            <ownedComment xmi:id="_17HslRRBEd-0fNU76fYmlA" annotatedElement="_17HslBRBEd-0fNU76fYmlA">
              <body>A structural feature action activation is an action activation for a structural feature action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HslhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HslxRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HsmBRBEd-0fNU76fYmlA" name="getAssociation">
              <ownedComment xmi:id="_17HsmRRBEd-0fNU76fYmlA">
                <body>// If the structural feature for the action of this activation is an association end,&#xD;
// then get the associated association.&#xD;
&#xD;
Association association = null;&#xD;
if (feature instanceof Property) {&#xD;
    association = ((Property)feature).association;&#xD;
}&#xD;
&#xD;
return association;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsmhRBEd-0fNU76fYmlA" name="feature" type="_17RO1BRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsmxRBEd-0fNU76fYmlA" name="Parameter1" type="_17RRrhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HsnBRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HsnRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsnhRBEd-0fNU76fYmlA" name="getMatchingLinks">
              <ownedComment xmi:id="_17HsnxRBEd-0fNU76fYmlA">
                <body>// Get the links of the given binary association whose end opposite &#xD;
// to the given end has the given value&#xD;
&#xD;
Property oppositeEnd = this.getOppositeEnd(association, end);&#xD;
&#xD;
ExtensionalValueList extent = this.getExecutionLocus().getExtent(association);&#xD;
&#xD;
LinkList links = new LinkList();&#xD;
for (int i = 0; i&lt;extent.size(); i++) {&#xD;
    ExtensionalValue link = extent.getValue(i);&#xD;
    if (link.getFeatureValue(oppositeEnd).values.getValue(0).equals(oppositeValue)) {&#xD;
        if (!end.multiplicityElement.isOrdered | links.size() == 0) {&#xD;
            links.addValue((Link)link);&#xD;
        } else {&#xD;
            int n = link.getFeatureValue(end).position;&#xD;
            boolean continueSearching = true;&#xD;
            int j = 0;&#xD;
            while (continueSearching &amp; j &lt; links.size()) {&#xD;
                j = j + 1;&#xD;
                continueSearching = links.getValue(j-1).getFeatureValue(end).position &lt; n;&#xD;
            }&#xD;
            links.addValue(j-1, (Link)link);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
return links;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsoBRBEd-0fNU76fYmlA" name="association" type="_17RRrhRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsoRRBEd-0fNU76fYmlA" name="end" type="_17RO1BRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsohRBEd-0fNU76fYmlA" name="oppositeValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsoxRBEd-0fNU76fYmlA" name="Parameter1" type="_17RLCRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HspBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HspRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HsphRBEd-0fNU76fYmlA" name="getOppositeEnd">
              <ownedComment xmi:id="_17HspxRBEd-0fNU76fYmlA">
                <body>// Get the end of a binary association opposite to the given end.&#xD;
&#xD;
Property oppositeEnd = association.memberEnd.getValue(0);&#xD;
if (oppositeEnd == end) {&#xD;
   oppositeEnd = association.memberEnd.getValue(1);&#xD;
}&#xD;
&#xD;
return oppositeEnd;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsqBRBEd-0fNU76fYmlA" name="association" type="_17RRrhRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsqRRBEd-0fNU76fYmlA" name="end" type="_17RO1BRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsqhRBEd-0fNU76fYmlA" name="Parameter1" type="_17RQZhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HsqxRBEd-0fNU76fYmlA" name="RemoveStructuralFeatureValueActionActivation">
            <ownedComment xmi:id="_17HsrBRBEd-0fNU76fYmlA" annotatedElement="_17HsqxRBEd-0fNU76fYmlA">
              <body>A remove structural feature action activation is a write structural feature action activation for a remove structural feature value action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsrRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HsrhRBEd-0fNU76fYmlA" general="_17HsfBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HsrxRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HssBRBEd-0fNU76fYmlA" annotatedElement="_17HsrxRBEd-0fNU76fYmlA">
                <body>// Get the values of the object and value input pins. &#xD;
// If the given feature is an association end, then destroy any matching links.&#xD;
// Otherwise, if the object input is a structural value, remove values from the given feature.&#xD;
// If isRemoveDuplicates is true, then destroy all current matching links or remove all values equal to the input value.&#xD;
// If isRemoveDuplicates is false and there is no removeAt input pin, remove any one feature value equal to the input value (if there are any that are equal).&#xD;
// If isRemoveDuplicates is false, and there is a removeAt input pin remove the feature value at that position.&#xD;
&#xD;
RemoveStructuralFeatureValueAction action = (RemoveStructuralFeatureValueAction)(this.node);&#xD;
StructuralFeature feature = action.structuralFeature;&#xD;
Association association = this.getAssociation(feature);&#xD;
&#xD;
Value value = this.takeTokens(action.object).getValue(0);&#xD;
&#xD;
Value inputValue = null;&#xD;
if (action.value != null) {&#xD;
    // NOTE: Multiplicity of the value input pin is required to be 1..1.&#xD;
    inputValue = this.takeTokens(action.value).getValue(0);&#xD;
}&#xD;
&#xD;
int removeAt = 0;&#xD;
if (action.removeAt != null) {&#xD;
    removeAt = ((UnlimitedNaturalValue)this.takeTokens(action.removeAt).getValue(0)).value.naturalValue;&#xD;
}&#xD;
&#xD;
if (association != null) {&#xD;
    LinkList links = this.getMatchingLinks(association, feature, value);&#xD;
&#xD;
    if (action.isRemoveDuplicates) {&#xD;
        for (int i = 0; i &lt; links.size(); i++) {&#xD;
            Link link = links.getValue(i);&#xD;
            link.destroy();&#xD;
        }&#xD;
&#xD;
    } else if (action.removeAt == null) {&#xD;
        // *** If there is more than one matching link, non-deterministically choose one. ***&#xD;
        if (links.size() > 0) {&#xD;
            int i = ((ChoiceStrategy)this.getExecutionLocus().factory.getStrategy(&quot;choice&quot;)).choose(links.size());&#xD;
            links.getValue(i-1).destroy();&#xD;
        }&#xD;
&#xD;
    } else {&#xD;
        boolean notFound = true;&#xD;
        int i = 1;&#xD;
        while (notFound &amp; i &lt; links.size()) {&#xD;
            Link link = links.getValue(i-1);&#xD;
            if (link.getFeatureValue(feature).position == removeAt) {&#xD;
                notFound = false;&#xD;
                link.destroy();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
&#xD;
} else if (value instanceof StructuredValue) {&#xD;
    FeatureValue featureValue = ((StructuredValue)value).getFeatureValue(action.structuralFeature);&#xD;
&#xD;
    if (action.isRemoveDuplicates) {&#xD;
        int j = this.position(inputValue, featureValue.values, 1);&#xD;
        while (j > 0) {&#xD;
            featureValue.values.remove(j-1);&#xD;
            j = this.position(inputValue, featureValue.values, j);&#xD;
        }&#xD;
&#xD;
    } else if (action.removeAt == null) {&#xD;
        intList positions = new intList();&#xD;
        int j = this.position(inputValue, featureValue.values, 1);&#xD;
        while (j > 0) {&#xD;
           positions.addValue(j);&#xD;
            j = this.position(inputValue, featureValue.values, j);&#xD;
        }&#xD;
&#xD;
        if (positions.size()>0) {&#xD;
            // *** Nondeterministically choose which value to remove. ***&#xD;
            int k =  ((ChoiceStrategy)this.getExecutionLocus().factory.getStrategy(&quot;choice&quot;)).choose(positions.size());&#xD;
            featureValue.values.remove(positions.getValue(k-1) - 1);&#xD;
        }&#xD;
&#xD;
    } else {&#xD;
        if (featureValue.values.size()&lt;= removeAt) {&#xD;
            featureValue.values.remove(removeAt-1);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
if (action.result != null) {&#xD;
    this.putToken(action.result, value);&#xD;
}&#xD;
&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HssRRBEd-0fNU76fYmlA" name="ReadLinkActionActivation">
            <ownedComment xmi:id="_17HsshRBEd-0fNU76fYmlA" annotatedElement="_17HssRRBEd-0fNU76fYmlA">
              <body>A read link action activation is a link action activation for a read link action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HssxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HstBRBEd-0fNU76fYmlA" general="_17HswxRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HstRRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HsthRBEd-0fNU76fYmlA" annotatedElement="_17HstRRBEd-0fNU76fYmlA">
                <body>// Get the extent, at the current execution locus, of the association to which the action applies.&#xD;
// For all links that match the link end data, place the value of the remaining &quot;open&quot; end on the result pin.&#xD;
&#xD;
ReadLinkAction action = (ReadLinkAction)(this.node);&#xD;
LinkEndDataList endDataList = action.endData;&#xD;
LinkEndData openEnd = null;&#xD;
&#xD;
int i = 1;&#xD;
while((openEnd == null) &amp; i &lt;= endDataList.size()) {&#xD;
    if (endDataList.getValue(i-1).value == null) {&#xD;
        openEnd = endDataList.getValue(i-1);&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
ExtensionalValueList extent = this.getExecutionLocus().getExtent(this.getAssociation());&#xD;
&#xD;
FeatureValueList featureValues = new FeatureValueList();&#xD;
for (int j = 0; j &lt; extent.size(); j++) {&#xD;
    ExtensionalValue value = extent.getValue(j);&#xD;
    Link link = (Link)value;&#xD;
    if (this.linkMatchesEndData(link, endDataList)) {&#xD;
        FeatureValue featureValue = link.getFeatureValue(openEnd.end);&#xD;
        if (!openEnd.end.multiplicityElement.isOrdered | featureValues.size() == 0) {&#xD;
            featureValues.addValue(featureValue);&#xD;
        } else {&#xD;
            int n = featureValue.position;&#xD;
            boolean continueSearching = true;&#xD;
            int k = 0;&#xD;
            while (continueSearching &amp; k &lt; featureValues.size()) {&#xD;
                k = k + 1;&#xD;
                continueSearching = featureValues.getValue(k-1).position &lt; n;&#xD;
            }&#xD;
            featureValues.addValue(k-1, featureValue);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
       &#xD;
&#xD;
for (int j = 0; j &lt; featureValues.size(); j++) {&#xD;
    FeatureValue featureValue = featureValues.getValue(j);&#xD;
    this.putToken(action.result, featureValue.values.getValue(0));&#xD;
}&#xD;
&#xD;
// Now that matching is done, ensure that all tokens on end data input pins&#xD;
// are consumed.&#xD;
for (int k=0; k&lt;endDataList.size(); k++) {&#xD;
    LinkEndData endData = endDataList.getValue(k);&#xD;
    if (endData.value != null) {&#xD;
          this.takeTokens(endData.value);&#xD;
    }&#xD;
}&#xD;
&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HstxRBEd-0fNU76fYmlA" name="ReadSelfActionActivation">
            <ownedComment xmi:id="_17HsuBRBEd-0fNU76fYmlA" annotatedElement="_17HstxRBEd-0fNU76fYmlA">
              <body>A read self action activation is an action activation for a read self action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsuRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HsuhRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HsuxRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HsvBRBEd-0fNU76fYmlA" annotatedElement="_17HsuxRBEd-0fNU76fYmlA">
                <body>// Get the context object of the activity execution containing this action activation and place a reference to it on the result output pin.&#xD;
&#xD;
// Debug.println(&quot;[ReadSelfActionActivation] Start...&quot;);&#xD;
&#xD;
Reference context = new Reference();&#xD;
context.referent = this.getExecutionContext();&#xD;
&#xD;
// Debug.println(&quot;[ReadSelfActionActivation] context object = &quot; + context.referent);&#xD;
&#xD;
OutputPin resultPin = ((ReadSelfAction)(this.node)).result;&#xD;
this.putToken(resultPin, context);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HsvRRBEd-0fNU76fYmlA" name="ReadStructuralFeatureActionActivation">
            <ownedComment xmi:id="_17HsvhRBEd-0fNU76fYmlA" annotatedElement="_17HsvRRBEd-0fNU76fYmlA">
              <body>A read structural feature action activation is an action activation for a read structural feature action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsvxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HswBRBEd-0fNU76fYmlA" general="_17HslBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HswRRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HswhRBEd-0fNU76fYmlA" annotatedElement="_17HswRRBEd-0fNU76fYmlA">
                <body>// Get the value of the object input pin. &#xD;
// If the given feature is an association end, then get all values of the that end.&#xD;
// for which the opposite end has the object input value and place them on the result pin.&#xD;
// Otherwise, if the object input value is a structural value, then get the values &#xD;
// of the appropriate feature of the input value and place them on the result output pin.&#xD;
&#xD;
ReadStructuralFeatureAction action = (ReadStructuralFeatureAction)(this.node);&#xD;
StructuralFeature feature = action.structuralFeature;&#xD;
Association association = this.getAssociation(feature);&#xD;
&#xD;
Value value = this.takeTokens(action.object).getValue(0);&#xD;
ValueList resultValues = new ValueList();&#xD;
&#xD;
if (association != null) {&#xD;
    LinkList links = this.getMatchingLinks(association, feature, value);&#xD;
    for (int i = 0; i &lt; links.size(); i++) {&#xD;
        Link link = links.getValue(i);&#xD;
        resultValues.addValue(link.getFeatureValue(feature).values.getValue(0));&#xD;
    }&#xD;
} else if (value instanceof StructuredValue) {&#xD;
//    Debug.println(&quot;[ReadStructuralFeatureActionActivation] value = &quot; + value +&quot;, structural feature = &quot; + feature.name);&#xD;
    resultValues = ((StructuredValue)value).getFeatureValue(feature).values;&#xD;
}&#xD;
&#xD;
this.putTokens(action.result, resultValues);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HswxRBEd-0fNU76fYmlA" name="LinkActionActivation" isAbstract="true">
            <ownedComment xmi:id="_17HsxBRBEd-0fNU76fYmlA" annotatedElement="_17HswxRBEd-0fNU76fYmlA">
              <body>A link action activation is an action activation for a link action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HsxRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HsxhRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HsxxRBEd-0fNU76fYmlA" name="linkMatchesEndData">
              <ownedComment xmi:id="_17HsyBRBEd-0fNU76fYmlA" annotatedElement="_17HsxxRBEd-0fNU76fYmlA">
                <body>// Test whether the given link matches the given end data.&#xD;
&#xD;
boolean matches = true;&#xD;
int i = 1;&#xD;
while (matches &amp; i &lt;= endDataList.size()) {&#xD;
    matches = this.endMatchesEndData(link, endDataList.getValue(i-1));&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return matches;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HsyRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17HsyhRBEd-0fNU76fYmlA" name="link" type="_17RLCRRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HsyxRBEd-0fNU76fYmlA" name="endDataList" type="_17RWBxRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HszBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HszRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HszhRBEd-0fNU76fYmlA" name="endMatchesEndData">
              <ownedComment xmi:id="_17HszxRBEd-0fNU76fYmlA" annotatedElement="_17HszhRBEd-0fNU76fYmlA">
                <body>// Test whether the appropriate end of the given link matches the given end data.&#xD;
&#xD;
boolean matches = false;&#xD;
if (endData.value == null) {&#xD;
    matches = true;&#xD;
} else {&#xD;
    Property end = endData.end;&#xD;
    FeatureValue linkFeatureValue = link.getFeatureValue(end);&#xD;
    Value endValue = this.getTokens(endData.value).getValue(0);&#xD;
    if (endData instanceof LinkEndDestructionData) {&#xD;
            if (!((LinkEndDestructionData)endData).isDestroyDuplicates &amp; !end.multiplicityElement.isUnique &amp; end.multiplicityElement.isOrdered)  {&#xD;
                int destroyAt = ((UnlimitedNaturalValue)(this.getTokens(((LinkEndDestructionData)endData).destroyAt).getValue(0))).value.naturalValue;&#xD;
                matches = linkFeatureValue.values.getValue(0).equals(endValue) &amp;&amp; linkFeatureValue.position == destroyAt;&#xD;
            } else {&#xD;
                matches = linkFeatureValue.values.getValue(0).equals(endValue);&#xD;
            }&#xD;
    } else {&#xD;
        matches =  linkFeatureValue.values.getValue(0).equals(endValue);&#xD;
    }&#xD;
}&#xD;
&#xD;
return matches;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17Hs0BRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17Hs0RRBEd-0fNU76fYmlA" name="link" type="_17RLCRRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17Hs0hRBEd-0fNU76fYmlA" name="endData" type="_17RWBxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17Hs0xRBEd-0fNU76fYmlA" name="getAssociation">
              <ownedComment xmi:id="_17Hs1BRBEd-0fNU76fYmlA" annotatedElement="_17Hs0xRBEd-0fNU76fYmlA">
                <body>// Get the association for the link action of this activation.&#xD;
&#xD;
return (Association)(((LinkAction)(this.node)).endData.getValue(0).end.association);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17Hs1RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRrhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hs1hRBEd-0fNU76fYmlA" name="DestroyLinkActionActivation">
            <ownedComment xmi:id="_17Hs1xRBEd-0fNU76fYmlA" annotatedElement="_17Hs1hRBEd-0fNU76fYmlA">
              <body>A destroy link action activation is a write link action activation for a destroy link action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hs2BRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hs2RRBEd-0fNU76fYmlA" general="_17HseBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17Hs2hRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17Hs2xRBEd-0fNU76fYmlA" annotatedElement="_17Hs2hRBEd-0fNU76fYmlA">
                <body>// Get the extent, at the current execution locus, of the association for which links are being destroyed.&#xD;
// Destroy all links that match the given link end destruction data.&#xD;
// For unique ends, or non-unique ends for which isDestroyDuplicates is true, match links with a matching value for that end.&#xD;
// For non-unique, ordered ends for which isDestroyDuplicates is false, match links with an end value at the given destroyAt position. [Must a value be given, too, in this case?]&#xD;
// For non-unique, non-ordered ends for which isDestroyDuplicates is false, pick one matching link (if any) non-deterministically. [The semantics of this case is not clear from the current spec.]&#xD;
&#xD;
Debug.println(&quot;[doAction] DestroyLinkAction...&quot;);&#xD;
&#xD;
DestroyLinkAction action = (DestroyLinkAction)(this.node);&#xD;
LinkEndDestructionDataList destructionDataList = action.endData;&#xD;
&#xD;
Debug.println(&quot;[doAction] end data size = &quot; + destructionDataList.size());&#xD;
&#xD;
boolean destroyOnlyOne = false;&#xD;
int j = 1;&#xD;
while (!destroyOnlyOne &amp; j &lt;= destructionDataList.size()) {&#xD;
    LinkEndDestructionData endData = destructionDataList.getValue(j-1);&#xD;
    destroyOnlyOne = !endData.end.multiplicityElement.isUnique &amp; !endData.end.multiplicityElement.isOrdered &amp; !endData.isDestroyDuplicates;&#xD;
    j = j + 1;&#xD;
}&#xD;
&#xD;
LinkEndDataList endDataList = new LinkEndDataList();&#xD;
for (int i = 0; i &lt; destructionDataList.size(); i++) {&#xD;
    LinkEndDestructionData endData = destructionDataList.getValue(i);&#xD;
    Debug.println(&quot;[doAction] Matching end = &quot; + endData.end.name);&#xD;
    endDataList.addValue(endData);&#xD;
}&#xD;
&#xD;
ExtensionalValueList extent = this.getExecutionLocus().getExtent(this.getAssociation());&#xD;
ExtensionalValueList matchingLinks = new ExtensionalValueList();&#xD;
&#xD;
for (int i = 0; i &lt; extent.size(); i++) {&#xD;
    ExtensionalValue value = extent.getValue(i);&#xD;
    Link link = (Link)value;&#xD;
    if (this.linkMatchesEndData(link, endDataList)) {&#xD;
        matchingLinks.addValue(link);&#xD;
    }&#xD;
}&#xD;
&#xD;
// Now that matching is done, ensure that all tokens on end data input pins&#xD;
// are consumed.&#xD;
for (int i = 0; i &lt; destructionDataList.size(); i++) {&#xD;
    LinkEndDestructionData endData = destructionDataList.getValue(i);&#xD;
    Property end = endData.end;&#xD;
    if (!endData.isDestroyDuplicates&#xD;
        &amp; !end.multiplicityElement.isUnique &amp; end.multiplicityElement.isOrdered) {&#xD;
        this.takeTokens(endData.destroyAt);&#xD;
    }&#xD;
    Debug.println(&quot;[doAction] Consuming tokens for end &quot; + end.name);&#xD;
    this.takeTokens(endData.value);&#xD;
}&#xD;
&#xD;
if (destroyOnlyOne) {&#xD;
    // *** If there is more than one matching link, non-deterministically choose one. ***&#xD;
    if (matchingLinks.size() > 0) {&#xD;
        int i = ((ChoiceStrategy)this.getExecutionLocus().factory.getStrategy(&quot;choice&quot;)).choose(matchingLinks.size());&#xD;
       matchingLinks.getValue(i-1).destroy();&#xD;
    }&#xD;
} else {&#xD;
    for (int i = 0; i &lt; matchingLinks.size(); i++) {&#xD;
        ExtensionalValue matchingLink = matchingLinks.getValue(i);&#xD;
        matchingLink.destroy();&#xD;
    }&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hs3BRBEd-0fNU76fYmlA" name="DestroyObjectActionActivation">
            <ownedComment xmi:id="_17Hs3RRBEd-0fNU76fYmlA" annotatedElement="_17Hs3BRBEd-0fNU76fYmlA">
              <body>A destroy object action activation is an action activation for a destroy object action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hs3hRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hs3xRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17Hs4BRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17Hs4RRBEd-0fNU76fYmlA" annotatedElement="_17Hs4BRBEd-0fNU76fYmlA">
                <body>// Get the value on the target input pin.&#xD;
// If the value is not a reference, then the action has no effect. Otherwise, do the following.&#xD;
// If isDestroyLinks is true, destroy all links in which the referent participates.&#xD;
// If isDestroyOwnedObjects is true, destroy all objects owned by the referent via composition links.&#xD;
// Destroy the referent object.&#xD;
&#xD;
DestroyObjectAction action = (DestroyObjectAction)(this.node);&#xD;
Value value = this.takeTokens(action.target).getValue(0);&#xD;
&#xD;
this.destroyObject(value, action.isDestroyLinks, action.isDestroyOwnedObjects);&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17Hs4hRBEd-0fNU76fYmlA" name="destroyObject">
              <ownedComment xmi:id="_17Hs4xRBEd-0fNU76fYmlA" annotatedElement="_17Hs4hRBEd-0fNU76fYmlA">
                <body>// If the given value is a reference, then destroy the referenced object, per the given destroy action attribute values.&#xD;
&#xD;
// Debug.println(&quot;[destroyObject] object = &quot; + value.objectId());&#xD;
&#xD;
if (value instanceof Reference) {&#xD;
    Reference reference = (Reference)value;&#xD;
&#xD;
    if (isDestroyLinks | isDestroyOwnedObjects) {&#xD;
        Debug.println(&quot;[destroyObject] Destroying links...&quot;);&#xD;
        ExtensionalValueList extensionalValues = this.getExecutionLocus().extensionalValues;&#xD;
        for (int i = 0; i &lt; extensionalValues.size(); i++) {&#xD;
            ExtensionalValue extensionalValue = extensionalValues.getValue(i);&#xD;
            if (extensionalValue instanceof Link) {&#xD;
                Link link = (Link)extensionalValue;&#xD;
                if (this.valueParticipatesInLink(reference, link)) {&#xD;
                    if (isDestroyLinks | this.objectIsComposite(reference, link)) {&#xD;
                        // Debug.println(&quot;[destroyObject] Destroying link &quot; + link.objectId());&#xD;
                        link.destroy();&#xD;
                    }&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
&#xD;
    if (isDestroyOwnedObjects) {&#xD;
        Debug.println(&quot;[destroyObject] Destroying owned objects...&quot;);&#xD;
        FeatureValueList objectFeatureValues = reference.getFeatureValues();&#xD;
        for (int i = 0; i &lt; objectFeatureValues.size(); i++) {&#xD;
            FeatureValue featureValue = objectFeatureValues.getValue(i);&#xD;
            if (((Property)featureValue.feature).aggregation == AggregationKind.composite) {&#xD;
                ValueList values = featureValue.values;&#xD;
                for (int j = 0; j &lt; values.size(); j++) {&#xD;
                    Value ownedValue = values.getValue(j);&#xD;
                    this.destroyObject(ownedValue, isDestroyLinks, isDestroyOwnedObjects);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
&#xD;
    reference.destroy();&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17Hs5BRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17Hs5RRBEd-0fNU76fYmlA" name="isDestroyLinks">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17Hs5hRBEd-0fNU76fYmlA" name="isDestroyOwnedObjects">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17Hs5xRBEd-0fNU76fYmlA" name="objectIsComposite">
              <ownedComment xmi:id="_17Hs6BRBEd-0fNU76fYmlA" annotatedElement="_17Hs5xRBEd-0fNU76fYmlA">
                <body>// Test whether the given reference participates in the given link as a composite.&#xD;
&#xD;
FeatureValueList linkFeatureValues = link.getFeatureValues();&#xD;
&#xD;
boolean isComposite = false;&#xD;
int i = 1;&#xD;
while (!isComposite &amp; i &lt;= linkFeatureValues.size()) {&#xD;
    FeatureValue featureValue = linkFeatureValues.getValue(i-1);&#xD;
    if (!featureValue.values.getValue(0).equals(reference) &amp;&#xD;
       ((Property)featureValue.feature).aggregation == AggregationKind.composite) {&#xD;
         isComposite = true;&#xD;
    }&#xD;
}&#xD;
&#xD;
return isComposite;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17Hs6RRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17Hs6hRBEd-0fNU76fYmlA" name="reference" type="_17RKWxRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17Hs6xRBEd-0fNU76fYmlA" name="link" type="_17RLCRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hs7BRBEd-0fNU76fYmlA" name="CreateLinkActionActivation">
            <ownedComment xmi:id="_17Hs7RRBEd-0fNU76fYmlA" annotatedElement="_17Hs7BRBEd-0fNU76fYmlA">
              <body>A create link action activation is a write link action activation for a create link action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hs7hRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hs7xRBEd-0fNU76fYmlA" general="_17HseBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17Hs8BRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17Hs8RRBEd-0fNU76fYmlA" annotatedElement="_17Hs8BRBEd-0fNU76fYmlA">
                <body>// Get the extent at the current execution locus of the association for which a link is being created.&#xD;
// Destroy all links that have a value for any end for which isReplaceAll is true.&#xD;
// Create a new link for the association, at the current locus, with the given end data values, &#xD;
// inserted at the given insertAt position (for ordered ends).&#xD;
&#xD;
CreateLinkAction action = (CreateLinkAction)(this.node);&#xD;
LinkEndCreationDataList endDataList = action.endData;&#xD;
&#xD;
Association linkAssociation = this.getAssociation();&#xD;
ExtensionalValueList extent = this.getExecutionLocus().getExtent(linkAssociation);&#xD;
&#xD;
Link oldLink = null;&#xD;
for (int i = 0; i &lt; extent.size(); i++) {&#xD;
    ExtensionalValue value = extent.getValue(i);&#xD;
    Link link = (Link)value;&#xD;
&#xD;
    boolean noMatch = true;&#xD;
    int j = 1;&#xD;
    while (noMatch &amp; j &lt;= endDataList.size()) {&#xD;
        LinkEndCreationData endData = endDataList.getValue(j-1);&#xD;
        if (endData.isReplaceAll &amp; this.endMatchesEndData(link, endData)) {&#xD;
            oldLink = link;&#xD;
            link.destroy();&#xD;
            noMatch = false;&#xD;
        }&#xD;
        j = j + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
Link newLink = new Link();&#xD;
newLink.type = linkAssociation;&#xD;
&#xD;
// This necessary when setting a feature value with an insertAt position&#xD;
newLink.locus = this.getExecutionLocus(); &#xD;
&#xD;
for (int i = 0; i &lt; endDataList.size(); i++) {&#xD;
    LinkEndCreationData endData = endDataList.getValue(i);&#xD;
&#xD;
    int insertAt;&#xD;
    if (endData.insertAt == null) {&#xD;
        insertAt = 0;&#xD;
    } else {&#xD;
        insertAt = ((UnlimitedNaturalValue)(this.takeTokens(endData.insertAt).getValue(0))).value.naturalValue;&#xD;
        if (oldLink != null) {&#xD;
            if (oldLink.getFeatureValue(endData.end).position &lt; insertAt) {&#xD;
                insertAt = insertAt - 1;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    newLink.setFeatureValue(endData.end, this.takeTokens(endData.value), insertAt);&#xD;
}&#xD;
&#xD;
this.getExecutionLocus().add(newLink);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hs8hRBEd-0fNU76fYmlA" name="CreateObjectActionActivation">
            <ownedComment xmi:id="_17Hs8xRBEd-0fNU76fYmlA" annotatedElement="_17Hs8hRBEd-0fNU76fYmlA">
              <body>A create object action activation is an action activation for a create object action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hs9BRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hs9RRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17Hs9hRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17Hs9xRBEd-0fNU76fYmlA" annotatedElement="_17Hs9hRBEd-0fNU76fYmlA">
                <body>// Create an object with the given classifier (which must be a class) as its type, at the same locus as the action activation.&#xD;
// Place a reference to the object on the result pin of the action.&#xD;
&#xD;
CreateObjectAction action = (CreateObjectAction)(this.node);&#xD;
 &#xD;
Reference reference = new Reference();&#xD;
reference.referent = this.getExecutionLocus().instantiate((Class_)(action.classifier));&#xD;
&#xD;
this.putToken(action.result, reference);&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hs-BRBEd-0fNU76fYmlA" name="ClearAssociationActionActivation">
            <ownedComment xmi:id="_17Hs-RRBEd-0fNU76fYmlA" annotatedElement="_17Hs-BRBEd-0fNU76fYmlA">
              <body>A clear association action activation is an action activation for a clear association action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17Hs-hRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17Hs-xRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17Hs_BRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17Hs_RRBEd-0fNU76fYmlA" annotatedElement="_17Hs_BRBEd-0fNU76fYmlA">
                <body>// Get the extent, at the current execution locus, of the given association.&#xD;
// Read the object input pin. Destroy all links in which the object participates.&#xD;
&#xD;
ClearAssociationAction action = (ClearAssociationAction)(this.node);&#xD;
&#xD;
ExtensionalValueList extent = this.getExecutionLocus().getExtent(action.association);&#xD;
Value objectValue = this.takeTokens(action.object).getValue(0);&#xD;
&#xD;
for (int i = 0; i &lt; extent.size(); i++) {&#xD;
    Link link = (Link)(extent.getValue(i));&#xD;
    if (this.valueParticipatesInLink(objectValue, link)) {&#xD;
        link.destroy();&#xD;
    }&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17Hs_hRBEd-0fNU76fYmlA" name="ClearStructuralFeatureActionActivation">
            <ownedComment xmi:id="_17Hs_xRBEd-0fNU76fYmlA" annotatedElement="_17Hs_hRBEd-0fNU76fYmlA">
              <body>A clear structural feature action activation is a structural feature action activation for a clear structural feature action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtABRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtARRBEd-0fNU76fYmlA" general="_17HslBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HtAhRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtAxRBEd-0fNU76fYmlA" annotatedElement="_17HtAhRBEd-0fNU76fYmlA">
                <body>// Get the value of the object input pin. &#xD;
// If the given feature is an association end, then &#xD;
// destroy all links that have the object input on the opposite end.&#xD;
// Otherwise, if the object input is a structured value, then&#xD;
// set the appropriate feature of the input value to be empty.&#xD;
&#xD;
ClearStructuralFeatureAction action = (ClearStructuralFeatureAction)(this.node);&#xD;
StructuralFeature feature = action.structuralFeature;&#xD;
Association association = this.getAssociation(feature);&#xD;
&#xD;
Value value = this.takeTokens(action.object).getValue(0);&#xD;
&#xD;
if (association != null) {&#xD;
    LinkList links = this.getMatchingLinks(association, feature, value);&#xD;
    for (int i = 0; i &lt; links.size(); i++) {&#xD;
        Link link = links.getValue(i);&#xD;
        link.destroy();&#xD;
    }&#xD;
} else if (value instanceof StructuredValue) {&#xD;
    ((StructuredValue)value).setFeatureValue(action.structuralFeature, new ValueList(), 0);&#xD;
}&#xD;
&#xD;
if (action.result != null) {&#xD;
    this.putToken(action.result, value);&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtBBRBEd-0fNU76fYmlA" name="AddStructuralFeatureValueActionActivation">
            <ownedComment xmi:id="_17HtBRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtBhRBEd-0fNU76fYmlA" annotatedElement="_17HtBBRBEd-0fNU76fYmlA">
              <body>An add structural feature action value activation is a write structural feature action activation for an add structural feature value action.</body>
            </ownedComment>
            <generalization xmi:id="_17HtBxRBEd-0fNU76fYmlA" general="_17HsfBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HtCBRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtCRRBEd-0fNU76fYmlA" annotatedElement="_17HtCBRBEd-0fNU76fYmlA">
                <body>// Get the values of the object and value input pins. &#xD;
// If the given feature is an association end, then create a link between the object and value inputs.&#xD;
// Otherwise, if the object input is a structural value, then add a value to the values for the feature.&#xD;
// If isReplaceAll is true, first remove all current matching links or feature values.&#xD;
// If isReplaceAll is false and there is an insertAt pin, insert the value at the appropriate position.&#xD;
&#xD;
AddStructuralFeatureValueAction action = (AddStructuralFeatureValueAction)(this.node);&#xD;
StructuralFeature feature = action.structuralFeature;&#xD;
Association association = this.getAssociation(feature);&#xD;
&#xD;
Value value = this.takeTokens(action.object).getValue(0);&#xD;
ValueList inputValues = this.takeTokens(action.value);&#xD;
&#xD;
// NOTE: Multiplicity of the value input pin is required to be 1..1.&#xD;
Value inputValue = inputValues.getValue(0);&#xD;
&#xD;
int insertAt = 0;&#xD;
if (action.insertAt != null) {&#xD;
    insertAt = ((UnlimitedNaturalValue)this.takeTokens(action.insertAt).getValue(0)).value.naturalValue;&#xD;
}&#xD;
&#xD;
if (association != null) {&#xD;
    LinkList links = this.getMatchingLinks(association, feature, value);&#xD;
&#xD;
    Property oppositeEnd = this.getOppositeEnd(association, feature);&#xD;
    int position = 0;&#xD;
    if (oppositeEnd.multiplicityElement.isOrdered) {&#xD;
        position = -1;&#xD;
    }&#xD;
&#xD;
    if (action.isReplaceAll) {&#xD;
        for (int i = 0; i &lt; links.size(); i++) {&#xD;
            Link link = links.getValue(i);&#xD;
            link.destroy();&#xD;
        }&#xD;
    } else if (feature.multiplicityElement.isUnique) {&#xD;
         for (int i=0; i &lt; links.size(); i++) {&#xD;
            Link link = links.getValue(i);&#xD;
            FeatureValue featureValue = link.getFeatureValue(feature);&#xD;
            if (featureValue.values.getValue(0).equals(inputValue)) {&#xD;
                position = link.getFeatureValue(oppositeEnd).position;&#xD;
                if (insertAt > 0 &amp; featureValue.position &lt; insertAt) {&#xD;
                    insertAt = insertAt - 1;&#xD;
                }&#xD;
               link.destroy();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
&#xD;
    Link newLink = new Link();&#xD;
    newLink.type = association;&#xD;
&#xD;
    // This necessary when setting a feature value with an insertAt position&#xD;
    newLink.locus = this.getExecutionLocus(); &#xD;
&#xD;
    newLink.setFeatureValue(feature, inputValues, insertAt);&#xD;
&#xD;
    ValueList oppositeValues = new ValueList();&#xD;
    oppositeValues.addValue(value);&#xD;
    newLink.setFeatureValue(oppositeEnd, oppositeValues, position);&#xD;
&#xD;
    newLink.locus.add(newLink);&#xD;
&#xD;
} else if (value instanceof StructuredValue) {&#xD;
    StructuredValue structuredValue = (StructuredValue)value;&#xD;
            &#xD;
    if (action.isReplaceAll) {&#xD;
        structuredValue.setFeatureValue(feature, inputValues, 0);&#xD;
    } else {&#xD;
        FeatureValue featureValue = structuredValue.getFeatureValue(feature);&#xD;
&#xD;
        if (featureValue.values.size() > 0 &amp; insertAt == 0 ) {&#xD;
            // *** If there is no insertAt pin, then the structural feature must be unordered, and the insertion position is immaterial. ***&#xD;
            insertAt = ((ChoiceStrategy)this.getExecutionLocus().factory.getStrategy(&quot;choice&quot;)).choose(featureValue.values.size());&#xD;
        }&#xD;
&#xD;
        if (feature.multiplicityElement.isUnique) {&#xD;
            // Remove any existing value that duplicates the input value&#xD;
            int j = position(inputValue, featureValue.values, 1);&#xD;
            if (j > 0) {&#xD;
                featureValue.values.remove(j-1);&#xD;
                if (insertAt > 0 &amp; j &lt; insertAt) {&#xD;
                    insertAt = insertAt - 1;&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
&#xD;
        if (insertAt &lt;= 0) {  // Note: insertAt = -1 indicates an unlimited value of &quot;*&quot;&#xD;
            featureValue.values.addValue(inputValue);&#xD;
        } else {&#xD;
            featureValue.values.addValue(insertAt - 1, inputValue);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
if (action.result != null) {&#xD;
    this.putToken(action.result, value);&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17HtChRBEd-0fNU76fYmlA" name="CompleteActions">
          <packageImport xmi:id="_17HtCxRBEd-0fNU76fYmlA" importedPackage="_17HrxxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17HtDBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17HtDRRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17HtDhRBEd-0fNU76fYmlA" importedPackage="_17RW_xRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17HtDxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17HtEBRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtERRBEd-0fNU76fYmlA" name="StartClassifierBehaviorActionActivation">
            <ownedComment xmi:id="_17HtEhRBEd-0fNU76fYmlA" annotatedElement="_17HtERRBEd-0fNU76fYmlA">
              <body>A start classifier behavior action activation is an action activation for a start classifier behavior action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtExRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtFBRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HtFRRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtFhRBEd-0fNU76fYmlA" annotatedElement="_17HtFRRBEd-0fNU76fYmlA">
                <body>// Get the value on the object input pin. If it is not a reference, then do nothing.&#xD;
// Start the classifier behavior of the referent object for the classifier given as the type of the object input pin.&#xD;
// If the object input pin has no type, then start the classifier behaviors of all types of the referent object. [The required behavior in this case is not clear from the spec.]&#xD;
&#xD;
StartClassifierBehaviorAction action = (StartClassifierBehaviorAction)(this.node);&#xD;
&#xD;
Value object = this.takeTokens(action.object).getValue(0);&#xD;
&#xD;
if (object instanceof Reference) {&#xD;
    ((Reference)object).startBehavior((Class_)(action.object.typedElement.type), new ParameterValueList());&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtFxRBEd-0fNU76fYmlA" name="StartObjectBehaviorActionActivation">
            <ownedComment xmi:id="_17HtGBRBEd-0fNU76fYmlA" annotatedElement="_17HtFxRBEd-0fNU76fYmlA">
              <body>A start behavior action activation is an action activation for a start behavior action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtGRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtGhRBEd-0fNU76fYmlA" general="_17Hr7RRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HtGxRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtHBRBEd-0fNU76fYmlA" annotatedElement="_17HtGxRBEd-0fNU76fYmlA">
                <body>// Get the value on the object input pin. If it is not a reference, then do nothing.&#xD;
// Start the behavior of the referent object for the classifier given as the type of the object input pin, with parameter values taken from the argument input pins.&#xD;
// If the object input pin has no type, then start the classifier behaviors of all types of the referent object.&#xD;
&#xD;
StartObjectBehaviorAction action = (StartObjectBehaviorAction)(this.node);&#xD;
&#xD;
Value object = this.takeTokens(action.object).getValue(0);&#xD;
&#xD;
if (object instanceof Reference) {&#xD;
    Class_ type = (Class_)(action.object.typedElement.type);&#xD;
    InputPinList argumentPins = action.argument;&#xD;
&#xD;
    ParameterValueList inputs = new ParameterValueList();&#xD;
&#xD;
    if (type != null) {&#xD;
        Behavior behavior;&#xD;
&#xD;
        if (type instanceof Behavior) {&#xD;
            behavior = (Behavior)type;&#xD;
        } else {&#xD;
            behavior = type.classifierBehavior;&#xD;
        }&#xD;
&#xD;
        if (behavior != null) {&#xD;
            ParameterList parameters = behavior.ownedParameter;&#xD;
&#xD;
            int pinNumber = 1;&#xD;
            int i = 1;&#xD;
            while (i &lt;= parameters.size()) {&#xD;
                Parameter parameter = parameters.getValue(i-1);&#xD;
                int j = pinNumber;&#xD;
                if (parameter.direction == ParameterDirectionKind.in |&#xD;
                    parameter.direction == ParameterDirectionKind.inout) {&#xD;
                    ParameterValue parameterValue = new ParameterValue();&#xD;
                    parameterValue.parameter = parameter;&#xD;
                    parameterValue.values = this.takeTokens(argumentPins.getValue(j-1));&#xD;
                    inputs.addValue(parameterValue);&#xD;
                    j = j + 1;&#xD;
                }&#xD;
                pinNumber = j;&#xD;
                i = i + 1;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
&#xD;
    ((Reference)object).startBehavior(type, inputs);&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtHRRBEd-0fNU76fYmlA" name="ReduceActionActivation">
            <ownedComment xmi:id="_17HtHhRBEd-0fNU76fYmlA" annotatedElement="_17HtHRRBEd-0fNU76fYmlA">
              <body>A reduce action activation is an action activation for a reduce action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtHxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtIBRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17HtIRRBEd-0fNU76fYmlA" name="currentExecution" type="_17RMWhRBEd-0fNU76fYmlA" association="_17HtcBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17HtIhRBEd-0fNU76fYmlA" annotatedElement="_17HtIRRBEd-0fNU76fYmlA">
                <body>The current execution of the reducer behavior.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HtIxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HtJBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17HtJRRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtJhRBEd-0fNU76fYmlA" annotatedElement="_17HtJRRBEd-0fNU76fYmlA">
                <body>// Get the values of the collection input pin.&#xD;
// If the input pin has no values, then do nothing. Otherwise, do the following.&#xD;
// Repeatedly invoke the reducer behavior on successive pairs to reduce the collection to a single value, and place that value on the result pin.&#xD;
// To invoke the reducer behavior, compile it to create an execution, make the execution the current execution, place the appropriate values on its input parameters, and execute it.&#xD;
&#xD;
ReduceAction action = (ReduceAction)(this.node);&#xD;
&#xD;
ValueList values = this.takeTokens(action.collection);&#xD;
&#xD;
if (values.size() > 0) {&#xD;
    ParameterList parameters = action.reducer.ownedParameter;&#xD;
    Parameter input1 = null;&#xD;
    Parameter input2 = null;&#xD;
    Parameter output = null;&#xD;
&#xD;
    int i = 1;&#xD;
    while (i &lt;= parameters.size()) {&#xD;
        Parameter parameter = parameters.getValue(i-1);&#xD;
        if (parameter.direction == ParameterDirectionKind.in) {&#xD;
            if (input1 != null) {&#xD;
                input1 = parameter;&#xD;
            }&#xD;
            else {&#xD;
                input2 = parameter;&#xD;
            }&#xD;
        }&#xD;
        else if (parameter.direction == ParameterDirectionKind.out) {&#xD;
            output = parameter;&#xD;
        }&#xD;
        i = i + 1;&#xD;
    }&#xD;
&#xD;
    ParameterValue parameterValue1 = new ParameterValue();&#xD;
    parameterValue1.parameter = input1;&#xD;
    parameterValue1.values = new ValueList();&#xD;
    parameterValue1.values.addValue(values.getValue(0));&#xD;
&#xD;
    int j = 2;&#xD;
    while (j &lt;= values.size()) {&#xD;
        this.currentExecution = this.getExecutionLocus().factory.createExecution(action.reducer, this.getExecutionContext());&#xD;
&#xD;
        this.currentExecution.setParameterValue(parameterValue1);&#xD;
&#xD;
        ParameterValue parameterValue2 = new ParameterValue();&#xD;
        parameterValue2.parameter = input2;&#xD;
        parameterValue2.values = new ValueList();&#xD;
        parameterValue2.values.addValue(values.getValue(j-1));&#xD;
        this.currentExecution.setParameterValue(parameterValue2);&#xD;
&#xD;
        this.currentExecution.execute();&#xD;
&#xD;
        parameterValue1 = this.currentExecution.getParameterValue(output);&#xD;
&#xD;
        j = j + 1;&#xD;
    }&#xD;
&#xD;
    this.putTokens(action.result, parameterValue1.values);&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtJxRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17HtKBRBEd-0fNU76fYmlA" annotatedElement="_17HtJxRBEd-0fNU76fYmlA">
                <body>// If there is a current execution, terminate it. Then terminate self.&#xD;
&#xD;
if (this.currentExecution != null) {&#xD;
    this.currentExecution.terminate();&#xD;
}&#xD;
&#xD;
super.terminate();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtKRRBEd-0fNU76fYmlA" name="ReadIsClassifiedObjectActionActivation">
            <ownedComment xmi:id="_17HtKhRBEd-0fNU76fYmlA" annotatedElement="_17HtKRRBEd-0fNU76fYmlA">
              <body>A read-is-classified object activation is an action activation for a read-is-classified object action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtKxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtLBRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HtLRRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtLhRBEd-0fNU76fYmlA" annotatedElement="_17HtLRRBEd-0fNU76fYmlA">
                <body>// Get the value on the object input pin and determine if it is classified by the classifier specified in the action.&#xD;
// If the isDirect attribute of the action is false, then place true on the result output pin if the input object has the specified classifier or of one its (direct or indirect) descendants as a type.&#xD;
// If the isDirect attribute of the action is true, then place true on the result output pin if the input object has the specified classifier as a type.&#xD;
// Otherwise place false on the  result output pin.&#xD;
&#xD;
ReadIsClassifiedObjectAction action = (ReadIsClassifiedObjectAction)(this.node);&#xD;
&#xD;
Value input = this.takeTokens(action.object).getValue(0);&#xD;
ClassifierList types = input.getTypes();&#xD;
&#xD;
boolean result = false;&#xD;
int i = 1;&#xD;
while (!result &amp; i &lt;= types.size()) {&#xD;
    Classifier type = types.getValue(i-1);&#xD;
&#xD;
    if (type == action.classifier) {&#xD;
        result = true;&#xD;
    }&#xD;
    else if (!action.isDirect) {&#xD;
        result = this.checkAllParents(type, action.classifier);&#xD;
    }&#xD;
&#xD;
   i = i + 1;&#xD;
}&#xD;
&#xD;
ValueList values = new ValueList();&#xD;
values.addValue(this.makeBooleanValue(result));&#xD;
&#xD;
this.putTokens(action.result, values);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtLxRBEd-0fNU76fYmlA" name="checkAllParents">
              <ownedComment xmi:id="_17HtMBRBEd-0fNU76fYmlA" annotatedElement="_17HtLxRBEd-0fNU76fYmlA">
                <body>// Check if the given classifier matches any of the direct or indirect ancestors of a given type.&#xD;
&#xD;
ClassifierList directParents = type.general;&#xD;
boolean matched = false;&#xD;
int i = 1;&#xD;
while (!matched &amp; i &lt;= directParents.size()) {&#xD;
    Classifier directParent = directParents.getValue(i-1);&#xD;
    if (directParent == classifier) {&#xD;
        matched = true;&#xD;
    } else {&#xD;
        matched = this.checkAllParents(directParent, classifier);&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return matched;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HtMRRBEd-0fNU76fYmlA" name="type" type="_17RRHRRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HtMhRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HtMxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtNBRBEd-0fNU76fYmlA" name="ReclassifyObjectActionActivation">
            <ownedComment xmi:id="_17HtNRRBEd-0fNU76fYmlA" annotatedElement="_17HtNBRBEd-0fNU76fYmlA">
              <body>A reclassify object activation is an action activation for a reclassify object action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtNhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtNxRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HtOBRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtORRBEd-0fNU76fYmlA" annotatedElement="_17HtOBRBEd-0fNU76fYmlA">
                <body>// Get the value of the object input pin. If it is not a reference, then do nothing. Otherwise, do the following.&#xD;
// Remove all types from the referent object that are in the set of old classifiers but not the set of new classifiers (or just all types that are not new classifiers, if isReplaceAll is true).&#xD;
// Remove the feature values from the referent object for all classifiers that are removed.&#xD;
// Add all new classifiers as types of the referent object that are not already types.&#xD;
// Add (empty) feature values to the referent object for the structural features of all added classifiers.&#xD;
&#xD;
ReclassifyObjectAction action = (ReclassifyObjectAction)(this.node);&#xD;
ClassifierList newClassifiers = action.newClassifier;&#xD;
ClassifierList oldClassifiers = action.oldClassifier;&#xD;
&#xD;
Value input = this.takeTokens(action.object).getValue(0);&#xD;
&#xD;
if (input instanceof Reference) {&#xD;
    Object_ object = ((Reference)input).referent;&#xD;
&#xD;
    int i = 1;&#xD;
    while (i &lt;= object.types.size()) {&#xD;
        Class_ type = object.types.getValue(i-1);&#xD;
&#xD;
        boolean toBeRemoved = true;&#xD;
        int j = 1;&#xD;
        while (toBeRemoved &amp; j &lt;= newClassifiers.size()) {&#xD;
            toBeRemoved = (type != newClassifiers.getValue(j-1));&#xD;
            j = j + 1;&#xD;
         }&#xD;
&#xD;
         if (toBeRemoved &amp; !action.isReplaceAll) {&#xD;
             boolean notInOld = true;&#xD;
             int k = 1;&#xD;
             while (notInOld  &amp; k &lt;= oldClassifiers.size()) {&#xD;
                 notInOld = (type != oldClassifiers.getValue(k-1));&#xD;
                 k = k + 1;&#xD;
            }&#xD;
            toBeRemoved = !notInOld;&#xD;
        }&#xD;
&#xD;
        if (toBeRemoved) {&#xD;
            object.types.removeValue(i-1);&#xD;
            object.removeFeatureValues(type);&#xD;
        } else {&#xD;
            i = i + 1;&#xD;
        }&#xD;
    }&#xD;
&#xD;
    for (int n = 0; n &lt; newClassifiers.size(); n++) {&#xD;
        Classifier classifier = newClassifiers.getValue(n);&#xD;
&#xD;
        boolean toBeAdded = true;&#xD;
        int j = 1;&#xD;
        while (toBeAdded &amp; j &lt;= object.types.size()) {&#xD;
            toBeAdded = (classifier != object.types.getValue(j-1));&#xD;
            j = j + 1;&#xD;
        }&#xD;
&#xD;
        if (toBeAdded) {&#xD;
            object.types.addValue((Class_)classifier);&#xD;
            NamedElementList members = classifier.member;&#xD;
            for (int k = 0; k &lt; members.size(); k++) {&#xD;
                NamedElement member = members.getValue(k);&#xD;
                if (member instanceof StructuralFeature) {&#xD;
                    object.setFeatureValue((StructuralFeature)member, new ValueList(), 0);&#xD;
                }&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtOhRBEd-0fNU76fYmlA" name="ReadExtentActionActivation">
            <ownedComment xmi:id="_17HtOxRBEd-0fNU76fYmlA" annotatedElement="_17HtOhRBEd-0fNU76fYmlA">
              <body>A read extent action activation is an action activation for a read extent action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtPBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtPRRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17HtPhRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtPxRBEd-0fNU76fYmlA" annotatedElement="_17HtPhRBEd-0fNU76fYmlA">
                <body>// Get the extent, at the current execution locus, of the classifier (which must be a class) identified in the action. &#xD;
// Place references to the resulting set of objects on the result pin.&#xD;
&#xD;
ReadExtentAction action = (ReadExtentAction)(this.node);&#xD;
ExtensionalValueList objects = this.getExecutionLocus().getExtent(action.classifier);&#xD;
&#xD;
// Debug.println(&quot;[doAction] &quot; + action.classifier.name + &quot; has &quot; + objects.size() + &quot; instance(s).&quot;);&#xD;
&#xD;
ValueList references = new ValueList();&#xD;
for (int i = 0; i &lt; objects.size(); i++) {&#xD;
    Value object = objects.getValue(i);&#xD;
    Reference reference = new Reference();&#xD;
    reference.referent = (Object_)object;&#xD;
    references.addValue(reference);&#xD;
}&#xD;
&#xD;
this.putTokens(action.result, references);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtQBRBEd-0fNU76fYmlA" name="AcceptEventActionActivation">
            <ownedComment xmi:id="_17HtQRRBEd-0fNU76fYmlA" annotatedElement="_17HtQBRBEd-0fNU76fYmlA">
              <body>An accept event action activation is an action activation for an accept event action.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtQhRBEd-0fNU76fYmlA">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtQxRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17HtRBRBEd-0fNU76fYmlA" name="eventAccepter" visibility="public" type="_17HtXhRBEd-0fNU76fYmlA" association="_17HtbxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17HtRRRBEd-0fNU76fYmlA" annotatedElement="_17HtRBRBEd-0fNU76fYmlA">
                <body>If the accept event action activation is waiting for an event, then this is the accepter it has registered for the event.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HtRhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HtRxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17HtSBRBEd-0fNU76fYmlA" name="waiting" visibility="public">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17HtSRRBEd-0fNU76fYmlA" name="run">
              <ownedComment xmi:id="_17HtShRBEd-0fNU76fYmlA">
                <body>// Create an event accepter and initialize waiting to false.&#xD;
&#xD;
super.run();&#xD;
&#xD;
this.eventAccepter = new AcceptEventActionEventAccepter();&#xD;
this.eventAccepter.actionActivation = this;&#xD;
&#xD;
this.waiting = false;&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtSxRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17HtTBRBEd-0fNU76fYmlA" annotatedElement="_17HtSxRBEd-0fNU76fYmlA">
                <body>// Register the event accepter for this accept event action activation with the context object of the enclosing activity execution&#xD;
// and wait for an event to be accepted.&#xD;
&#xD;
Debug.println(&quot;[fire] Action &quot; + this.node.name + &quot;...&quot;);&#xD;
&#xD;
this.getExecutionContext().register(this.eventAccepter);&#xD;
this.waiting = true;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HtTRRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HtThRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HtTxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtUBRBEd-0fNU76fYmlA" name="isReady">
              <ownedComment xmi:id="_17HtURRBEd-0fNU76fYmlA">
                <body>// An accept event action activiation is ready to fire only if it is not already waiting for an event.&#xD;
&#xD;
boolean ready;&#xD;
if (this.waiting) {&#xD;
    ready = false;&#xD;
} else {&#xD;
    ready = super.isReady();&#xD;
}&#xD;
&#xD;
return ready;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HtUhRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtUxRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtVBRBEd-0fNU76fYmlA" annotatedElement="_17HtUxRBEd-0fNU76fYmlA">
                <body>// Do nothing. [This will never be called.]&#xD;
&#xD;
return;</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtVRRBEd-0fNU76fYmlA" name="accept">
              <ownedComment xmi:id="_17HtVhRBEd-0fNU76fYmlA" annotatedElement="_17HtVRRBEd-0fNU76fYmlA">
                <body>// Accept a signal occurance for the given signal instance.&#xD;
// If the action does not unmarshall, then place the signal instance on the result pin, if any.&#xD;
// If the action does unmarshall, then get the feature values of the signal instance, and place the values for each feature on the corresponding output pin.&#xD;
// Concurrently fire all output pins while offering a single control token.&#xD;
// If there are no incoming edges, then re-register this accept event action execution with the context object.&#xD;
&#xD;
AcceptEventAction action = (AcceptEventAction)(this.node);&#xD;
OutputPinList resultPins = action.result;&#xD;
&#xD;
Debug.println(&quot;[accept] action = &quot; + action.name + &quot;, signalinstance = &quot; + signalInstance);&#xD;
&#xD;
if (this.running) {&#xD;
    if (!action.isUnmarshall) {&#xD;
        ValueList result = new ValueList();&#xD;
        result.addValue(signalInstance);&#xD;
        if (resultPins.size() > 0) {&#xD;
            this.putTokens(resultPins.getValue(0), result);&#xD;
        }&#xD;
    } else {&#xD;
        FeatureValueList featureValues = signalInstance.getFeatureValues();&#xD;
        for (int i = 0; i &lt; featureValues.size(); i++) {&#xD;
            FeatureValue featureValue = featureValues.getValue(i);&#xD;
            OutputPin resultPin = resultPins.getValue(i);&#xD;
            this.putTokens(resultPin, featureValue.values);&#xD;
        }&#xD;
    }&#xD;
&#xD;
    this.sendOffers();&#xD;
&#xD;
    this.waiting = false;&#xD;
&#xD;
    Debug.println(&quot;[fire] Checking if &quot; + this.node.name + &quot; should fire again...&quot;);&#xD;
//     if (this.isReady()) {&#xD;
//         this.fire();&#xD;
//     }&#xD;
    this.receiveOffer();&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HtVxRBEd-0fNU76fYmlA" name="signalInstance" type="_17RM7RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtWBRBEd-0fNU76fYmlA" name="match">
              <ownedComment xmi:id="_17HtWRRBEd-0fNU76fYmlA" annotatedElement="_17HtWBRBEd-0fNU76fYmlA">
                <body>// Return true if the given signal instance matches a trigger of the accept action of this activation.&#xD;
&#xD;
AcceptEventAction action = (AcceptEventAction)(this.node);&#xD;
TriggerList triggers = action.trigger;&#xD;
Signal signal = signalInstance.type;&#xD;
&#xD;
boolean matches = false;&#xD;
int i = 1;&#xD;
while (!matches &amp; i &lt;= triggers.size()) {&#xD;
    matches = ((SignalEvent)(triggers.getValue(i-1).event)).signal == signal;&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return matches;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HtWhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17HtWxRBEd-0fNU76fYmlA" name="signalInstance" type="_17RM7RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtXBRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17HtXRRBEd-0fNU76fYmlA">
                <body>// Terminate this action and unregister its event accepter.&#xD;
&#xD;
super.terminate();&#xD;
&#xD;
if (this.waiting) {&#xD;
    this.getExecutionContext().unregister(this.eventAccepter);&#xD;
    this.waiting = false;&#xD;
}</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtXhRBEd-0fNU76fYmlA" name="AcceptEventActionEventAccepter">
            <ownedComment xmi:id="_17HtXxRBEd-0fNU76fYmlA" annotatedElement="_17HtXhRBEd-0fNU76fYmlA">
              <body>An accept event action event accepter handles signal reception events on the behalf of a specific accept event action activation.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtYBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtYRRBEd-0fNU76fYmlA" general="_17RMyRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17HtYhRBEd-0fNU76fYmlA" name="actionActivation" visibility="public" type="_17HtQBRBEd-0fNU76fYmlA" association="_17HtbxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17HtYxRBEd-0fNU76fYmlA" annotatedElement="_17HtYhRBEd-0fNU76fYmlA">
                <body>The accept event action activation on behalf of which this event accepter is waiting.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HtZBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HtZRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17HtZhRBEd-0fNU76fYmlA" name="accept">
              <ownedComment xmi:id="_17HtZxRBEd-0fNU76fYmlA" annotatedElement="_17HtZhRBEd-0fNU76fYmlA">
                <body>Accept a signal occurance for the given signal instance.</body>
              </ownedComment>
              <ownedComment xmi:id="_17HtaBRBEd-0fNU76fYmlA">
                <body>// Accept a signal occurance for the given signal instance.&#xD;
// Forward the signal occuranceto the action activation.&#xD;
&#xD;
this.actionActivation.accept(signalInstance);</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HtaRRBEd-0fNU76fYmlA" name="signalInstance" type="_17RM7RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtahRBEd-0fNU76fYmlA" name="match">
              <ownedComment xmi:id="_17HtaxRBEd-0fNU76fYmlA" annotatedElement="_17HtahRBEd-0fNU76fYmlA">
                <body>Determine if the given signal instance matches a trigger of the accept action of the action activation.</body>
              </ownedComment>
              <ownedComment xmi:id="_17HtbBRBEd-0fNU76fYmlA">
                <body>// Return true if the given signal instance matches a trigger of the accept action of the action activation.&#xD;
&#xD;
return this.actionActivation.match(signalInstance);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HtbRRBEd-0fNU76fYmlA" name="signalInstance" type="_17RM7RRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17HtbhRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17HtbxRBEd-0fNU76fYmlA" name="A_actionActivation_eventAccepter" memberEnd="_17HtYhRBEd-0fNU76fYmlA _17HtRBRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17HtcBRBEd-0fNU76fYmlA" name="A_currentExecution_reduceActionActivation" memberEnd="_17HtIRRBEd-0fNU76fYmlA _17HtcRRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17HtcRRBEd-0fNU76fYmlA" visibility="private" type="_17HtHRRBEd-0fNU76fYmlA" association="_17HtcBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HtchRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17HtcxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17HtdBRBEd-0fNU76fYmlA" name="Activities">
        <packagedElement xmi:type="uml:Package" xmi:id="_17HtdRRBEd-0fNU76fYmlA" name="CompleteStructuredActivities">
          <packageImport xmi:id="_17HtdhRBEd-0fNU76fYmlA" importedPackage="_17RTWhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17HtdxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17HteBRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17HteRRBEd-0fNU76fYmlA" importedPackage="_17HrxxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17HtehRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17HtexRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17HtfBRBEd-0fNU76fYmlA" name="StructuredActivityNodeActivation">
            <ownedComment xmi:id="_17HtfRRBEd-0fNU76fYmlA" annotatedElement="_17HtfBRBEd-0fNU76fYmlA">
              <body>A structured activity node activation is an action activation for an action that is a structured activity node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17HtfhRBEd-0fNU76fYmlA">
              <body>import java.util.*;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17HtfxRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17HtgBRBEd-0fNU76fYmlA" name="activationGroup" type="_17RI8BRBEd-0fNU76fYmlA" aggregation="composite" association="_17RHIBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17HtgRRBEd-0fNU76fYmlA" annotatedElement="_17HtgBRBEd-0fNU76fYmlA">
                <body>The group of activations of the activity nodes contained in the structured activity node.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedOperation xmi:id="_17HtghRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17HtgxRBEd-0fNU76fYmlA" annotatedElement="_17HtghRBEd-0fNU76fYmlA">
                <body>// If the structured activity node has mustIsolate=true, then carry out its behavior with isolation.&#xD;
// Otherwise just activate it normally.&#xD;
&#xD;
if (((StructuredActivityNode)(this.node)).mustIsolate) {&#xD;
    _beginIsolation();&#xD;
        this.doStructuredActivity();&#xD;
    _endIsolation();&#xD;
} else {&#xD;
    this.doStructuredActivity();&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HthBRBEd-0fNU76fYmlA" name="doStructuredActivity">
              <ownedComment xmi:id="_17HthRRBEd-0fNU76fYmlA">
                <body>// Run all activations of contained nodes. When this is complete, return.&#xD;
// (This is the default behavior for a structured activity node used simply as a group. It is overridden for the execution of conditional and loop nodes.)&#xD;
&#xD;
Action action = (Action)(this.node);&#xD;
&#xD;
// *** Concurrently send offers from all input pins. ***&#xD;
InputPinList inputPins = action.input;&#xD;
for (Iterator i = inputPins.iterator(); i.hasNext();) {&#xD;
    InputPin inputPin = (InputPin)i.next();&#xD;
    PinActivation pinActivation = this.getPinActivation(inputPin);&#xD;
    pinActivation.sendUnofferedTokens();&#xD;
}&#xD;
&#xD;
this.activationGroup.run(this.activationGroup.nodeActivations);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HthhRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17HthxRBEd-0fNU76fYmlA" annotatedElement="_17HthhRBEd-0fNU76fYmlA">
                <body>// Terminate the execution of all contained node activations (which completes the performance of the structured activity node activation).&#xD;
&#xD;
this.activationGroup.terminateAll();&#xD;
super.terminate();</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17HtiBRBEd-0fNU76fYmlA" name="getNodeActivation">
              <ownedComment xmi:id="_17HtiRRBEd-0fNU76fYmlA" annotatedElement="_17HtiBRBEd-0fNU76fYmlA">
                <body>// If this structured activity node activation is not for the given node, then check if there is an activation for the node in the activation group.&#xD;
&#xD;
ActivityNodeActivation thisActivation = super.getNodeActivation(node);&#xD;
&#xD;
ActivityNodeActivation activation = null;&#xD;
if (thisActivation != null) {&#xD;
    activation = thisActivation;&#xD;
} else if (this.activationGroup != null) {&#xD;
    activation = this.activationGroup.getNodeActivation(node);&#xD;
}&#xD;
&#xD;
return activation;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17HtihRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RIhxRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17HtixRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RGsBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RGsRRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RGshRBEd-0fNU76fYmlA" name="makeActivityNodeList">
              <ownedComment xmi:id="_17RGsxRBEd-0fNU76fYmlA" annotatedElement="_17RGshRBEd-0fNU76fYmlA">
                <body>// Return an activity node list containing the given list of executable nodes &#xD;
// and any pins that they own.&#xD;
&#xD;
ActivityNodeList activityNodes = new ActivityNodeList();&#xD;
&#xD;
for (int i = 0; i &lt; nodes.size(); i++) {&#xD;
    ActivityNode node = nodes.getValue(i);&#xD;
    activityNodes.addValue(node);&#xD;
&#xD;
    if (node instanceof Action) {&#xD;
        Action action = (Action)node;&#xD;
&#xD;
        InputPinList inputPins = action.input;&#xD;
        for (int j = 0; j &lt; inputPins.size(); j++) {&#xD;
            InputPin inputPin = inputPins.getValue(j);&#xD;
            activityNodes.addValue(inputPin);&#xD;
        }&#xD;
&#xD;
        OutputPinList outputPins = action.output;&#xD;
        for (int j = 0; j &lt; outputPins.size(); j++) {&#xD;
            OutputPin outputPin = outputPins.getValue(j);&#xD;
            activityNodes.addValue(outputPin);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
return activityNodes;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RGtBRBEd-0fNU76fYmlA" name="nodes" type="_17RTxBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RGtRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RGthRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RGtxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RS3xRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RGuBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RGuRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RGuhRBEd-0fNU76fYmlA" name="getPinValues">
              <ownedComment xmi:id="_17RGuxRBEd-0fNU76fYmlA" annotatedElement="_17RGuhRBEd-0fNU76fYmlA">
                <body>// Return the values of the tokens on the pin activation corresponding to the given pin in the internal activation group for this node activation.&#xD;
&#xD;
PinActivation pinActivation = (PinActivation)(this.activationGroup.getNodeActivation(pin));&#xD;
TokenList tokens = pinActivation.getTokens();&#xD;
&#xD;
ValueList values = new ValueList();&#xD;
for (int i = 0; i &lt; tokens.size(); i++) {&#xD;
    Token token = tokens.getValue(i);&#xD;
    Value value = ((ObjectToken)token).value;&#xD;
    if (value != null) {&#xD;
        values.addValue(value);&#xD;
    }&#xD;
}&#xD;
&#xD;
return values;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RGvBRBEd-0fNU76fYmlA" name="pin" type="_17RUvRRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RGvRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RGvhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RGvxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RGwBRBEd-0fNU76fYmlA" name="putPinValues">
              <ownedComment xmi:id="_17RGwRRBEd-0fNU76fYmlA" annotatedElement="_17RGwBRBEd-0fNU76fYmlA">
                <body>// Place tokens for the given values on the pin activation corresponding to the given output pin on the internal activation group for this node activation.&#xD;
&#xD;
PinActivation pinActivation = (PinActivation)(this.activationGroup.getNodeActivation(pin));&#xD;
&#xD;
for (int i = 0; i &lt; values.size(); i++) {&#xD;
    Value value = values.getValue(i);&#xD;
    ObjectToken token = new ObjectToken();&#xD;
    token.value = value;&#xD;
    pinActivation.addToken(token);&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RGwhRBEd-0fNU76fYmlA" name="pin" type="_17RUvRRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RGwxRBEd-0fNU76fYmlA" name="values" type="_17RKJhRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RGxBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RGxRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RGxhRBEd-0fNU76fYmlA" name="createNodeActivations">
              <ownedComment xmi:id="_17RGxxRBEd-0fNU76fYmlA" annotatedElement="_17RGxhRBEd-0fNU76fYmlA">
                <body>// Create an activation group and create node activations for all the nodes within the structured activity node.&#xD;
&#xD;
super.createNodeActivations();&#xD;
&#xD;
this.activationGroup = new ActivityNodeActivationGroup();&#xD;
this.activationGroup.containingNodeActivation = this;&#xD;
this.activationGroup.createNodeActivations(((StructuredActivityNode)(this.node)).node);&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RGyBRBEd-0fNU76fYmlA" name="createEdgeInstances">
              <ownedComment xmi:id="_17RGyRRBEd-0fNU76fYmlA" annotatedElement="_17RGyBRBEd-0fNU76fYmlA">
                <body>// Create instances for all edges owned by this node.&#xD;
&#xD;
this.activationGroup.createEdgeInstances(((StructuredActivityNode)(this.node)).edge);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RGyhRBEd-0fNU76fYmlA" name="LoopNodeActivation">
            <ownedComment xmi:id="_17RGyxRBEd-0fNU76fYmlA" annotatedElement="_17RGyhRBEd-0fNU76fYmlA">
              <body>A loop node activation is a structured activity node activation for a node that is a loop node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RGzBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RGzRRBEd-0fNU76fYmlA" general="_17HtfBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RGzhRBEd-0fNU76fYmlA" name="bodyOutputLists" visibility="public" type="_17RHIRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RHJRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RGzxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RG0BRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RG0RRBEd-0fNU76fYmlA" name="doStructuredActivity">
              <ownedComment xmi:id="_17RG0hRBEd-0fNU76fYmlA" annotatedElement="_17RG0RRBEd-0fNU76fYmlA">
                <body>// Set the initial values for the body outputs to the values of the loop variable input pins.&#xD;
// If isTestedFirst is true, then repeatedly run the test part and the body part of the loop, copying values from the body outputs to the loop variables.&#xD;
// If isTestedFirst is false, then repeatedly run the body part and the test part of the loop, copying values from the body outputs to the loop variables.&#xD;
// When the test fails, copy the values of the body outputs to the loop outputs.&#xD;
// [Note: The body outputs are used for the loop outputs, rather than the loop variables, since values on the loop variables may be consumed when running the test for the last time.]&#xD;
&#xD;
LoopNode loopNode = (LoopNode)(this.node);&#xD;
InputPinList loopVariableInputs = loopNode.loopVariableInput;&#xD;
OutputPinList loopVariables = loopNode.loopVariable;&#xD;
OutputPinList resultPins = loopNode.result;&#xD;
&#xD;
ValuesList bodyOutputLists = this.bodyOutputLists;&#xD;
for (int i = 0; i &lt; loopVariableInputs.size(); i++) {&#xD;
    InputPin loopVariableInput = loopVariableInputs.getValue(i);&#xD;
    Values bodyOutputList = new Values();&#xD;
    bodyOutputList.values = this.takeTokens(loopVariableInput);&#xD;
    this.bodyOutputLists.addValue(bodyOutputList);&#xD;
}&#xD;
&#xD;
boolean continuing = true;&#xD;
do {&#xD;
&#xD;
   // Set loop variable values&#xD;
    this.runLoopVariables();&#xD;
    for (int i = 0; i &lt; loopVariables.size(); i++) {&#xD;
        OutputPin loopVariable = loopVariables.getValue(i);&#xD;
        Values bodyOutputList = bodyOutputLists.getValue(i);&#xD;
        ValueList values = bodyOutputList.values;&#xD;
        this.putPinValues(loopVariable, values);&#xD;
        ((OutputPinActivation)this.activationGroup.getNodeActivation(loopVariable)).sendUnofferedTokens();&#xD;
    }&#xD;
&#xD;
    // Run all the non-executable, non-pin nodes in the conditional node.&#xD;
    ActivityNodeActivationList nodeActivations = this.activationGroup.nodeActivations;&#xD;
    ActivityNodeActivationList nonExecutableNodeActivations = new ActivityNodeActivationList();&#xD;
    for (int i = 0; i &lt; nodeActivations.size(); i++) {&#xD;
        ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);&#xD;
        if (!(nodeActivation.node instanceof ExecutableNode | nodeActivation.node instanceof Pin)) {&#xD;
            nonExecutableNodeActivations.addValue(nodeActivation);&#xD;
        }&#xD;
    }&#xD;
    this.activationGroup.run(nonExecutableNodeActivations);&#xD;
&#xD;
    // Run the loop&#xD;
    if (loopNode.isTestedFirst) {&#xD;
        continuing = this.runTest();&#xD;
        if (continuing) {&#xD;
            this.runBody();&#xD;
        }&#xD;
    }&#xD;
    else {&#xD;
        this.runBody();&#xD;
        continuing = this.runTest();&#xD;
    }&#xD;
&#xD;
    this.activationGroup.terminateAll();&#xD;
&#xD;
    Debug.println(&quot;[doStructuredActivity] &quot; + (continuing? &quot;Continuing.&quot;: &quot;Done.&quot;));&#xD;
&#xD;
} while (continuing);&#xD;
&#xD;
for (int i = 0; i &lt; bodyOutputLists.size(); i++) {&#xD;
    Values bodyOutputList = bodyOutputLists.getValue(i);&#xD;
    OutputPin resultPin = resultPins.getValue(i);&#xD;
    this.putTokens(resultPin, bodyOutputList.values);&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RG0xRBEd-0fNU76fYmlA" name="runTest">
              <ownedComment xmi:id="_17RG1BRBEd-0fNU76fYmlA" annotatedElement="_17RG0xRBEd-0fNU76fYmlA">
                <body>// Run the test part of the loop node for this node activation.&#xD;
// Return the value on the decider pin.&#xD;
&#xD;
Debug.println(&quot;[runTest] Running test...&quot;);&#xD;
&#xD;
LoopNode loopNode = (LoopNode)(this.node);&#xD;
&#xD;
this.activationGroup.runNodes(this.makeActivityNodeList(loopNode.test));&#xD;
&#xD;
ValueList values = this.getPinValues(loopNode.decider);&#xD;
&#xD;
// If there is no decider value, treat it as false.&#xD;
boolean decision = false;&#xD;
if (values.size() > 0) { &#xD;
  decision = ((BooleanValue)(values.getValue(0))).value;&#xD;
}&#xD;
&#xD;
Debug.println(&quot;[runTest] &quot; + (decision? &quot;Test succeeded.&quot;: &quot;Test failed.&quot;));&#xD;
&#xD;
return decision;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RG1RRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RG1hRBEd-0fNU76fYmlA" name="runBody">
              <ownedComment xmi:id="_17RG1xRBEd-0fNU76fYmlA" annotatedElement="_17RG1hRBEd-0fNU76fYmlA">
                <body>// Run the body part of the loop node for this node activation and save the body outputs.&#xD;
&#xD;
Debug.println(&quot;[runBody] Running body...&quot;);&#xD;
&#xD;
LoopNode loopNode = (LoopNode)this.node;&#xD;
&#xD;
this.activationGroup.runNodes(this.makeActivityNodeList(loopNode.bodyPart));&#xD;
&#xD;
OutputPinList bodyOutputs = loopNode.bodyOutput;&#xD;
ValuesList bodyOutputLists = this.bodyOutputLists;&#xD;
for (int i = 0; i &lt; bodyOutputs.size(); i++) {&#xD;
    OutputPin bodyOutput = bodyOutputs.getValue(i);&#xD;
    Values bodyOutputList = bodyOutputLists.getValue(i);&#xD;
    bodyOutputList.values = this.getPinValues(bodyOutput);&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RG2BRBEd-0fNU76fYmlA" name="runLoopVariables">
              <ownedComment xmi:id="_17RG2RRBEd-0fNU76fYmlA" annotatedElement="_17RG2BRBEd-0fNU76fYmlA">
                <body>// Run the loop variable pins of the loop node for this node activation.&#xD;
&#xD;
this.activationGroup.runNodes(this.makeLoopVariableList());&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RG2hRBEd-0fNU76fYmlA" name="createNodeActivations">
              <ownedComment xmi:id="_17RG2xRBEd-0fNU76fYmlA" annotatedElement="_17RG2hRBEd-0fNU76fYmlA">
                <body>// In addition to creating activations for contained nodes, create activations for any loop variables.&#xD;
&#xD;
super.createNodeActivations();&#xD;
this.activationGroup.createNodeActivations(this.makeLoopVariableList());&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RG3BRBEd-0fNU76fYmlA" name="makeLoopVariableList">
              <ownedComment xmi:id="_17RG3RRBEd-0fNU76fYmlA" annotatedElement="_17RG3BRBEd-0fNU76fYmlA">
                <body>// Return an activity node list containing the loop variable pins for the loop node of this activation.&#xD;
&#xD;
LoopNode loopNode = (LoopNode)(this.node);&#xD;
ActivityNodeList nodes = new ActivityNodeList();&#xD;
&#xD;
OutputPinList loopVariables = loopNode.loopVariable;&#xD;
for (int i = 0; i &lt;  loopVariables.size(); i++) {&#xD;
    OutputPin loopVariable = loopVariables.getValue(i);&#xD;
    nodes.addValue(loopVariable);&#xD;
}&#xD;
&#xD;
return nodes;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RG3hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RS3xRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RG3xRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RG4BRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RG4RRBEd-0fNU76fYmlA" name="ConditionalNodeActivation">
            <ownedComment xmi:id="_17RG4hRBEd-0fNU76fYmlA" annotatedElement="_17RG4RRBEd-0fNU76fYmlA">
              <body>A conditional node activation is a structured activity node activation for a node that is a conditional node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RG4xRBEd-0fNU76fYmlA">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RG5BRBEd-0fNU76fYmlA" general="_17HtfBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RG5RRBEd-0fNU76fYmlA" name="clauseActivations" type="_17RG-RRBEd-0fNU76fYmlA" aggregation="composite" association="_17RHHRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RG5hRBEd-0fNU76fYmlA" annotatedElement="_17RG5RRBEd-0fNU76fYmlA">
                <body>The activations for each clause in the conditional node for this node activation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RG5xRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RG6BRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RG6RRBEd-0fNU76fYmlA" name="selectedClauses" visibility="public" type="_17RTxxRBEd-0fNU76fYmlA" association="_17RHHhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RG6hRBEd-0fNU76fYmlA" annotatedElement="_17RG6RRBEd-0fNU76fYmlA">
                <body>The set of clauses which meet the conditions to have their bodies activated.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RG6xRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RG7BRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RG7RRBEd-0fNU76fYmlA" name="doStructuredActivity">
              <ownedComment xmi:id="_17RG7hRBEd-0fNU76fYmlA" annotatedElement="_17RG7RRBEd-0fNU76fYmlA">
                <body>// Run all the non-executable, non-pin nodes in the conditional node.&#xD;
// Activate all clauses in the conditional node and pass control to those that are ready (i.e., have no predecessors).&#xD;
// If one or more clauses have succeeded in being selected, choose one non-deterministically and run its body, then copy the outputs of that clause to the output pins of the node.&#xD;
&#xD;
ConditionalNode node = (ConditionalNode)(this.node);&#xD;
&#xD;
ActivityNodeActivationList nodeActivations = this.activationGroup.nodeActivations;&#xD;
ActivityNodeActivationList nonExecutableNodeActivations = new ActivityNodeActivationList();&#xD;
for (int i = 0; i &lt; nodeActivations.size(); i++) {&#xD;
    ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);&#xD;
    if (!(nodeActivation.node instanceof ExecutableNode | nodeActivation.node instanceof Pin)) {&#xD;
        nonExecutableNodeActivations.addValue(nodeActivation);&#xD;
    }&#xD;
}&#xD;
&#xD;
this.activationGroup.run(nonExecutableNodeActivations);&#xD;
&#xD;
this.clauseActivations.clear();&#xD;
ClauseList clauses = node.clause;&#xD;
for (int i = 0; i &lt; clauses.size(); i++) {&#xD;
    Clause clause = clauses.getValue(i);&#xD;
    ClauseActivation clauseActivation = new ClauseActivation();&#xD;
    clauseActivation.clause = clause;&#xD;
    clauseActivation.conditionalNodeActivation = this;&#xD;
    this.clauseActivations.addValue(clauseActivation);&#xD;
}&#xD;
&#xD;
this.selectedClauses.clear();&#xD;
&#xD;
ClauseActivationList readyClauseActivations = new ClauseActivationList();&#xD;
for (int i = 0; i &lt; this.clauseActivations.size(); i++) {&#xD;
    ClauseActivation clauseActivation = this.clauseActivations.getValue(i);&#xD;
    Debug.println(&quot;[doStructuredActivity] clauseActivations[&quot; + i + &quot;] = &quot; + clauseActivation);&#xD;
    if (clauseActivation.isReady()) {&#xD;
        Debug.println(&quot;[doStructuredActivity] Clause activation is ready.&quot;);&#xD;
        readyClauseActivations.addValue(clauseActivation);&#xD;
    }&#xD;
}&#xD;
&#xD;
// *** Give control to all ready clauses concurrently. ***&#xD;
for (Iterator i = readyClauseActivations.iterator(); i.hasNext() ;) {&#xD;
    ClauseActivation clauseActivation = (ClauseActivation)i.next();&#xD;
    Debug.println(&quot;[doStructuredActivity] Giving control to &quot; + clauseActivation + &quot;...&quot;);&#xD;
    clauseActivation.receiveControl();&#xD;
}&#xD;
&#xD;
if (this.selectedClauses.size() > 0 &amp; this.isRunning()) {&#xD;
    Debug.println(&quot;[doStructuredActivity] &quot; + this.selectedClauses.size() + &quot; clause(s) selected.&quot;);&#xD;
&#xD;
    // *** If multiple clauses are selected, choose one non-deterministically. ***&#xD;
    int i = ((ChoiceStrategy)this.getExecutionLocus().factory.getStrategy(&quot;choice&quot;)).choose(this.selectedClauses.size());&#xD;
    Clause selectedClause = this.selectedClauses.getValue(i-1);&#xD;
&#xD;
    Debug.println(&quot;[doStructuredActivity] Running selectedClauses[&quot; + i + &quot;] = &quot; + selectedClause);&#xD;
&#xD;
    for (int j = 0; j &lt; clauses.size(); j++) {&#xD;
        Clause clause = clauses.getValue(j);&#xD;
        if (clause != selectedClause) {&#xD;
            ExecutableNodeList testNodes = clause.test;&#xD;
            for (int k = 0; k &lt; testNodes.size(); k++) {&#xD;
                ExecutableNode testNode = testNodes.getValue(k);&#xD;
                this.activationGroup.getNodeActivation(testNode).terminate();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
&#xD;
    this.activationGroup.runNodes(this.makeActivityNodeList(selectedClause.body));&#xD;
&#xD;
    OutputPinList resultPins = node.result;&#xD;
    OutputPinList bodyOutputPins = selectedClause.bodyOutput;&#xD;
    for (int k = 0; k &lt; resultPins.size(); k++) {&#xD;
        OutputPin resultPin = resultPins.getValue(k);&#xD;
        OutputPin bodyOutputPin = bodyOutputPins.getValue(k);&#xD;
        this.putTokens(resultPin, this.getPinValues(bodyOutputPin));&#xD;
    }&#xD;
}&#xD;
&#xD;
this.activationGroup.terminateAll();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RG7xRBEd-0fNU76fYmlA" name="getClauseActivation">
              <ownedComment xmi:id="_17RG8BRBEd-0fNU76fYmlA" annotatedElement="_17RG7xRBEd-0fNU76fYmlA">
                <body>// Get the clause activation corresponding to the given clause.&#xD;
&#xD;
// Debug.println(&quot;[getClauseActivation] clause = &quot; + clause);&#xD;
&#xD;
ClauseActivation selectedClauseActivation = null;&#xD;
int i = 1;&#xD;
while ((selectedClauseActivation == null) &amp; i &lt;= this.clauseActivations.size()) {&#xD;
    ClauseActivation clauseActivation = this.clauseActivations.getValue(i-1);&#xD;
    // Debug.println(&quot;[getClauseActivations] clauseActivations[&quot; + i + &quot;].clause = &quot; + clauseActivation.clause);&#xD;
    if (clauseActivation.clause == clause) {&#xD;
        selectedClauseActivation = clauseActivation;&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return selectedClauseActivation;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RG8RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RG-RRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RG8hRBEd-0fNU76fYmlA" name="clause" type="_17RTxxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RG8xRBEd-0fNU76fYmlA" name="runTest">
              <ownedComment xmi:id="_17RG9BRBEd-0fNU76fYmlA" annotatedElement="_17RG8xRBEd-0fNU76fYmlA">
                <body>// Run the test for the given clause.&#xD;
&#xD;
if (this.isRunning()) {&#xD;
    this.activationGroup.runNodes(this.makeActivityNodeList(clause.test));&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RG9RRBEd-0fNU76fYmlA" name="clause" type="_17RTxxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RG9hRBEd-0fNU76fYmlA" name="selectBody">
              <ownedComment xmi:id="_17RG9xRBEd-0fNU76fYmlA" annotatedElement="_17RG9hRBEd-0fNU76fYmlA">
                <body>// Add the clause to the list of selected clauses.&#xD;
&#xD;
this.selectedClauses.addValue(clause);&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RG-BRBEd-0fNU76fYmlA" name="clause" type="_17RTxxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RG-RRBEd-0fNU76fYmlA" name="ClauseActivation">
            <ownedComment xmi:id="_17RG-hRBEd-0fNU76fYmlA" annotatedElement="_17RG-RRBEd-0fNU76fYmlA">
              <body>A clause activation defines the behavior of a clause within the context of a specific activation of the conditional node containing the clause.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RG-xRBEd-0fNU76fYmlA">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:id="_17RG_BRBEd-0fNU76fYmlA" name="conditionalNodeActivation" type="_17RG4RRBEd-0fNU76fYmlA" association="_17RHHRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RG_RRBEd-0fNU76fYmlA" annotatedElement="_17RG_BRBEd-0fNU76fYmlA">
                <body>The activation of the conditional node that contains the clause for this clause activation.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RG_hRBEd-0fNU76fYmlA" name="clause" type="_17RTxxRBEd-0fNU76fYmlA" association="_17RHGRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RG_xRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHABRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RHARRBEd-0fNU76fYmlA" name="receiveControl">
              <ownedComment xmi:id="_17RHAhRBEd-0fNU76fYmlA" annotatedElement="_17RHARRBEd-0fNU76fYmlA">
                <body>// If all predecessors to the clause for this activation have run their tests and failed, then run the test for this clause.&#xD;
// If the test succeeds, then terminate any other clauses that may be running and run the body of this clause.&#xD;
// If the test fails, then pass control to successor clauses.&#xD;
&#xD;
Debug.println(&quot;[receiveControl] clauseActivation = &quot; + this);&#xD;
&#xD;
if (this.isReady()) {&#xD;
    Debug.println(&quot;[receiveControl] Running test...&quot;);&#xD;
    this.runTest();&#xD;
&#xD;
    BooleanValue decision = this.getDecision();&#xD;
&#xD;
    // Note that the decision may be null if the test was terminated before completion.&#xD;
    if (decision != null) {&#xD;
        if (decision.value == true) {&#xD;
            Debug.println(&quot;[receiveControl] Test succeeded.&quot;);&#xD;
            this.selectBody();&#xD;
        } else {&#xD;
            Debug.println(&quot;[receiveControl] Test failed.&quot;);&#xD;
&#xD;
            ClauseActivationList successors = this.getSuccessors();&#xD;
&#xD;
            // *** Give control to all successors concurrently. ***&#xD;
            for (Iterator i = successors.iterator(); i.hasNext();) {&#xD;
                ClauseActivation successor = (ClauseActivation)i.next();&#xD;
                successor.receiveControl();&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
}&#xD;
        </body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHAxRBEd-0fNU76fYmlA" name="isReady">
              <ownedComment xmi:id="_17RHBBRBEd-0fNU76fYmlA" annotatedElement="_17RHAxRBEd-0fNU76fYmlA">
                <body>// Test if all predecessors to this clause activation have failed.&#xD;
&#xD;
ClauseActivationList predecessors = this.getPredecessors();&#xD;
&#xD;
boolean ready = true;&#xD;
int i = 1;&#xD;
while (ready &amp; i &lt;= predecessors.size()) { &#xD;
    ClauseActivation predecessor = predecessors.getValue(i-1);&#xD;
    BooleanValue decisionValue = predecessor.getDecision();&#xD;
&#xD;
    // Note that the decision will be null if the predecessor clause has not run yet.&#xD;
    if (decisionValue == null) {&#xD;
        ready = false;&#xD;
    } else {&#xD;
        ready = !decisionValue.value;&#xD;
    }&#xD;
&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return ready;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHBRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHBhRBEd-0fNU76fYmlA" name="runTest">
              <ownedComment xmi:id="_17RHBxRBEd-0fNU76fYmlA" annotatedElement="_17RHBhRBEd-0fNU76fYmlA">
                <body>// Run the test of the clause for this clause activation.&#xD;
&#xD;
this.conditionalNodeActivation.runTest(this.clause);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHCBRBEd-0fNU76fYmlA" name="selectBody">
              <ownedComment xmi:id="_17RHCRRBEd-0fNU76fYmlA" annotatedElement="_17RHCBRBEd-0fNU76fYmlA">
                <body>// Select the body of the clause for this clause activation.&#xD;
&#xD;
this.conditionalNodeActivation.selectBody(this.clause);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHChRBEd-0fNU76fYmlA" name="getDecision">
              <ownedComment xmi:id="_17RHCxRBEd-0fNU76fYmlA" annotatedElement="_17RHChRBEd-0fNU76fYmlA">
                <body>// Get the value (if any) on the decider pin of the clause for this clause activation.&#xD;
&#xD;
ValueList deciderValues = this.conditionalNodeActivation.getPinValues(this.clause.decider);&#xD;
&#xD;
BooleanValue deciderValue = null;&#xD;
if (deciderValues.size()  > 0) {&#xD;
    deciderValue = (BooleanValue)(deciderValues.getValue(0));&#xD;
}&#xD;
&#xD;
return deciderValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHDBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RL0xRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHDRRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHDhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHDxRBEd-0fNU76fYmlA" name="getPredecessors">
              <ownedComment xmi:id="_17RHEBRBEd-0fNU76fYmlA" annotatedElement="_17RHDxRBEd-0fNU76fYmlA">
                <body>// Return the clause activations for the predecessors of the clause for this clause activation.&#xD;
&#xD;
ClauseActivationList predecessors = new ClauseActivationList();&#xD;
&#xD;
ClauseList predecessorClauses = this.clause.predecessorClause;&#xD;
for (int i = 0; i &lt; predecessorClauses.size(); i++) {&#xD;
    Clause predecessorClause = predecessorClauses.getValue(i);&#xD;
    predecessors.addValue(this.conditionalNodeActivation.getClauseActivation(predecessorClause));&#xD;
}&#xD;
&#xD;
return predecessors;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHERRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RG-RRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHEhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHExRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHFBRBEd-0fNU76fYmlA" name="getSuccessors">
              <ownedComment xmi:id="_17RHFRRBEd-0fNU76fYmlA" annotatedElement="_17RHFBRBEd-0fNU76fYmlA">
                <body>// Return the clause activations for the successors of the clause for this clause activation.&#xD;
&#xD;
ClauseActivationList successors = new ClauseActivationList();&#xD;
&#xD;
ClauseList successorClauses = this.clause.successorClause;&#xD;
for (int i = 0; i &lt; successorClauses.size(); i++) {&#xD;
    Clause successorClause = successorClauses.getValue(i);&#xD;
    successors.addValue(this.conditionalNodeActivation.getClauseActivation(successorClause));&#xD;
}&#xD;
&#xD;
return successors;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHFhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RG-RRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHFxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHGBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RHGRRBEd-0fNU76fYmlA" name="A_clause_clauseActivation" memberEnd="_17RG_hRBEd-0fNU76fYmlA _17RHGhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RHGhRBEd-0fNU76fYmlA" visibility="private" type="_17RG-RRBEd-0fNU76fYmlA" association="_17RHGRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHGxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHHBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RHHRRBEd-0fNU76fYmlA" name="A_clauseActivations_conditionalNodeActivation" memberEnd="_17RG5RRBEd-0fNU76fYmlA _17RG_BRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RHHhRBEd-0fNU76fYmlA" name="A_selectedClauses_clauseActivation" memberEnd="_17RG6RRBEd-0fNU76fYmlA _17RHHxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RHHxRBEd-0fNU76fYmlA" visibility="private" type="_17RG4RRBEd-0fNU76fYmlA" association="_17RHHhRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RHIBRBEd-0fNU76fYmlA" name="A_activationGroup_containingNodeActivation" memberEnd="_17HtgBRBEd-0fNU76fYmlA _17RI_xRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RHIRRBEd-0fNU76fYmlA" name="Values">
            <ownedAttribute xmi:id="_17RHIhRBEd-0fNU76fYmlA" name="values" visibility="public" type="_17RKJhRBEd-0fNU76fYmlA" association="_17RHKRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHIxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHJBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RHJRRBEd-0fNU76fYmlA" name="A_bodyOutputLists_loopNodeActivation" memberEnd="_17RGzhRBEd-0fNU76fYmlA _17RHJhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RHJhRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RGyhRBEd-0fNU76fYmlA" association="_17RHJRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHJxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHKBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RHKRRBEd-0fNU76fYmlA" name="A_values_values" memberEnd="_17RHIhRBEd-0fNU76fYmlA _17RHKhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RHKhRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RHIRRBEd-0fNU76fYmlA" association="_17RHKRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHKxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHLBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17RHLRRBEd-0fNU76fYmlA" name="IntermediateActivities">
          <packageImport xmi:id="_17RHLhRBEd-0fNU76fYmlA" importedPackage="_17RSqRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RHLxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RHMBRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17RHMRRBEd-0fNU76fYmlA" importedPackage="_17RMOBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RHMhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RHMxRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RHNBRBEd-0fNU76fYmlA" name="Token" isAbstract="true">
            <ownedComment xmi:id="_17RHNRRBEd-0fNU76fYmlA" annotatedElement="_17RHNBRBEd-0fNU76fYmlA">
              <body>A token is an individual element of data or control that may flow across an activity edge.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RHNhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:id="_17RHNxRBEd-0fNU76fYmlA" name="holder" type="_17RIhxRBEd-0fNU76fYmlA" association="_17RJTxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHOBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHORRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RHOhRBEd-0fNU76fYmlA" name="transfer">
              <ownedComment xmi:id="_17RHOxRBEd-0fNU76fYmlA" annotatedElement="_17RHOhRBEd-0fNU76fYmlA">
                <body>// if this token does not have any holder, make the given holder its holder.&#xD;
// Otherwise, remove this token from its holder and return a copy of it transfered to a new holder.&#xD;
&#xD;
Token token = this;&#xD;
if (this.holder != null) {&#xD;
    this.withdraw();&#xD;
    token = this.copy();&#xD;
}&#xD;
&#xD;
token.holder = holder;&#xD;
return token;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHPBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RHPRRBEd-0fNU76fYmlA" name="holder" type="_17RIhxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHPhRBEd-0fNU76fYmlA" name="withdraw">
              <ownedComment xmi:id="_17RHPxRBEd-0fNU76fYmlA" annotatedElement="_17RHPhRBEd-0fNU76fYmlA">
                <body>// Remove this token from its holder, withdrawing any offers for it.&#xD;
&#xD;
if (!this.isWithdrawn()) {&#xD;
    // Debug.println(&quot;[withdraw] Taking token with value = &quot; + this.getValue());&#xD;
    this.holder.removeToken(this);&#xD;
    this.holder = null;&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHQBRBEd-0fNU76fYmlA" name="equals" isAbstract="true">
              <ownedComment xmi:id="_17RHQRRBEd-0fNU76fYmlA" annotatedElement="_17RHQBRBEd-0fNU76fYmlA">
                <body>Test if this token is equal to another token.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHQhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RHQxRBEd-0fNU76fYmlA" name="other" type="_17RHNBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHRBRBEd-0fNU76fYmlA" name="copy" isAbstract="true">
              <ownedComment xmi:id="_17RHRRRBEd-0fNU76fYmlA" annotatedElement="_17RHRBRBEd-0fNU76fYmlA">
                <body>// Make a copy of this token.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHRhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHRxRBEd-0fNU76fYmlA" name="isWithdrawn">
              <ownedComment xmi:id="_17RHSBRBEd-0fNU76fYmlA" annotatedElement="_17RHRxRBEd-0fNU76fYmlA">
                <body>// Test if this token has been withdrawn.&#xD;
&#xD;
return this.holder == null;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHSRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHShRBEd-0fNU76fYmlA" name="isControl" isAbstract="true">
              <ownedComment xmi:id="_17RHSxRBEd-0fNU76fYmlA" annotatedElement="_17RHShRBEd-0fNU76fYmlA">
                <body>Test whether this is a control token.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHTBRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHTRRBEd-0fNU76fYmlA" name="getValue" isAbstract="true">
              <ownedComment xmi:id="_17RHThRBEd-0fNU76fYmlA" annotatedElement="_17RHTRRBEd-0fNU76fYmlA">
                <body>Get the value associated with this token (if any).</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHTxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHUBRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHURRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RHUhRBEd-0fNU76fYmlA" name="Offer">
            <ownedComment xmi:id="_17RHUxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:id="_17RHVBRBEd-0fNU76fYmlA" annotatedElement="_17RHUhRBEd-0fNU76fYmlA">
              <body>An offer is a group of tokens offered together. The grouping of offered tokens into offers usually does not matter for how the tokens may be accepted. However, control and object tokens may become grouped together in the same offer due to a join node that has both incoming control and object flows. In this case, the control tokens are implicitly accepted once all the object tokens in the same offer have been accepted.</body>
            </ownedComment>
            <ownedAttribute xmi:id="_17RHVRRBEd-0fNU76fYmlA" name="offeredTokens" type="_17RHNBRBEd-0fNU76fYmlA" association="_17RJaxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHVhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHVxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RHWBRBEd-0fNU76fYmlA" name="countOfferedValues">
              <ownedComment xmi:id="_17RHWRRBEd-0fNU76fYmlA">
                <body>// Return the number of values being offered on object tokens.&#xD;
// Remove any tokens that have already been withdrawn and don't include them in the count.&#xD;
&#xD;
this.removeWithdrawnTokens();&#xD;
&#xD;
int count = 0;&#xD;
for (int i = 0; i &lt; this.offeredTokens.size(); i++) {&#xD;
    if (this.offeredTokens.getValue(i).getValue() != null) {&#xD;
        count = count + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
return count;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHWhRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHWxRBEd-0fNU76fYmlA" name="getOfferedTokens">
              <ownedComment xmi:id="_17RHXBRBEd-0fNU76fYmlA">
                <body>// Get the offered tokens, removing any that have been withdrawn.&#xD;
&#xD;
this.removeWithdrawnTokens();&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
TokenList offeredTokens = this.offeredTokens;&#xD;
for (int i = 0; i &lt; this.offeredTokens.size() ; i++) {&#xD;
    Token offeredToken = offeredTokens.getValue(i);&#xD;
    // Debug.println(&quot;[getOfferedTokens] token value = &quot; + offeredToken.getValue());&#xD;
    tokens.addValue(offeredToken);&#xD;
}&#xD;
&#xD;
return tokens;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHXRRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHXhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHXxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHYBRBEd-0fNU76fYmlA" name="removeOfferedValues">
              <ownedComment xmi:id="_17RHYRRBEd-0fNU76fYmlA">
                <body>// Remove the given number of non-null object tokens from those in this offer.&#xD;
&#xD;
int n = count;&#xD;
int i = 1;&#xD;
while (n > 0) {&#xD;
    if (this.offeredTokens.getValue(i-1).getValue() != null) {&#xD;
        this.offeredTokens.removeValue(i-1);&#xD;
    } else {&#xD;
        i = i + 1;&#xD;
    }&#xD;
    n = n - 1;&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHYhRBEd-0fNU76fYmlA" name="count">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHYxRBEd-0fNU76fYmlA" name="removeWithdrawnTokens">
              <ownedComment xmi:id="_17RHZBRBEd-0fNU76fYmlA">
                <body>// Remove any tokens that have already been consumed.&#xD;
&#xD;
TokenList offeredTokens = this.offeredTokens;&#xD;
int i = 1;&#xD;
while (i &lt;= this.offeredTokens.size()) {&#xD;
    if (this.offeredTokens.getValue(i-1).isWithdrawn()) {&#xD;
        this.offeredTokens.remove(i-1);&#xD;
        i = i - 1;&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHZRRBEd-0fNU76fYmlA" name="hasTokens">
              <ownedComment xmi:id="_17RHZhRBEd-0fNU76fYmlA">
                <body>// Check whether this offer has any tokens that have not been withdrawn.&#xD;
&#xD;
this.removeWithdrawnTokens();&#xD;
return this.offeredTokens.size() > 0;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHZxRBEd-0fNU76fYmlA" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RHaBRBEd-0fNU76fYmlA" name="ObjectToken">
            <ownedComment xmi:id="_17RHaRRBEd-0fNU76fYmlA" annotatedElement="_17RHaBRBEd-0fNU76fYmlA">
              <body>An object token represents the passing of data along an object flow edge.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RHahRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RHaxRBEd-0fNU76fYmlA" general="_17RHNBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RHbBRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJaRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RHbRRBEd-0fNU76fYmlA" annotatedElement="_17RHbBRBEd-0fNU76fYmlA">
                <body>The value carried by this token. A token may have no value, in which case it is a &quot;null token&quot;.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHbhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHbxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RHcBRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RHcRRBEd-0fNU76fYmlA" annotatedElement="_17RHcBRBEd-0fNU76fYmlA">
                <body>// Test if this object token is the same as the other token.&#xD;
&#xD;
return this == other;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHchRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RHcxRBEd-0fNU76fYmlA" name="other" type="_17RHNBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHdBRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RHdRRBEd-0fNU76fYmlA" annotatedElement="_17RHdBRBEd-0fNU76fYmlA">
                <body>// Return a new object token with the same value as this token.&#xD;
// [Note: the holder of the copy is not set.]&#xD;
&#xD;
ObjectToken copy = new ObjectToken();&#xD;
copy.value = this.value;&#xD;
&#xD;
return copy;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHdhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHdxRBEd-0fNU76fYmlA" name="isControl">
              <ownedComment xmi:id="_17RHeBRBEd-0fNU76fYmlA" annotatedElement="_17RHdxRBEd-0fNU76fYmlA">
                <body>// Return false for an object token.&#xD;
&#xD;
return false;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHeRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHehRBEd-0fNU76fYmlA" name="getValue">
              <ownedComment xmi:id="_17RHexRBEd-0fNU76fYmlA" annotatedElement="_17RHehRBEd-0fNU76fYmlA">
                <body>// Return the value of this object token.&#xD;
&#xD;
return this.value;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHfBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHfRRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHfhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RHfxRBEd-0fNU76fYmlA" name="ObjectNodeActivation" isAbstract="true">
            <ownedComment xmi:id="_17RHgBRBEd-0fNU76fYmlA" annotatedElement="_17RHfxRBEd-0fNU76fYmlA">
              <body>An object node activation is an activity node activation for a node that is an object node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RHgRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RHghRBEd-0fNU76fYmlA" general="_17RIhxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RHgxRBEd-0fNU76fYmlA" name="unofferedTokens" type="_17RHaBRBEd-0fNU76fYmlA" association="_17RJZRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RHhBRBEd-0fNU76fYmlA" annotatedElement="_17RHgxRBEd-0fNU76fYmlA">
                <body>Tokens held by this node activation that have not yet been offered.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHhRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHhhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RHhxRBEd-0fNU76fYmlA" name="offeredTokenCount">
              <ownedComment xmi:id="_17RHiBRBEd-0fNU76fYmlA" annotatedElement="_17RHhxRBEd-0fNU76fYmlA">
                <body>The number of held tokens that have already been offered.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RHiRRBEd-0fNU76fYmlA" name="run">
              <ownedComment xmi:id="_17RHihRBEd-0fNU76fYmlA">
                <body>// Initialize the offered token count to zero.&#xD;
&#xD;
super.run();&#xD;
this.offeredTokenCount = 0;&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHixRBEd-0fNU76fYmlA" name="sendOffers">
              <ownedComment xmi:id="_17RHjBRBEd-0fNU76fYmlA">
                <body>// If the set of tokens to be sent is empty, then offer a null token instead.&#xD;
// Otherwise, offer the given tokens as usual.&#xD;
&#xD;
if (tokens.size() == 0) {&#xD;
    tokens.addValue(new ObjectToken());&#xD;
}&#xD;
&#xD;
super.sendOffers(tokens);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHjRRBEd-0fNU76fYmlA" name="tokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHjhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHjxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHkBRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17RHkRRBEd-0fNU76fYmlA" annotatedElement="_17RHkBRBEd-0fNU76fYmlA">
                <body>// Remove any offered tokens and terminate.&#xD;
&#xD;
this.clearTokens();&#xD;
super.terminate();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHkhRBEd-0fNU76fYmlA" name="addToken">
              <ownedComment xmi:id="_17RHkxRBEd-0fNU76fYmlA">
                <body>// Transfer the given token to be held by this node only if it is a non-null object token.&#xD;
// If it is a control token or a null token, consume it without holding it.&#xD;
&#xD;
if (token.getValue() == null) {&#xD;
    token.withdraw();&#xD;
} else {&#xD;
    super.addToken(token);&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHlBRBEd-0fNU76fYmlA" name="token" type="_17RHNBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHlRRBEd-0fNU76fYmlA" name="removeToken">
              <ownedComment xmi:id="_17RHlhRBEd-0fNU76fYmlA" annotatedElement="_17RHlRRBEd-0fNU76fYmlA">
                <body>// Remove the given token, if it is held by this node activation.&#xD;
&#xD;
int i = super.removeToken(token);&#xD;
if (i > 0 &amp; i &lt;= this.offeredTokenCount) {&#xD;
    this.offeredTokenCount = this.offeredTokenCount - 1;&#xD;
}&#xD;
&#xD;
return i;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHlxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RHmBRBEd-0fNU76fYmlA" name="token" type="_17RHNBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHmRRBEd-0fNU76fYmlA" name="clearTokens">
              <ownedComment xmi:id="_17RHmhRBEd-0fNU76fYmlA" annotatedElement="_17RHmRRBEd-0fNU76fYmlA">
                <body>// Remove all held tokens.&#xD;
&#xD;
super.clearTokens();&#xD;
this.offeredTokenCount = 0;&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHmxRBEd-0fNU76fYmlA" name="countOfferedValues">
              <ownedComment xmi:id="_17RHnBRBEd-0fNU76fYmlA">
                <body>// Count the total number of non-null object tokens being offered to this node activation.&#xD;
&#xD;
int totalValueCount = 0;&#xD;
int i = 1;&#xD;
while (i &lt;= this.incomingEdges.size()) {&#xD;
    totalValueCount = totalValueCount + this.incomingEdges.getValue(i-1).countOfferedValues();&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return totalValueCount;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHnRRBEd-0fNU76fYmlA" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHnhRBEd-0fNU76fYmlA" name="sendUnofferedTokens">
              <ownedComment xmi:id="_17RHnxRBEd-0fNU76fYmlA" annotatedElement="_17RHnhRBEd-0fNU76fYmlA">
                <body>// Send offers over all outgoing edges, if there are any tokens to be offered.&#xD;
&#xD;
TokenList tokens = this.getUnofferedTokens();&#xD;
this.offeredTokenCount = this.offeredTokenCount + tokens.size();&#xD;
&#xD;
this.sendOffers(tokens);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHoBRBEd-0fNU76fYmlA" name="countUnofferedTokens">
              <ownedComment xmi:id="_17RHoRRBEd-0fNU76fYmlA" annotatedElement="_17RHoBRBEd-0fNU76fYmlA">
                <body>// Return the number of unoffered tokens that are to be offered next.&#xD;
// (By default, this is all unoffered tokens.)&#xD;
&#xD;
if (this.heldTokens.size() == 0) {&#xD;
    this.offeredTokenCount = 0;&#xD;
}&#xD;
&#xD;
return this.heldTokens.size() - this.offeredTokenCount;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHohRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHoxRBEd-0fNU76fYmlA" name="getUnofferedTokens">
              <ownedComment xmi:id="_17RHpBRBEd-0fNU76fYmlA" annotatedElement="_17RHoxRBEd-0fNU76fYmlA">
                <body>// Get the next set of unoffered tokens to be offered and return it.&#xD;
// [Note: This effectively treats all object flows as if they have weight=*, rather than the weight=1 default in the current superstructure semantics.]&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
&#xD;
int i = 1;&#xD;
while (i &lt;= this.countUnofferedTokens()) {&#xD;
    tokens.addValue(this.heldTokens.getValue(this.offeredTokenCount + i - 1));&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return tokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHpRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHphRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHpxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHqBRBEd-0fNU76fYmlA" name="takeUnofferedTokens">
              <ownedComment xmi:id="_17RHqRRBEd-0fNU76fYmlA">
                <body>// Take the next set of unoffered tokens to be offered from this node activation and return them.&#xD;
&#xD;
TokenList tokens = this.getUnofferedTokens();&#xD;
for (int i = 0; i &lt; tokens.size(); i++) {&#xD;
    Token token = tokens.getValue(i);&#xD;
    token.withdraw();&#xD;
}&#xD;
return tokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHqhRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHqxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHrBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RHrRRBEd-0fNU76fYmlA" name="MergeNodeActivation">
            <ownedComment xmi:id="_17RHrhRBEd-0fNU76fYmlA" annotatedElement="_17RHrRRBEd-0fNU76fYmlA">
              <body>A merge node activation is a control node activation for a node that is a merge node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RHrxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RHsBRBEd-0fNU76fYmlA" general="_17RIOBRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RHsRRBEd-0fNU76fYmlA" name="JoinNodeActivation">
            <ownedComment xmi:id="_17RHshRBEd-0fNU76fYmlA" annotatedElement="_17RHsRRBEd-0fNU76fYmlA">
              <body>A join node activation is a control node activation for a node that is a join node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RHsxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RHtBRBEd-0fNU76fYmlA" general="_17RIOBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RHtRRBEd-0fNU76fYmlA" name="isReady">
              <ownedComment xmi:id="_17RHthRBEd-0fNU76fYmlA" annotatedElement="_17RHtRRBEd-0fNU76fYmlA">
                <body>// Check that all incoming edges have sources that are offering tokens.&#xD;
&#xD;
boolean ready = true;&#xD;
int i = 1;&#xD;
while (ready &amp; i &lt;=this.incomingEdges.size()) {&#xD;
    ready = this.incomingEdges.getValue(i-1).hasOffer();&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return ready;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHtxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RHuBRBEd-0fNU76fYmlA" name="ForkedToken">
            <ownedComment xmi:id="_17RHuRRBEd-0fNU76fYmlA" annotatedElement="_17RHuBRBEd-0fNU76fYmlA">
              <body>A forked token is a proxy for a token that has been offered through a fork node. If the token is accepted through the fork node, then the original token is withdrawn from its holder, but the forked token remains held by the fork node activation until all outstanding offers on all outgoing edges are accepted.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RHuhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RHuxRBEd-0fNU76fYmlA" general="_17RHNBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RHvBRBEd-0fNU76fYmlA" name="baseToken" type="_17RHNBRBEd-0fNU76fYmlA" association="_17RJYRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RHvRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RHvhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RHvxRBEd-0fNU76fYmlA" name="remainingOffersCount">
              <ownedComment xmi:id="_17RHwBRBEd-0fNU76fYmlA" annotatedElement="_17RHvxRBEd-0fNU76fYmlA">
                <body>The remaining number of outstanding offers for this token on outgoing edges of the fork node.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RHwRRBEd-0fNU76fYmlA" name="isControl">
              <ownedComment xmi:id="_17RHwhRBEd-0fNU76fYmlA" annotatedElement="_17RHwRRBEd-0fNU76fYmlA">
                <body>// Test if the base token is a control token.&#xD;
&#xD;
return this.baseToken.isControl();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHwxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHxBRBEd-0fNU76fYmlA" name="withdraw">
              <ownedComment xmi:id="_17RHxRRBEd-0fNU76fYmlA" annotatedElement="_17RHxBRBEd-0fNU76fYmlA">
                <body>// If the base token is not withdrawn, then withdraw it.&#xD;
// Decrement the remaining offers count. &#xD;
// When the remaining number of offers is zero, then remove this token from its holder.&#xD;
&#xD;
if (!this.baseToken.isWithdrawn()) {&#xD;
    this.baseToken.withdraw();&#xD;
} &#xD;
&#xD;
if (this.remainingOffersCount > 0) {&#xD;
    this.remainingOffersCount = this.remainingOffersCount - 1;&#xD;
}&#xD;
&#xD;
if (this.remainingOffersCount == 0) {&#xD;
    super.withdraw();&#xD;
}</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHxhRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RHxxRBEd-0fNU76fYmlA" annotatedElement="_17RHxhRBEd-0fNU76fYmlA">
                <body>// Return a copy of the base token.&#xD;
&#xD;
return this.baseToken.copy();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHyBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHyRRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RHyhRBEd-0fNU76fYmlA" annotatedElement="_17RHyRRBEd-0fNU76fYmlA">
                <body>// Test if this token is equal to another token.&#xD;
&#xD;
return this == otherToken;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHyxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RHzBRBEd-0fNU76fYmlA" name="otherToken" type="_17RHNBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RHzRRBEd-0fNU76fYmlA" name="getValue">
              <ownedComment xmi:id="_17RHzhRBEd-0fNU76fYmlA" annotatedElement="_17RHzRRBEd-0fNU76fYmlA">
                <body>// Return the value of the base token.&#xD;
&#xD;
return this.baseToken.getValue();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RHzxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RH0BRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RH0RRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RH0hRBEd-0fNU76fYmlA" name="ForkNodeActivation">
            <ownedComment xmi:id="_17RH0xRBEd-0fNU76fYmlA" annotatedElement="_17RH0hRBEd-0fNU76fYmlA">
              <body>A fork node activation is a control node activation for a node that is a fork node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RH1BRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RH1RRBEd-0fNU76fYmlA" general="_17RIOBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RH1hRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17RH1xRBEd-0fNU76fYmlA" annotatedElement="_17RH1hRBEd-0fNU76fYmlA">
                <body>// Create forked tokens for all incoming tokens and offer them on all outgoing edges.&#xD;
&#xD;
if (this.node == null) {&#xD;
    Debug.println(&quot;[fire] Anonymous fork node.&quot;);&#xD;
} else {&#xD;
    Debug.println(&quot;[fire] Fork node &quot; + this.node.name + &quot;...&quot;);&#xD;
}&#xD;
&#xD;
ActivityEdgeInstanceList outgoingEdges = this.outgoingEdges;&#xD;
int outgoingEdgeCount = outgoingEdges.size();&#xD;
&#xD;
TokenList forkedTokens = new TokenList();&#xD;
for (int i = 0; i &lt; incomingTokens.size(); i++) {&#xD;
    Token token = incomingTokens.getValue(i);&#xD;
    ForkedToken forkedToken = new ForkedToken();&#xD;
    forkedToken.baseToken = token;&#xD;
    forkedToken.remainingOffersCount = outgoingEdgeCount;&#xD;
    forkedTokens.addValue(forkedToken);&#xD;
}&#xD;
&#xD;
this.addTokens(forkedTokens);&#xD;
&#xD;
this.sendOffers(forkedTokens);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RH2BRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RH2RRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RH2hRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RH2xRBEd-0fNU76fYmlA" name="InitialNodeActivation">
            <ownedComment xmi:id="_17RH3BRBEd-0fNU76fYmlA" annotatedElement="_17RH2xRBEd-0fNU76fYmlA">
              <body>An initial node activation is a control node activation for a node that is an initial node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RH3RRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RH3hRBEd-0fNU76fYmlA" general="_17RIOBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RH3xRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17RH4BRBEd-0fNU76fYmlA" annotatedElement="_17RH3xRBEd-0fNU76fYmlA">
                <body>// Create a single token and send offers for it.&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
tokens.addValue(new ControlToken());&#xD;
this.addTokens(tokens);&#xD;
&#xD;
this.sendOffers(tokens);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RH4RRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RH4hRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RH4xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RH5BRBEd-0fNU76fYmlA" name="DecisionNodeActivation">
            <ownedComment xmi:id="_17RH5RRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RH5hRBEd-0fNU76fYmlA" general="_17RIOBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RH5xRBEd-0fNU76fYmlA" name="decisionInputExecution" type="_17RMWhRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJXxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RH6BRBEd-0fNU76fYmlA" annotatedElement="_17RH5xRBEd-0fNU76fYmlA">
                <body>The current execution of the decision input behavior (if any).</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RH6RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RH6hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RH6xRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17RH7BRBEd-0fNU76fYmlA" annotatedElement="_17RH6xRBEd-0fNU76fYmlA">
                <body>// Get the decision values and test them on each guard.&#xD;
// Forward the offer over the edges for which the test succeeds.&#xD;
&#xD;
Debug.println(&quot;[fire] Decision node &quot; + this.node.name + &quot;...&quot;);&#xD;
&#xD;
//TokenList incomingTokens = this.takeOfferedTokens();&#xD;
TokenList removedControlTokens = this.removeJoinedControlTokens(incomingTokens);&#xD;
ValueList decisionValues = this.getDecisionValues(incomingTokens);&#xD;
&#xD;
ActivityEdgeInstanceList outgoingEdges = this.outgoingEdges;&#xD;
for (int i = 0; i &lt; outgoingEdges.size(); i++) {&#xD;
    ActivityEdgeInstance edgeInstance = outgoingEdges.getValue(i);&#xD;
    ValueSpecification guard = edgeInstance.edge.guard;&#xD;
&#xD;
    TokenList offeredTokens = new TokenList();&#xD;
    for (int j = 0; j &lt; incomingTokens.size(); j++) {&#xD;
        Token incomingToken = incomingTokens.getValue(j);&#xD;
        Value decisionValue = decisionValues.getValue(j);&#xD;
        if (this.test(guard, decisionValue)) {&#xD;
            offeredTokens.addValue(incomingToken);&#xD;
        }&#xD;
    }&#xD;
&#xD;
    if (offeredTokens.size() > 0) {&#xD;
        for (int j = 0; j &lt; removedControlTokens.size(); j++) {&#xD;
            Token removedControlToken = removedControlTokens.getValue(j);&#xD;
            offeredTokens.addValue(removedControlToken);&#xD;
        }&#xD;
        edgeInstance.sendOffer(offeredTokens);&#xD;
    }&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RH7RRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RH7hRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RH7xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RH8BRBEd-0fNU76fYmlA" name="getDecisionValues">
              <ownedComment xmi:id="_17RH8RRBEd-0fNU76fYmlA" annotatedElement="_17RH8BRBEd-0fNU76fYmlA">
                <body>// If there is neither a decision input flow nor a decision input behavior, then return the set of values from the incoming tokens. &#xD;
//        [In this case, the single incoming edge must be an object flow.]&#xD;
// If there is a decision input flow, but no decision input behavior, then return a list of the decision input values equal in size to the number of incoming tokens.&#xD;
// If there is both a decision input flow and a decision input behavior, then execute the decision input behavior once for each incoming token and return the set of resulting values.&#xD;
//     If the primary incoming edge is an object flow, then the value on each object token is passed to the decision input behavior, along with the decision input flow value, if any.&#xD;
//     If the primary incoming edge is a control flow, then the decision input behavior only receives the decision input flow, if any.&#xD;
&#xD;
&#xD;
Value decisionInputValue = this.getDecisionInputFlowValue();&#xD;
&#xD;
ValueList decisionValues = new ValueList();&#xD;
for (int i = 0; i &lt; incomingTokens.size(); i++) {&#xD;
    Token incomingToken = incomingTokens.getValue(i);&#xD;
    Value value = this.executeDecisionInputBehavior(incomingToken.getValue(), decisionInputValue);&#xD;
    decisionValues.addValue(value);&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[getDecisionValues] &quot; + decisionValues.size() + &quot; decision value(s):&quot;);&#xD;
for (int i = 0; i &lt; decisionValues.size(); i++) {&#xD;
    Value decisionValue = decisionValues.getValue(i);&#xD;
    Debug.println(&quot;[getDecisionValues] decisionValues[&quot; + i + &quot;] = &quot; + decisionValue);&#xD;
}&#xD;
&#xD;
return decisionValues;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RH8hRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RH8xRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RH9BRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RH9RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RH9hRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RH9xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RH-BRBEd-0fNU76fYmlA" name="executeDecisionInputBehavior">
              <ownedComment xmi:id="_17RH-RRBEd-0fNU76fYmlA" annotatedElement="_17RH-BRBEd-0fNU76fYmlA">
                <body>// Create the decision input execution from the decision input behavior.&#xD;
// If the behavior has input parameter(s), set the input parameter(s) of the execution to the given value(s).&#xD;
// Execute the decision input execution and then remove it.&#xD;
// Return the value of the output parameter of the execution.&#xD;
// If there is no decision input behavior, the decision input value is returned, if one is given, otherwise the input value is used as the decision value.&#xD;
&#xD;
Debug.println(&quot;[executeDecisionBehavior] inputValue = &quot; + inputValue);&#xD;
&#xD;
Behavior decisionInputBehavior = ((DecisionNode)(this.node)).decisionInput;&#xD;
&#xD;
Value decisionInputResult = null;&#xD;
&#xD;
if (decisionInputBehavior == null) {&#xD;
&#xD;
    if (decisionInputValue != null) {&#xD;
        decisionInputResult = decisionInputValue;&#xD;
    } else {&#xD;
        decisionInputResult = inputValue;&#xD;
    }&#xD;
&#xD;
} else {&#xD;
&#xD;
    this.decisionInputExecution = this.getExecutionLocus().factory.createExecution(decisionInputBehavior, this.getExecutionContext());&#xD;
&#xD;
    int i = 1;&#xD;
    int j = 0;&#xD;
    while ((j == 0 | (j == 1 &amp; decisionInputValue != null)) &amp; i &lt;= decisionInputBehavior.ownedParameter.size()) {&#xD;
        Parameter parameter = decisionInputBehavior.ownedParameter.getValue(i-1);&#xD;
        if (parameter.direction.equals(ParameterDirectionKind.in) |&#xD;
            parameter.direction.equals(ParameterDirectionKind.inout)) {&#xD;
            ParameterValue inputParameterValue = new ParameterValue();&#xD;
            inputParameterValue.parameter = parameter;&#xD;
&#xD;
            j = j +1;&#xD;
            if (j == 1 &amp;&amp; inputValue != null) {&#xD;
                inputParameterValue.values.addValue(inputValue);&#xD;
            } else {&#xD;
                inputParameterValue.values.addValue(decisionInputValue);&#xD;
            }&#xD;
&#xD;
            this.decisionInputExecution.setParameterValue(inputParameterValue);&#xD;
&#xD;
        }&#xD;
        i = i + 1;&#xD;
    }&#xD;
&#xD;
    this.decisionInputExecution.execute();&#xD;
&#xD;
    ParameterValueList outputParameterValues = this.decisionInputExecution.getOutputParameterValues();&#xD;
    decisionInputExecution.destroy();&#xD;
&#xD;
    decisionInputResult = outputParameterValues.getValue(0).values.getValue(0);&#xD;
&#xD;
}&#xD;
&#xD;
return decisionInputResult;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RH-hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RH-xRBEd-0fNU76fYmlA" name="inputValue" type="_17RKJhRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RH_BRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RH_RRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RH_hRBEd-0fNU76fYmlA" name="decisionInputValue" type="_17RKJhRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RH_xRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIABRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIARRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17RIAhRBEd-0fNU76fYmlA" annotatedElement="_17RIARRBEd-0fNU76fYmlA">
                <body>// Terminate the decision input execution, if any, and then terminate this activation.&#xD;
&#xD;
if (this.decisionInputExecution != null) {&#xD;
    this.decisionInputExecution.terminate();&#xD;
}&#xD;
&#xD;
super.terminate();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIAxRBEd-0fNU76fYmlA" name="isReady">
              <ownedComment xmi:id="_17RIBBRBEd-0fNU76fYmlA" annotatedElement="_17RIAxRBEd-0fNU76fYmlA">
                <body>// Check that all incoming edges have sources that are offering tokens.&#xD;
// [This should be at most two incoming edges, if there is a decision input flow.]&#xD;
&#xD;
int i = 1;&#xD;
boolean ready = true;&#xD;
while (ready &amp; i &lt;= this.incomingEdges.size()) {&#xD;
    ready = this.incomingEdges.getValue(i-1).hasOffer();&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return ready;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIBRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIBhRBEd-0fNU76fYmlA" name="takeOfferedTokens">
              <ownedComment xmi:id="_17RIBxRBEd-0fNU76fYmlA" annotatedElement="_17RIBhRBEd-0fNU76fYmlA">
                <body>// Get tokens from the incoming edge that is not the decision input flow.&#xD;
&#xD;
ObjectFlow decisionInputFlow = ((DecisionNode)(this.node)).decisionInputFlow;&#xD;
&#xD;
TokenList allTokens = new TokenList();&#xD;
ActivityEdgeInstanceList incomingEdges = this.incomingEdges;&#xD;
for (int i = 0; i &lt; incomingEdges.size(); i++) {&#xD;
    ActivityEdgeInstance edgeInstance = incomingEdges.getValue(i);&#xD;
    if (edgeInstance.edge != decisionInputFlow) {&#xD;
        TokenList tokens = edgeInstance.takeOfferedTokens();&#xD;
        for (int j = 0; j &lt; tokens.size(); j++) {&#xD;
            allTokens.addValue(tokens.getValue(j));&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
return allTokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RICBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RICRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIChRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RICxRBEd-0fNU76fYmlA" name="getDecisionInputFlowValue">
              <ownedComment xmi:id="_17RIDBRBEd-0fNU76fYmlA" annotatedElement="_17RICxRBEd-0fNU76fYmlA">
                <body>// Take the next token available on the decision input flow, if any, and return its value.&#xD;
&#xD;
ActivityEdgeInstance decisionInputFlowInstance = this.getDecisionInputFlowInstance();&#xD;
&#xD;
Value value = null;&#xD;
if (decisionInputFlowInstance != null) {&#xD;
    TokenList tokens = decisionInputFlowInstance.takeOfferedTokens();&#xD;
    if (tokens.size() > 0) {&#xD;
        value = ((ObjectToken)(tokens.getValue(0))).value;&#xD;
    }&#xD;
}&#xD;
&#xD;
return value;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIDRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIDhRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIDxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIEBRBEd-0fNU76fYmlA" name="getDecisionInputFlowInstance">
              <ownedComment xmi:id="_17RIERRBEd-0fNU76fYmlA" annotatedElement="_17RIEBRBEd-0fNU76fYmlA">
                <body>// Get the activity edge instance for the decision input flow, if any.&#xD;
&#xD;
ActivityEdge decisionInputFlow = ((DecisionNode)(this.node)).decisionInputFlow;&#xD;
&#xD;
ActivityEdgeInstance edgeInstance = null;&#xD;
if (decisionInputFlow != null) {&#xD;
    int i = 1;&#xD;
    while (edgeInstance == null &amp; i &lt;=this.incomingEdges.size()) {&#xD;
        ActivityEdgeInstance incomingEdge = this.incomingEdges.getValue(i-1);&#xD;
        if (incomingEdge.edge == decisionInputFlow) {&#xD;
            edgeInstance = incomingEdge;&#xD;
        }&#xD;
        i = i + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
return edgeInstance;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIEhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RIQRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIExRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIFBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIFRRBEd-0fNU76fYmlA" name="test">
              <ownedComment xmi:id="_17RIFhRBEd-0fNU76fYmlA" annotatedElement="_17RIFRRBEd-0fNU76fYmlA">
                <body>// Test if the given value matches the guard. If there is no guard, return true.&#xD;
&#xD;
boolean guardResult = true;&#xD;
if (guard != null) {&#xD;
    Value guardValue = this.getExecutionLocus().executor.evaluate(guard);&#xD;
    guardResult = guardValue.equals(value);&#xD;
}&#xD;
&#xD;
return guardResult;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIFxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RIGBRBEd-0fNU76fYmlA" name="guard" type="_17RO0RRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RIGRRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIGhRBEd-0fNU76fYmlA" name="removeJoinedControlTokens">
              <ownedComment xmi:id="_17RIGxRBEd-0fNU76fYmlA">
                <body>// If the primary incoming edge is an object flow, then remove any control tokens from the incoming tokens and return them.&#xD;
// [Control tokens may effectively be offered on an object flow outgoing from a join node that has both control and object flows incoming.]&#xD;
&#xD;
TokenList removedControlTokens = new TokenList();&#xD;
&#xD;
if (this.hasObjectFlowInput()) {&#xD;
    int i = 1;&#xD;
    while (i &lt;= incomingTokens.size()) {&#xD;
        Token token = incomingTokens.getValue(i-1);&#xD;
        if (token.isControl()) {&#xD;
            removedControlTokens.addValue(token);&#xD;
            incomingTokens.removeValue(i-1);&#xD;
            i = i - 1;&#xD;
        }&#xD;
        i = i + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
return removedControlTokens;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIHBRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIHRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIHhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RIHxRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIIBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIIRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIIhRBEd-0fNU76fYmlA" name="hasObjectFlowInput">
              <ownedComment xmi:id="_17RIIxRBEd-0fNU76fYmlA">
                <body>// Check that the primary incoming edge is an object flow.&#xD;
&#xD;
ActivityEdge decisionInputFlow = ((DecisionNode)(this.node)).decisionInputFlow;&#xD;
&#xD;
boolean isObjectFlow = false;&#xD;
int i = 1;&#xD;
while (!isObjectFlow &amp; i &lt;= this.incomingEdges.size()) {&#xD;
    ActivityEdge edge = this.incomingEdges.getValue(i-1).edge;&#xD;
    isObjectFlow = edge != decisionInputFlow &amp; edge instanceof ObjectFlow;&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return isObjectFlow;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIJBRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RIJRRBEd-0fNU76fYmlA" name="ControlToken">
            <ownedComment xmi:id="_17RIJhRBEd-0fNU76fYmlA" annotatedElement="_17RIJRRBEd-0fNU76fYmlA">
              <body>A control token represents the passing of control along a control flow edge.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RIJxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RIKBRBEd-0fNU76fYmlA" general="_17RHNBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RIKRRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RIKhRBEd-0fNU76fYmlA" annotatedElement="_17RIKRRBEd-0fNU76fYmlA">
                <body>// Return true if the other token is a control token, because control tokens are interchangable.&#xD;
&#xD;
return other instanceof ControlToken;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIKxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RILBRBEd-0fNU76fYmlA" name="other" type="_17RHNBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RILRRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RILhRBEd-0fNU76fYmlA" annotatedElement="_17RILRRBEd-0fNU76fYmlA">
                <body>// Return a new control token.&#xD;
&#xD;
return new ControlToken();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RILxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIMBRBEd-0fNU76fYmlA" name="isControl">
              <ownedComment xmi:id="_17RIMRRBEd-0fNU76fYmlA" annotatedElement="_17RIMBRBEd-0fNU76fYmlA">
                <body>// Return true for a control token.&#xD;
&#xD;
return true;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIMhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIMxRBEd-0fNU76fYmlA" name="getValue">
              <ownedComment xmi:id="_17RINBRBEd-0fNU76fYmlA" annotatedElement="_17RIMxRBEd-0fNU76fYmlA">
                <body>// Control tokens do not have values.&#xD;
&#xD;
return null;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RINRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RINhRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RINxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RIOBRBEd-0fNU76fYmlA" name="ControlNodeActivation" isAbstract="true">
            <ownedComment xmi:id="_17RIORRBEd-0fNU76fYmlA" annotatedElement="_17RIOBRBEd-0fNU76fYmlA">
              <body>A control node activation is an activity node activation for a node that is a control node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RIOhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RIOxRBEd-0fNU76fYmlA" general="_17RIhxRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RIPBRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17RIPRRBEd-0fNU76fYmlA" annotatedElement="_17RIPBRBEd-0fNU76fYmlA">
                <body>// By default, offer all tokens on all outgoing edges.&#xD;
&#xD;
if (this.node != null) {&#xD;
    Debug.println(&quot;[fire] Control node &quot; + this.node.name + &quot;...&quot;);&#xD;
}&#xD;
&#xD;
this.sendOffers(incomingTokens);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIPhRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIPxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIQBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RIQRRBEd-0fNU76fYmlA" name="ActivityEdgeInstance">
            <ownedComment xmi:id="_17RIQhRBEd-0fNU76fYmlA" annotatedElement="_17RIQRRBEd-0fNU76fYmlA">
              <body>An activity edge instance is a connection between activity node activations corresponding to an edge between the corresponding nodes of those activations</body>
            </ownedComment>
            <ownedComment xmi:id="_17RIQxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:id="_17RIRBRBEd-0fNU76fYmlA" name="edge" type="_17RS_BRBEd-0fNU76fYmlA" association="_17RJVhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RIRRRBEd-0fNU76fYmlA" annotatedElement="_17RIRBRBEd-0fNU76fYmlA">
                <body>The activity edge of which this is an instance.&#xD;
[This is optional to allow for an implicit fork node execution to be connected to its action execution by an edge instance which does not have a corresponding node in the model.]</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIRhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIRxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RISBRBEd-0fNU76fYmlA" name="group" type="_17RI8BRBEd-0fNU76fYmlA" association="_17RJThRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RISRRBEd-0fNU76fYmlA" annotatedElement="_17RISBRBEd-0fNU76fYmlA">
                <body>The activity group that contains this activity edge instance. </body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIShRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RISxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RITBRBEd-0fNU76fYmlA" name="source" type="_17RIhxRBEd-0fNU76fYmlA" association="_17RJWhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RITRRBEd-0fNU76fYmlA" annotatedElement="_17RITBRBEd-0fNU76fYmlA">
                <body>The source of this activity edge instance.&#xD;
The node of the source must be the same as the source of the edge of this edge instance.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RIThRBEd-0fNU76fYmlA" name="target" type="_17RIhxRBEd-0fNU76fYmlA" association="_17RJVBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RITxRBEd-0fNU76fYmlA" annotatedElement="_17RIThRBEd-0fNU76fYmlA">
                <body>The target of this activity edge instance.&#xD;
The node of the target must be the same as the target of the edge of this edge instance.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RIUBRBEd-0fNU76fYmlA" name="offers" visibility="public" type="_17RHUhRBEd-0fNU76fYmlA" association="_17RJWxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIURRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIUhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RIUxRBEd-0fNU76fYmlA" name="sendOffer">
              <ownedComment xmi:id="_17RIVBRBEd-0fNU76fYmlA" annotatedElement="_17RIUxRBEd-0fNU76fYmlA">
                <body>// Send an offer  from the source to the target.&#xD;
// Keep the offered tokens until taken by the target.&#xD;
// (Note that any one edge should only be handling either all object tokens or all control tokens.)&#xD;
&#xD;
Offer offer = new Offer();&#xD;
&#xD;
for (int i = 0; i &lt; tokens.size(); i++) {&#xD;
    Token token = tokens.getValue(i);&#xD;
    // Debug.println(&quot;[sendOffer] token value = &quot; + token.getValue());&#xD;
    offer.offeredTokens.addValue(token);&#xD;
}&#xD;
&#xD;
this.offers.addValue(offer);&#xD;
&#xD;
this.target.receiveOffer();&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIVRRBEd-0fNU76fYmlA" name="tokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIVhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIVxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIWBRBEd-0fNU76fYmlA" name="countOfferedValues">
              <ownedComment xmi:id="_17RIWRRBEd-0fNU76fYmlA" annotatedElement="_17RIWBRBEd-0fNU76fYmlA">
                <body>// Return the number of values being offered in object tokens.&#xD;
&#xD;
int count = 0;&#xD;
OfferList offers = this.offers;&#xD;
for (int i = 0; i &lt; offers.size(); i++) {&#xD;
    count = count +offers.getValue(i).countOfferedValues();&#xD;
}&#xD;
&#xD;
return count;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIWhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIWxRBEd-0fNU76fYmlA" name="takeOfferedTokens">
              <ownedComment xmi:id="_17RIXBRBEd-0fNU76fYmlA" annotatedElement="_17RIWxRBEd-0fNU76fYmlA">
                <body>// Take all the offered tokens and return them.&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
&#xD;
while (this.offers.size() > 0) {&#xD;
    TokenList offeredTokens = this.offers.getValue(0).getOfferedTokens();&#xD;
    for (int i = 0; i &lt; offeredTokens.size(); i++) {&#xD;
        tokens.addValue(offeredTokens.getValue(i));&#xD;
    }&#xD;
    this.offers.removeValue(0);&#xD;
}&#xD;
&#xD;
return tokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIXRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIXhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIXxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIYBRBEd-0fNU76fYmlA" name="takeOfferedTokens">
              <ownedComment xmi:id="_17RIYRRBEd-0fNU76fYmlA">
                <body>// Take all the offered tokens, up to the given maximum count of non-null object tokens, and return them.&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
int remainingCount = maxCount;&#xD;
&#xD;
while (this.offers.size() > 0 &amp; remainingCount > 0) {&#xD;
    Offer offer = this.offers.getValue(0);&#xD;
    TokenList offeredTokens = offer.getOfferedTokens();&#xD;
    int count = offer.countOfferedValues();&#xD;
    if (count &lt;= remainingCount) {&#xD;
        for (int i = 0; i &lt; offeredTokens.size(); i++) {&#xD;
            tokens.addValue(offeredTokens.getValue(i));&#xD;
        }&#xD;
        remainingCount = remainingCount - count;&#xD;
        this.offers.removeValue(0);&#xD;
    } else {&#xD;
        for (int i = 0; i &lt; remainingCount; i++) {&#xD;
            Token token = offeredTokens.getValue(i);&#xD;
            if (token.getValue() != null) {&#xD;
                tokens.addValue(token);&#xD;
            }&#xD;
        }&#xD;
        offer.removeOfferedValues(remainingCount);&#xD;
        remainingCount = 0;&#xD;
    }&#xD;
}&#xD;
&#xD;
return tokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIYhRBEd-0fNU76fYmlA" name="maxCount">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RIYxRBEd-0fNU76fYmlA" name="Parameter1" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIZBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIZRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIZhRBEd-0fNU76fYmlA" name="getOfferedTokens">
              <ownedComment xmi:id="_17RIZxRBEd-0fNU76fYmlA" annotatedElement="_17RIZhRBEd-0fNU76fYmlA">
                <body>// Get the offered tokens (after which the tokens will still be offered).&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
OfferList offers = this.offers;&#xD;
&#xD;
for (int i = 0; i &lt; offers.size(); i++) {&#xD;
    TokenList offeredTokens = offers.getValue(i).getOfferedTokens();&#xD;
    for (int j = 0; j &lt; offeredTokens.size(); j++) {&#xD;
        tokens.addValue(offeredTokens.getValue(j));&#xD;
    }&#xD;
}&#xD;
&#xD;
return tokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIaBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIaRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIahRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIaxRBEd-0fNU76fYmlA" name="hasOffer">
              <ownedComment xmi:id="_17RIbBRBEd-0fNU76fYmlA" annotatedElement="_17RIaxRBEd-0fNU76fYmlA">
                <body>// Return true if there are any pending offers.&#xD;
&#xD;
boolean hasTokens = false;&#xD;
int i = 1;&#xD;
while (!hasTokens &amp; i &lt;= this.offers.size()) {&#xD;
    hasTokens = this.offers.getValue(i-1).hasTokens();&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return hasTokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIbRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RIbhRBEd-0fNU76fYmlA" name="ActivityExecution">
            <ownedComment xmi:id="_17RIbxRBEd-0fNU76fYmlA" annotatedElement="_17RIbhRBEd-0fNU76fYmlA">
              <body>An activity execution is used to execute a specific activity. The type of the activity execution must be an activity.&#xD;
When executed, the activity execution creates activity edge instances for all activity edges, activity node activations for all activity nodes and makes offers to all nodes with no incoming edges.&#xD;
Execution terminates when either all node activations are complete, or an activity final node is executed.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RIcBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RIcRRBEd-0fNU76fYmlA" general="_17RMWhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RIchRBEd-0fNU76fYmlA" name="activationGroup" type="_17RI8BRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJVRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RIcxRBEd-0fNU76fYmlA" annotatedElement="_17RIchRBEd-0fNU76fYmlA">
                <body>The group of activations of the activity nodes of the activity.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RIdBRBEd-0fNU76fYmlA" name="execute">
              <ownedComment xmi:id="_17RIdRRBEd-0fNU76fYmlA" annotatedElement="_17RIdBRBEd-0fNU76fYmlA">
                <body>// Execute the activity for this execution by creating an activity node activation group and activating all the activity nodes in the activity.&#xD;
// When this is complete, copy the values on the tokens offered by output parameter nodes to the corresponding output parameters.&#xD;
&#xD;
Activity activity = (Activity)(this.getTypes().getValue(0));&#xD;
&#xD;
Debug.println(&quot;[execute] Activity &quot; + activity.name + &quot;...&quot;);&#xD;
// Debug.println(&quot;[execute] context = &quot; + this.context.objectId());&#xD;
&#xD;
this.activationGroup = new ActivityNodeActivationGroup();&#xD;
this.activationGroup.activityExecution = this;&#xD;
this.activationGroup.activate(activity.node, activity.edge);&#xD;
&#xD;
// Debug.println(&quot;[execute] Getting output parameter node activations...&quot;);&#xD;
&#xD;
ActivityParameterNodeActivationList outputActivations = this.activationGroup.getOutputParameterNodeActivations();&#xD;
&#xD;
// Debug.println(&quot;[execute] There are &quot; + outputActivations.size() + &quot; output parameter node activations.&quot;);&#xD;
&#xD;
for (int i = 0; i &lt; outputActivations.size(); i++) {&#xD;
    ActivityParameterNodeActivation outputActivation = outputActivations.getValue(i);&#xD;
&#xD;
    ParameterValue parameterValue = new ParameterValue();&#xD;
    parameterValue.parameter = ((ActivityParameterNode)(outputActivation.node)).parameter;&#xD;
&#xD;
    TokenList tokens = outputActivation.getTokens();&#xD;
    for (int j = 0; j &lt; tokens.size(); j++) {&#xD;
        Token token = tokens.getValue(j);&#xD;
        Value value = ((ObjectToken)token).value;&#xD;
        if (value != null) {&#xD;
            parameterValue.values.addValue(value);&#xD;
        }&#xD;
    }&#xD;
&#xD;
    this.setParameterValue(parameterValue);&#xD;
}&#xD;
&#xD;
Debug.println(&quot;[execute] Activity &quot; + activity.name + &quot; completed.&quot;);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIdhRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RIdxRBEd-0fNU76fYmlA" annotatedElement="_17RIdhRBEd-0fNU76fYmlA">
                <body>// Create a new activity execution that is a copy of this execution.&#xD;
// [Note: This currently just returns a non-executing execution for the same activity as this execution.]&#xD;
&#xD;
return super.copy();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIeBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIeRRBEd-0fNU76fYmlA" name="new_">
              <ownedComment xmi:id="_17RIehRBEd-0fNU76fYmlA" annotatedElement="_17RIeRRBEd-0fNU76fYmlA">
                <body>// Create a new activity execution with empty properties.&#xD;
&#xD;
return new ActivityExecution();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIexRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIfBRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17RIfRRBEd-0fNU76fYmlA" annotatedElement="_17RIfBRBEd-0fNU76fYmlA">
                <body>// Terminate all node activations (which will ultimately result in the activity execution completing).&#xD;
&#xD;
this.activationGroup.terminateAll();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RIfhRBEd-0fNU76fYmlA" name="ActivityFinalNodeActivation">
            <ownedComment xmi:id="_17RIfxRBEd-0fNU76fYmlA" annotatedElement="_17RIfhRBEd-0fNU76fYmlA">
              <body>An activity final node activation is a control node activation for a node that is an activity final node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RIgBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RIgRRBEd-0fNU76fYmlA" general="_17RIOBRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RIghRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17RIgxRBEd-0fNU76fYmlA" annotatedElement="_17RIghRBEd-0fNU76fYmlA">
                <body>// Terminate the group containing this activation.&#xD;
&#xD;
Debug.println(&quot;[fire] Activity final node &quot; + this.node.name + &quot;...&quot;);&#xD;
&#xD;
this.group.terminateAll();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIhBRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIhRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIhhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RIhxRBEd-0fNU76fYmlA" name="ActivityNodeActivation" isAbstract="true">
            <ownedComment xmi:id="_17RIiBRBEd-0fNU76fYmlA" annotatedElement="_17RIhxRBEd-0fNU76fYmlA">
              <body>An activity node activation is used to define the behavior of an activity node in the context of a containing activity or structured activity node.&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:id="_17RIiRRBEd-0fNU76fYmlA">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RIihRBEd-0fNU76fYmlA" general="_17RNXhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RIixRBEd-0fNU76fYmlA" name="group" type="_17RI8BRBEd-0fNU76fYmlA" association="_17RJTRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RIjBRBEd-0fNU76fYmlA" annotatedElement="_17RIixRBEd-0fNU76fYmlA">
                <body>The group that contains this activity node activation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIjRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIjhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RIjxRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA" association="_17RJUBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RIkBRBEd-0fNU76fYmlA" annotatedElement="_17RIjxRBEd-0fNU76fYmlA">
                <body>The activity node being activated by this activity node activation. The node must be owned by the activity (type) of the activity execution of this node activation.&#xD;
[This is optional, to allow for fork node edge queues and implicit fork and join node activations for actions to not have nodes in the model.]</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIkRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIkhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RIkxRBEd-0fNU76fYmlA" name="incomingEdges" type="_17RIQRRBEd-0fNU76fYmlA" association="_17RJVBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RIlBRBEd-0fNU76fYmlA" annotatedElement="_17RIkxRBEd-0fNU76fYmlA">
                <body>The set of activity edge instances for the incoming edges of the node.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIlRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIlhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RIlxRBEd-0fNU76fYmlA" name="outgoingEdges" type="_17RIQRRBEd-0fNU76fYmlA" association="_17RJWhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RImBRBEd-0fNU76fYmlA" annotatedElement="_17RIlxRBEd-0fNU76fYmlA">
                <body>The set of activity edge instances for the outgoing edges of the node.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RImRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RImhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RImxRBEd-0fNU76fYmlA" name="running">
              <ownedComment xmi:id="_17RInBRBEd-0fNU76fYmlA" annotatedElement="_17RImxRBEd-0fNU76fYmlA">
                <body>If true, this node activation is enabled for execution once all its other prerequesites are satisfied.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RInRRBEd-0fNU76fYmlA" name="heldTokens" type="_17RHNBRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJTxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RInhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RInxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RIoBRBEd-0fNU76fYmlA" name="run">
              <ownedComment xmi:id="_17RIoRRBEd-0fNU76fYmlA" annotatedElement="_17RIoBRBEd-0fNU76fYmlA">
                <body>// Run the activation of this node.&#xD;
&#xD;
if (this.node != null) {&#xD;
    Debug.println(&quot;[run] node = &quot; + this.node.name);&#xD;
} else {&#xD;
    Debug.println(&quot;[run] Anonymous activation of type &quot; + this.getClass().getName());&#xD;
}&#xD;
&#xD;
this.running = true;&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIohRBEd-0fNU76fYmlA" name="receiveOffer">
              <ownedComment xmi:id="_17RIoxRBEd-0fNU76fYmlA" annotatedElement="_17RIohRBEd-0fNU76fYmlA">
                <body>// Receive an offer from an incoming edge.&#xD;
// Check if all prerequisites have been satisfied. If so, fire.&#xD;
&#xD;
if (this.node != null) {&#xD;
    Debug.println(&quot;[receiveOffer] node = &quot; + this.node.name);&#xD;
}&#xD;
&#xD;
_beginIsolation();&#xD;
&#xD;
    boolean ready = this.isReady();&#xD;
&#xD;
    TokenList tokens = new TokenList();&#xD;
     if (ready) {&#xD;
        Debug.println(&quot;[receiveOffer] Firing.&quot;);&#xD;
        tokens = this.takeOfferedTokens();&#xD;
    }&#xD;
&#xD;
_endIsolation();&#xD;
&#xD;
if (ready) {&#xD;
    this.fire(tokens);&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIpBRBEd-0fNU76fYmlA" name="takeOfferedTokens">
              <ownedComment xmi:id="_17RIpRRBEd-0fNU76fYmlA" annotatedElement="_17RIpBRBEd-0fNU76fYmlA">
                <body>// Get tokens from all incoming edges.&#xD;
&#xD;
TokenList allTokens = new TokenList();&#xD;
ActivityEdgeInstanceList incomingEdges = this.incomingEdges;&#xD;
for (int i = 0; i &lt; incomingEdges.size(); i++) {&#xD;
    ActivityEdgeInstance incomingEdge = incomingEdges.getValue(i);&#xD;
    TokenList tokens = incomingEdge.takeOfferedTokens();&#xD;
    for (int j = 0; j &lt; tokens.size(); j ++) {&#xD;
        Token token = tokens.getValue(j);&#xD;
        allTokens.addValue(token);&#xD;
    }&#xD;
}&#xD;
&#xD;
return allTokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIphRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIpxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIqBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIqRRBEd-0fNU76fYmlA" name="fire" isAbstract="true">
              <ownedComment xmi:id="_17RIqhRBEd-0fNU76fYmlA" annotatedElement="_17RIqRRBEd-0fNU76fYmlA">
                <body>Carry out the main behavior of this activity node.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIqxRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIrBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIrRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIrhRBEd-0fNU76fYmlA" name="sendOffers">
              <ownedComment xmi:id="_17RIrxRBEd-0fNU76fYmlA">
                <body>// Send offers for the given set of tokens over all outgoing edges (if there are any tokens actually being offered).&#xD;
&#xD;
if (tokens.size()>0) {&#xD;
&#xD;
    // *** Send all outgoing offers concurrently. ***&#xD;
    ActivityEdgeInstanceList outgoingEdges = this.outgoingEdges;&#xD;
    for (Iterator i = outgoingEdges.iterator(); i.hasNext();) {&#xD;
        ActivityEdgeInstance outgoingEdge = (ActivityEdgeInstance)i.next();&#xD;
        // Debug.println(&quot;[sendOffers] Sending offer to &quot; + outgoingEdge.target.node.name + &quot;.&quot;);&#xD;
        outgoingEdge.sendOffer(tokens);&#xD;
    }&#xD;
&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIsBRBEd-0fNU76fYmlA" name="tokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RIsRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RIshRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIsxRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17RItBRBEd-0fNU76fYmlA" annotatedElement="_17RIsxRBEd-0fNU76fYmlA">
                <body>// Terminate the activation of this node.&#xD;
&#xD;
if (this.running) {&#xD;
    if (this.node != null) {&#xD;
        Debug.println(&quot;[terminate] node = &quot; + this.node.name);&#xD;
    } else {&#xD;
        Debug.println(&quot;[terminate] Anonymous activation of type &quot; + this.getClass().getName());&#xD;
    }&#xD;
}&#xD;
&#xD;
this.running = false;&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RItRRBEd-0fNU76fYmlA" name="isReady">
              <ownedComment xmi:id="_17RIthRBEd-0fNU76fYmlA" annotatedElement="_17RItRRBEd-0fNU76fYmlA">
                <body>// Check if all the prerequisites for this node have been satisfied.&#xD;
// By default, check that this node is running.&#xD;
&#xD;
return this.isRunning();&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RItxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIuBRBEd-0fNU76fYmlA" name="isRunning">
              <ownedComment xmi:id="_17RIuRRBEd-0fNU76fYmlA" annotatedElement="_17RIuBRBEd-0fNU76fYmlA">
                <body>// Test whether this node activation is running.&#xD;
&#xD;
return this.running;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIuhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIuxRBEd-0fNU76fYmlA" name="addOutgoingEdge">
              <ownedComment xmi:id="_17RIvBRBEd-0fNU76fYmlA" annotatedElement="_17RIuxRBEd-0fNU76fYmlA">
                <body>// Add an activity edge instance as an outgoing edge of this activity node activation.&#xD;
&#xD;
edge.source = this;&#xD;
this.outgoingEdges.addValue(edge);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIvRRBEd-0fNU76fYmlA" name="edge" type="_17RIQRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIvhRBEd-0fNU76fYmlA" name="addIncomingEdge">
              <ownedComment xmi:id="_17RIvxRBEd-0fNU76fYmlA" annotatedElement="_17RIvhRBEd-0fNU76fYmlA">
                <body>// Add an activity edge instance as an incoming edge of this activity node activation.&#xD;
&#xD;
edge.target = this;&#xD;
this.incomingEdges.addValue(edge);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIwBRBEd-0fNU76fYmlA" name="edge" type="_17RIQRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIwRRBEd-0fNU76fYmlA" name="createNodeActivations">
              <ownedComment xmi:id="_17RIwhRBEd-0fNU76fYmlA" annotatedElement="_17RIwRRBEd-0fNU76fYmlA">
                <body>// Create node activations for any subnodes of the node for this activation.&#xD;
// For most kinds of nodes, this does nothing.&#xD;
&#xD;
return;&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIwxRBEd-0fNU76fYmlA" name="createEdgeInstances">
              <ownedComment xmi:id="_17RIxBRBEd-0fNU76fYmlA" annotatedElement="_17RIwxRBEd-0fNU76fYmlA">
                <body>// Create edge instances for any edge instances owned by the node for this activation.&#xD;
// For most kinds of nodes, this does nothing.&#xD;
&#xD;
return;&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIxRRBEd-0fNU76fYmlA" name="isSourceFor">
              <ownedComment xmi:id="_17RIxhRBEd-0fNU76fYmlA" annotatedElement="_17RIxRRBEd-0fNU76fYmlA">
                <body>// Check if this node activation is the effective source for the given edge instance.&#xD;
&#xD;
return edgeInstance.source == this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIxxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RIyBRBEd-0fNU76fYmlA" name="edgeInstance" type="_17RIQRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIyRRBEd-0fNU76fYmlA" name="getActivityExecution">
              <ownedComment xmi:id="_17RIyhRBEd-0fNU76fYmlA" annotatedElement="_17RIyRRBEd-0fNU76fYmlA">
                <body>// Return the activity execution that contains this activity node activation, directly or indirectly.&#xD;
&#xD;
return this.group.getActivityExecution();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIyxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RIbhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIzBRBEd-0fNU76fYmlA" name="getExecutionContext">
              <ownedComment xmi:id="_17RIzRRBEd-0fNU76fYmlA" annotatedElement="_17RIzBRBEd-0fNU76fYmlA">
                <body>// Get the context object for the containing activity execution.&#xD;
&#xD;
return this.getActivityExecution().context;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RIzhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKphRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RIzxRBEd-0fNU76fYmlA" name="getExecutionLocus">
              <ownedComment xmi:id="_17RI0BRBEd-0fNU76fYmlA" annotatedElement="_17RIzxRBEd-0fNU76fYmlA">
                <body>// Get the locus of the containing activity execution.&#xD;
&#xD;
return this.getActivityExecution().locus;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RI0RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RNZBRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RI0hRBEd-0fNU76fYmlA" name="getNodeActivation">
              <ownedComment xmi:id="_17RI0xRBEd-0fNU76fYmlA" annotatedElement="_17RI0hRBEd-0fNU76fYmlA">
                <body>// Get the activity node activation corresponding to the given activity node, in the context of this activity node activation.&#xD;
// By default, return this activity node activation, if it is for the given node, otherwise return nothing.&#xD;
&#xD;
ActivityNodeActivation activation = null;&#xD;
if (node == this.node) {&#xD;
    activation = this;&#xD;
}&#xD;
&#xD;
return activation;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RI1BRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RIhxRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RI1RRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RI1hRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RI1xRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RI2BRBEd-0fNU76fYmlA" name="addToken">
              <ownedComment xmi:id="_17RI2RRBEd-0fNU76fYmlA">
                <body>// Transfer the given token to be held by this node.&#xD;
&#xD;
if (this.node == null) {&#xD;
    Debug.println(&quot;[addToken] ...&quot;);&#xD;
} else {&#xD;
    Debug.println(&quot;[addToken] node = &quot; + this.node.name);&#xD;
}&#xD;
&#xD;
Token transferredToken = token.transfer(this);&#xD;
// Debug.println(&quot;[addToken] Adding token with value = &quot; + transferredToken.getValue());&#xD;
this.heldTokens.addValue(transferredToken);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RI2hRBEd-0fNU76fYmlA" name="token" type="_17RHNBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RI2xRBEd-0fNU76fYmlA" name="removeToken">
              <ownedComment xmi:id="_17RI3BRBEd-0fNU76fYmlA" annotatedElement="_17RI2xRBEd-0fNU76fYmlA">
                <body>// Remove the given token, if it is held by this node activation.&#xD;
// Return the position (counting from 1) of the removed token (0 if there is none removed).&#xD;
&#xD;
boolean notFound = true;&#xD;
int i = 1;&#xD;
while (notFound &amp; i &lt;= this.heldTokens.size()) {&#xD;
    if (this.heldTokens.getValue(i-1) == token) {&#xD;
        if (this.node == null) {&#xD;
            Debug.println(&quot;[removeToken] ...&quot;);&#xD;
        } else {&#xD;
            Debug.println(&quot;[removeToken] node = &quot; + this.node.name);&#xD;
        }&#xD;
        this.heldTokens.remove(i-1);&#xD;
        notFound = false;&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
if (notFound) {&#xD;
    i = 0;&#xD;
} else {&#xD;
    i = i - 1;&#xD;
}&#xD;
&#xD;
return i ;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RI3RRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RI3hRBEd-0fNU76fYmlA" name="token" type="_17RHNBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RI3xRBEd-0fNU76fYmlA" name="addTokens">
              <ownedComment xmi:id="_17RI4BRBEd-0fNU76fYmlA" annotatedElement="_17RI3xRBEd-0fNU76fYmlA">
                <body>// Transfer the given tokens to be the held tokens for this node.&#xD;
&#xD;
// if (this.node == null) {&#xD;
//     Debug.println(&quot;[addTokens] ...&quot;);&#xD;
// } else {&#xD;
//    Debug.println(&quot;[addTokens] node = &quot; + this.node.name);&#xD;
// }&#xD;
&#xD;
for (int i = 0; i &lt; tokens.size(); i++) {&#xD;
    Token token = tokens.getValue(i);&#xD;
    this.addToken(token);&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RI4RRBEd-0fNU76fYmlA" name="tokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RI4hRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RI4xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RI5BRBEd-0fNU76fYmlA" name="takeTokens">
              <ownedComment xmi:id="_17RI5RRBEd-0fNU76fYmlA" annotatedElement="_17RI5BRBEd-0fNU76fYmlA">
                <body>// Take the tokens held by this node activation.&#xD;
&#xD;
TokenList tokens = this.getTokens();&#xD;
this.clearTokens();&#xD;
&#xD;
return tokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RI5hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RI5xRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RI6BRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RI6RRBEd-0fNU76fYmlA" name="clearTokens">
              <ownedComment xmi:id="_17RI6hRBEd-0fNU76fYmlA" annotatedElement="_17RI6RRBEd-0fNU76fYmlA">
                <body>// Remove all held tokens.&#xD;
&#xD;
while (this.heldTokens.size() > 0) {&#xD;
    this.heldTokens.getValue(0).withdraw();&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RI6xRBEd-0fNU76fYmlA" name="getTokens">
              <ownedComment xmi:id="_17RI7BRBEd-0fNU76fYmlA" annotatedElement="_17RI6xRBEd-0fNU76fYmlA">
                <body>// Get the tokens held by this node activation. &#xD;
&#xD;
// Debug.println(&quot;[getTokens] node = &quot; + this.node.name);&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
TokenList heldTokens = this.heldTokens;&#xD;
for (int i = 0; i &lt; heldTokens.size(); i++) {&#xD;
    Token heldToken = heldTokens.getValue(i);&#xD;
    // Debug.println(&quot;[getTokens] token value = &quot; + heldTokens.getValue());&#xD;
    tokens.addValue(heldToken);&#xD;
}&#xD;
&#xD;
return tokens;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RI7RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RI7hRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RI7xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RI8BRBEd-0fNU76fYmlA" name="ActivityNodeActivationGroup">
            <ownedComment xmi:id="_17RI8RRBEd-0fNU76fYmlA" annotatedElement="_17RI8BRBEd-0fNU76fYmlA">
              <body>An activity node group is a group of nodes that are activated together, either directly in the context of an activity execution, or in the context of </body>
            </ownedComment>
            <ownedComment xmi:id="_17RI8hRBEd-0fNU76fYmlA">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:id="_17RI8xRBEd-0fNU76fYmlA" name="edgeInstances" type="_17RIQRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJThRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RI9BRBEd-0fNU76fYmlA" annotatedElement="_17RI8xRBEd-0fNU76fYmlA">
                <body>The set of activity edge instances for this group. &#xD;
</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RI9RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RI9hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RI9xRBEd-0fNU76fYmlA" name="nodeActivations" type="_17RIhxRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJTRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RI-BRBEd-0fNU76fYmlA" annotatedElement="_17RI9xRBEd-0fNU76fYmlA">
                <body>The set of activity node executions for this group. &#xD;
</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RI-RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RI-hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RI-xRBEd-0fNU76fYmlA" name="activityExecution" type="_17RIbhRBEd-0fNU76fYmlA" association="_17RJVRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RI_BRBEd-0fNU76fYmlA" annotatedElement="_17RI-xRBEd-0fNU76fYmlA">
                <body>The activity execution to which this group belongs.&#xD;
(This will be empty if the group is for a structured activity node activation.)</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RI_RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RI_hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RI_xRBEd-0fNU76fYmlA" name="containingNodeActivation" type="_17HtfBRBEd-0fNU76fYmlA" association="_17RHIBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RJABRBEd-0fNU76fYmlA" annotatedElement="_17RI_xRBEd-0fNU76fYmlA">
                <body>The structured activity node activation to which this group belongs.&#xD;
(This will be empty if the group is for an activity execution.)</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJARRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJAhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RJAxRBEd-0fNU76fYmlA" name="run">
              <ownedComment xmi:id="_17RJBBRBEd-0fNU76fYmlA" annotatedElement="_17RJAxRBEd-0fNU76fYmlA">
                <body>// Run the given node activations and then (concurrently) send an offer to all activations for nodes with no incoming edges within the given set.&#xD;
&#xD;
for (int i = 0; i &lt; activations.size(); i++) {&#xD;
    ActivityNodeActivation activation = activations.getValue(i);&#xD;
    activation.run();&#xD;
}&#xD;
&#xD;
Debug.println(&quot;[run] Checking for enabled nodes...&quot;);&#xD;
&#xD;
ActivityNodeActivationList enabledActivations = new ActivityNodeActivationList(); &#xD;
&#xD;
for (int i = 0; i &lt; activations.size(); i++) {&#xD;
    ActivityNodeActivation activation = activations.getValue(i);&#xD;
&#xD;
    Debug.println(&quot;[run] Checking node &quot; + activation.node.name + &quot;...&quot;);&#xD;
&#xD;
    if (activation instanceof ActionActivation | &#xD;
        activation instanceof ControlNodeActivation | &#xD;
        activation instanceof ActivityParameterNodeActivation) {&#xD;
&#xD;
        boolean isEnabled = this.checkIncomingEdges(activation.incomingEdges, activations);&#xD;
&#xD;
        // For an action activation, also consider incoming edges to input pins&#xD;
        if (isEnabled &amp; activation instanceof ActionActivation) {&#xD;
            InputPinList inputPins = ((Action)activation.node).input;&#xD;
            int j = 1;&#xD;
            while (j &lt;= inputPins.size() &amp; isEnabled) {&#xD;
                InputPin inputPin = inputPins.getValue(j-1);&#xD;
                ActivityEdgeInstanceList inputEdges = ((ActionActivation)activation).getPinActivation(inputPin).incomingEdges;&#xD;
                isEnabled = this.checkIncomingEdges(inputEdges, activations);&#xD;
                j = j + 1;&#xD;
            }&#xD;
        }&#xD;
&#xD;
        if (isEnabled) {&#xD;
            Debug.println(&quot;[run] Node &quot; + activation.node.name + &quot; is enabled.&quot;);&#xD;
            enabledActivations.addValue(activation);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[run] &quot; + enabledActivations.size() + &quot; node(s) are enabled.&quot;);&#xD;
&#xD;
// *** Send offers to all enabled nodes concurrently. ***&#xD;
for (Iterator i = enabledActivations.iterator(); i.hasNext();) {&#xD;
    ActivityNodeActivation activation = (ActivityNodeActivation)i.next();&#xD;
    Debug.println(&quot;[run] Sending offer to node &quot; + activation.node.name + &quot;.&quot;);&#xD;
    activation.receiveOffer();&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJBRRBEd-0fNU76fYmlA" name="activations" type="_17RIhxRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJBhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJBxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJCBRBEd-0fNU76fYmlA" name="checkIncomingEdges">
              <ownedComment xmi:id="_17RJCRRBEd-0fNU76fYmlA">
                <body>// Check if any incoming edges have a source in a given set of activations.&#xD;
&#xD;
int j = 1;&#xD;
boolean notFound = true;&#xD;
    &#xD;
while (j &lt;= incomingEdges.size() &amp; notFound) {&#xD;
    int k = 1;&#xD;
    while (k &lt;= activations.size() &amp; notFound) {&#xD;
        if (activations.getValue(k-1).isSourceFor(incomingEdges.getValue(j-1))) {&#xD;
            notFound = false;&#xD;
        }&#xD;
        k = k + 1;&#xD;
    }&#xD;
    j = j + 1;&#xD;
}&#xD;
&#xD;
return notFound;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJChRBEd-0fNU76fYmlA" name="incomingEdges" type="_17RIQRRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJCxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJDBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RJDRRBEd-0fNU76fYmlA" name="activations" type="_17RIhxRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJDhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJDxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RJEBRBEd-0fNU76fYmlA" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJERRBEd-0fNU76fYmlA" name="runNodes">
              <ownedComment xmi:id="_17RJEhRBEd-0fNU76fYmlA" annotatedElement="_17RJERRBEd-0fNU76fYmlA">
                <body>// Run the node activations associated with the given nodes in this activation group.&#xD;
&#xD;
ActivityNodeActivationList nodeActivations = new ActivityNodeActivationList();&#xD;
&#xD;
for (int i = 0; i &lt; nodes.size(); i++) {&#xD;
    ActivityNode node = nodes.getValue(i);&#xD;
    ActivityNodeActivation nodeActivation = this.getNodeActivation(node);&#xD;
    if (nodeActivation != null) {&#xD;
        nodeActivations.addValue(nodeActivation);&#xD;
    }&#xD;
}&#xD;
&#xD;
this.run(nodeActivations);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJExRBEd-0fNU76fYmlA" name="nodes" type="_17RS3xRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJFBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJFRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJFhRBEd-0fNU76fYmlA" name="activate">
              <ownedComment xmi:id="_17RJFxRBEd-0fNU76fYmlA" annotatedElement="_17RJFhRBEd-0fNU76fYmlA">
                <body>// Activate and run the given set of nodes with the given set of edges, within this activation group.&#xD;
&#xD;
this.createNodeActivations(nodes);&#xD;
this.createEdgeInstances(edges);&#xD;
this.run(this.nodeActivations);&#xD;
&#xD;
// Debug.println(&quot;[activate] Exiting.&quot;);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJGBRBEd-0fNU76fYmlA" name="nodes" type="_17RS3xRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJGRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJGhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RJGxRBEd-0fNU76fYmlA" name="edges" type="_17RS_BRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJHBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJHRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJHhRBEd-0fNU76fYmlA" name="terminateAll">
              <ownedComment xmi:id="_17RJHxRBEd-0fNU76fYmlA" annotatedElement="_17RJHhRBEd-0fNU76fYmlA">
                <body>// Terminate all node activations in the group.&#xD;
&#xD;
Debug.println(&quot;[terminateAll] Terminating activation group for &quot; +&#xD;
                     (this.activityExecution != null? &quot;activity &quot; + this.activityExecution.getTypes().getValue(0).name: &#xD;
                      this.containingNodeActivation != null? &quot;node &quot; + this.containingNodeActivation.node.name:&#xD;
                      &quot;expansion region&quot;) + &quot;.&quot;);&#xD;
&#xD;
ActivityNodeActivationList nodeActivations = this.nodeActivations;&#xD;
for (int i = 0; i &lt; nodeActivations.size(); i++) {&#xD;
    ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);&#xD;
    nodeActivation.terminate();&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJIBRBEd-0fNU76fYmlA" name="createNodeActivations">
              <ownedComment xmi:id="_17RJIRRBEd-0fNU76fYmlA" annotatedElement="_17RJIBRBEd-0fNU76fYmlA">
                <body>// Add activity node activations for the given set of nodes to this group and create edge instances between them.&#xD;
&#xD;
for (int i = 0; i &lt; nodes.size(); i++) {&#xD;
    ActivityNode node = nodes.getValue(i);&#xD;
&#xD;
    Debug.println(&quot;[createNodeActivations] Creating a node activation for &quot; + node.name + &quot;...&quot;);&#xD;
    this.createNodeActivation(node);&#xD;
&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJIhRBEd-0fNU76fYmlA" name="nodes" type="_17RS3xRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJIxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJJBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJJRRBEd-0fNU76fYmlA" name="createNodeActivation">
              <ownedComment xmi:id="_17RJJhRBEd-0fNU76fYmlA" annotatedElement="_17RJJRRBEd-0fNU76fYmlA">
                <body>// Create an activity node activation for a given activity node in this activity node activation group.&#xD;
&#xD;
ActivityNodeActivation activation = (ActivityNodeActivation)(this.getActivityExecution().locus.factory.instantiateVisitor(node));&#xD;
activation.node = node;&#xD;
activation.running = false;&#xD;
&#xD;
this.addNodeActivation(activation);&#xD;
&#xD;
activation.createNodeActivations();&#xD;
&#xD;
return activation;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJJxRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RJKBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RIhxRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJKRRBEd-0fNU76fYmlA" name="addNodeActivation">
              <ownedComment xmi:id="_17RJKhRBEd-0fNU76fYmlA" annotatedElement="_17RJKRRBEd-0fNU76fYmlA">
                <body>// Add the given node activation to this group.&#xD;
&#xD;
activation.group = this;&#xD;
this.nodeActivations.addValue(activation);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJKxRBEd-0fNU76fYmlA" name="activation" type="_17RIhxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJLBRBEd-0fNU76fYmlA" name="getNodeActivation">
              <ownedComment xmi:id="_17RJLRRBEd-0fNU76fYmlA" annotatedElement="_17RJLBRBEd-0fNU76fYmlA">
                <body>// Return the node activation (if any) in this group, &#xD;
// or any nested group, corresponding to the given activity node.&#xD;
// If this is a group for a structured activity node activation, &#xD;
// also include the pin activations for that node activation.&#xD;
&#xD;
ActivityNodeActivation activation = null;&#xD;
&#xD;
if (this.containingNodeActivation != null &amp;&amp; node instanceof Pin) {&#xD;
    activation = this.containingNodeActivation.getPinActivation((Pin)node);&#xD;
}&#xD;
&#xD;
if (activation == null) {&#xD;
    int i = 1;&#xD;
    while (activation == null &amp; i &lt;= this.nodeActivations.size()) {   &#xD;
        activation = this.nodeActivations.getValue(i-1).getNodeActivation(node);&#xD;
        i = i + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
return activation;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJLhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RIhxRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJLxRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJMBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RJMRRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJMhRBEd-0fNU76fYmlA" name="createEdgeInstances">
              <ownedComment xmi:id="_17RJMxRBEd-0fNU76fYmlA" annotatedElement="_17RJMhRBEd-0fNU76fYmlA">
                <body>// Create instance edges for the given activity edges, as well as for edge instances within any nodes activated in this group.&#xD;
&#xD;
for (int i = 0; i &lt; edges.size(); i++) {&#xD;
    ActivityEdge edge = edges.getValue(i);&#xD;
&#xD;
    Debug.println(&quot;[createEdgeInstances] Creating an edge instance from &quot; + edge.source.name + &quot; to &quot; + edge.target.name + &quot;.&quot;);&#xD;
&#xD;
    ActivityEdgeInstance edgeInstance = new ActivityEdgeInstance();&#xD;
    edgeInstance.edge = edge;&#xD;
&#xD;
    this.addEdgeInstance(edgeInstance);&#xD;
    this.getNodeActivation(edge.source).addOutgoingEdge(edgeInstance);&#xD;
    this.getNodeActivation(edge.target).addIncomingEdge(edgeInstance);&#xD;
&#xD;
    // Debug.println(&quot;[createEdgeInstances] Edge instance created...&quot;);&#xD;
}&#xD;
&#xD;
ActivityNodeActivationList nodeActivations = this.nodeActivations;&#xD;
for (int i = 0; i &lt; nodeActivations.size(); i++) {&#xD;
    ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);&#xD;
    nodeActivation.createEdgeInstances();&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[createEdgeInstances] Done creating edge instances.&quot;);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJNBRBEd-0fNU76fYmlA" name="edges" type="_17RS_BRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJNRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJNhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJNxRBEd-0fNU76fYmlA" name="addEdgeInstance">
              <ownedComment xmi:id="_17RJOBRBEd-0fNU76fYmlA" annotatedElement="_17RJNxRBEd-0fNU76fYmlA">
                <body>// Add the given edge instance to this group.&#xD;
&#xD;
instance.group = this;&#xD;
this.edgeInstances.addValue(instance);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJORRBEd-0fNU76fYmlA" name="instance" type="_17RIQRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJOhRBEd-0fNU76fYmlA" name="getActivityExecution">
              <ownedComment xmi:id="_17RJOxRBEd-0fNU76fYmlA" annotatedElement="_17RJOhRBEd-0fNU76fYmlA">
                <body>// Return the activity execution to which this group belongs, directly or indirectly.&#xD;
&#xD;
ActivityExecution activityExecution = this.activityExecution;&#xD;
if (activityExecution == null) {&#xD;
    activityExecution = this.containingNodeActivation.group.getActivityExecution();&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[getActivityExecution] activityExecution = &quot; + activityExecution);&#xD;
&#xD;
return activityExecution;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJPBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RIbhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJPRRBEd-0fNU76fYmlA" name="getOutputParameterNodeActivations">
              <ownedComment xmi:id="_17RJPhRBEd-0fNU76fYmlA" annotatedElement="_17RJPRRBEd-0fNU76fYmlA">
                <body>// Return the set of all activations in this group of activity parameter nodes for output (inout, out and return) parameters.&#xD;
&#xD;
ActivityParameterNodeActivationList parameterNodeActivations = new ActivityParameterNodeActivationList();&#xD;
ActivityNodeActivationList nodeActivations = this.nodeActivations;&#xD;
for (int i = 0; i &lt; nodeActivations.size(); i++) {&#xD;
    ActivityNodeActivation activation = nodeActivations.getValue(i);&#xD;
    if (activation instanceof ActivityParameterNodeActivation) {&#xD;
        ParameterDirectionKind direction = ((ActivityParameterNode)(activation.node)).parameter.direction;&#xD;
        if ((direction.equals(ParameterDirectionKind.inout)) |&#xD;
            (direction.equals(ParameterDirectionKind.out)) |&#xD;
            (direction.equals(ParameterDirectionKind.return_))) {&#xD;
            parameterNodeActivations.addValue((ActivityParameterNodeActivation)activation);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
return parameterNodeActivations;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJPxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RJQhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJQBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJQRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RJQhRBEd-0fNU76fYmlA" name="ActivityParameterNodeActivation">
            <ownedComment xmi:id="_17RJQxRBEd-0fNU76fYmlA" annotatedElement="_17RJQhRBEd-0fNU76fYmlA">
              <body>An activity parameter node activation is an object node activation for a node that is an activity parameter node.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RJRBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RJRRRBEd-0fNU76fYmlA" general="_17RHfxRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RJRhRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17RJRxRBEd-0fNU76fYmlA" annotatedElement="_17RJRhRBEd-0fNU76fYmlA">
                <body>// If there are no incoming edges, this is an activation of an input activity parameter node.&#xD;
// Get the values from the input parameter indicated by the activity parameter node and offer those values as object tokens.&#xD;
&#xD;
if (this.node.incoming.size() == 0) {&#xD;
    Debug.println(&quot;[fire] Input activity parameter node &quot; + this.node.name + &quot;...&quot;);&#xD;
    Parameter parameter = ((ActivityParameterNode)(this.node)).parameter;&#xD;
    ParameterValue parameterValue = this.getActivityExecution().getParameterValue(parameter);&#xD;
    // Debug.println(&quot;[fire] parameter = &quot; + parameter.name);&#xD;
    if (parameterValue != null) {&#xD;
        Debug.println(&quot;[fire] Parameter has &quot; + parameterValue.values.size() + &quot; value(s).&quot;);&#xD;
        TokenList tokens = new TokenList();&#xD;
        ValueList values = parameterValue.values;&#xD;
        for (int i = 0; i &lt; values.size(); i++) {&#xD;
            Value value = values.getValue(i);&#xD;
            ObjectToken token = new ObjectToken();&#xD;
            token.value = value;&#xD;
            this.addToken(token);&#xD;
        }&#xD;
        this.sendUnofferedTokens();&#xD;
    }&#xD;
}&#xD;
&#xD;
// If there are one or more incoming edges, this is an activation of an output activity parameter node.&#xD;
// Take the tokens offered on incoming edges and add them to the set of tokens being offered.&#xD;
// [Note that an output activity parameter node may fire multiple times, accumulating tokens offered to it.]&#xD;
&#xD;
else {&#xD;
    Debug.println(&quot;[fire] Output activity parameter node &quot; + this.node.name + &quot;...&quot;);&#xD;
    this.addTokens(incomingTokens);&#xD;
}&#xD;
&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJSBRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJSRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJShRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJSxRBEd-0fNU76fYmlA" name="clearTokens">
              <ownedComment xmi:id="_17RJTBRBEd-0fNU76fYmlA" annotatedElement="_17RJSxRBEd-0fNU76fYmlA">
                <body>// Clear all held tokens only if this is an input parameter node.&#xD;
&#xD;
if (this.node.incoming.size() == 0) {&#xD;
    super.clearTokens();&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJTRRBEd-0fNU76fYmlA" name="A_nodeActivations_group" memberEnd="_17RI9xRBEd-0fNU76fYmlA _17RIixRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJThRBEd-0fNU76fYmlA" name="A_edgeInstances_group" memberEnd="_17RI8xRBEd-0fNU76fYmlA _17RISBRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJTxRBEd-0fNU76fYmlA" name="A_heldTokens_holder" memberEnd="_17RInRRBEd-0fNU76fYmlA _17RHNxRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJUBRBEd-0fNU76fYmlA" name="A_node_activityNodeActivation" memberEnd="_17RIjxRBEd-0fNU76fYmlA _17RJURRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJURRBEd-0fNU76fYmlA" visibility="private" type="_17RIhxRBEd-0fNU76fYmlA" association="_17RJUBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJUhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJUxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJVBRBEd-0fNU76fYmlA" name="A_incomingEdges_target" memberEnd="_17RIkxRBEd-0fNU76fYmlA _17RIThRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJVRRBEd-0fNU76fYmlA" name="A_activationGroup_activityExecution" memberEnd="_17RIchRBEd-0fNU76fYmlA _17RI-xRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJVhRBEd-0fNU76fYmlA" name="A_edge_activityEdgeInstance" memberEnd="_17RIRBRBEd-0fNU76fYmlA _17RJVxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJVxRBEd-0fNU76fYmlA" visibility="private" type="_17RIQRRBEd-0fNU76fYmlA" association="_17RJVhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJWBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJWRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJWhRBEd-0fNU76fYmlA" name="A_source_outgoingEdges" memberEnd="_17RITBRBEd-0fNU76fYmlA _17RIlxRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJWxRBEd-0fNU76fYmlA" name="A_offers_activityEdgeInstance" memberEnd="_17RIUBRBEd-0fNU76fYmlA _17RJXBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJXBRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RIQRRBEd-0fNU76fYmlA" association="_17RJWxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJXRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJXhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJXxRBEd-0fNU76fYmlA" name="A_decisionInputExecution_decisionNodeActivation" memberEnd="_17RH5xRBEd-0fNU76fYmlA _17RJYBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJYBRBEd-0fNU76fYmlA" visibility="private" type="_17RH5BRBEd-0fNU76fYmlA" association="_17RJXxRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJYRRBEd-0fNU76fYmlA" name="A_baseToken_forkedToken" memberEnd="_17RHvBRBEd-0fNU76fYmlA _17RJYhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJYhRBEd-0fNU76fYmlA" visibility="private" type="_17RHuBRBEd-0fNU76fYmlA" association="_17RJYRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJYxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJZBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJZRRBEd-0fNU76fYmlA" name="A_unofferedTokens_objectNodeActivation" memberEnd="_17RHgxRBEd-0fNU76fYmlA _17RJZhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJZhRBEd-0fNU76fYmlA" visibility="private" type="_17RHfxRBEd-0fNU76fYmlA" association="_17RJZRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJZxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJaBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJaRRBEd-0fNU76fYmlA" name="A_value_objectToken" memberEnd="_17RHbBRBEd-0fNU76fYmlA _17RJahRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJahRBEd-0fNU76fYmlA" visibility="private" type="_17RHaBRBEd-0fNU76fYmlA" association="_17RJaRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJaxRBEd-0fNU76fYmlA" name="A_offeredTokens_offer" memberEnd="_17RHVRRBEd-0fNU76fYmlA _17RJbBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJbBRBEd-0fNU76fYmlA" visibility="private" type="_17RHUhRBEd-0fNU76fYmlA" association="_17RJaxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJbRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJbhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17RJbxRBEd-0fNU76fYmlA" name="ExtraStructuredActivities">
          <packageImport xmi:id="_17RJcBRBEd-0fNU76fYmlA" importedPackage="_17RUZBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RJcRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RJchRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17RJcxRBEd-0fNU76fYmlA" importedPackage="_17HtdRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RJdBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RJdRRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RJdhRBEd-0fNU76fYmlA" name="ExpansionActivationGroup">
            <ownedComment xmi:id="_17RJdxRBEd-0fNU76fYmlA" annotatedElement="_17RJdhRBEd-0fNU76fYmlA">
              <body>An expansion activation group is an activity node activation group used for activating nodes inside an expansion region.&#xD;
It functions just like a normal activation group, except it has output pin activations corresponding to the input pins and the expansion nodes of the expansion region.&#xD;
Instances of edges from nodes inside the expansion region that connect to region input pins, input expansion nodes or output expansion nodes are redirected to connect to the corresponding &quot;region input&quot;, &quot;group input&quot; or &quot;group output&quot; pin, respectively.&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:id="_17RJeBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RJeRRBEd-0fNU76fYmlA" general="_17RI8BRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RJehRBEd-0fNU76fYmlA" name="regionInputs" type="_17Hr6RRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJzBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RJexRBEd-0fNU76fYmlA" annotatedElement="_17RJehRBEd-0fNU76fYmlA">
                <body>Output pin activations corresponding, in order, to the input pins of the expansion region of this activation group.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJfBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJfRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RJfhRBEd-0fNU76fYmlA" name="groupInputs" type="_17Hr6RRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJ0BRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RJfxRBEd-0fNU76fYmlA" annotatedElement="_17RJfhRBEd-0fNU76fYmlA">
                <body>Output pin activations corresponding, in order, to the input expansion nodes of the expansion region of this activation group.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJgBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJgRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RJghRBEd-0fNU76fYmlA" name="regionActivation" type="_17RJoRRBEd-0fNU76fYmlA" association="_17RJyxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RJgxRBEd-0fNU76fYmlA" annotatedElement="_17RJghRBEd-0fNU76fYmlA">
                <body>The expansion region activation this expansion region activation group is for.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RJhBRBEd-0fNU76fYmlA" name="groupOutputs" type="_17Hr6RRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJ1BRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RJhRRBEd-0fNU76fYmlA" annotatedElement="_17RJhBRBEd-0fNU76fYmlA">
                <body>Output pin activations corresponding, in order, to the output expansion nodes of the expansion region of this activation group.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJhhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJhxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RJiBRBEd-0fNU76fYmlA" name="index" visibility="public">
              <ownedComment xmi:id="_17RJiRRBEd-0fNU76fYmlA" annotatedElement="_17RJiBRBEd-0fNU76fYmlA">
                <body>The index (starting at 1) of this activation group in the list held by the expansion region activation.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RJihRBEd-0fNU76fYmlA" name="getNodeActivation">
              <ownedComment xmi:id="_17RJixRBEd-0fNU76fYmlA" annotatedElement="_17RJihRBEd-0fNU76fYmlA">
                <body>// If the given node is an input pin of the expansion region, then return the corresponding region-input output-pin activation.&#xD;
// If the given node is an input expansion node of the expansion region, then return the corresponding group-input output-pin activation.&#xD;
// If the given node is an output expansion node of the expansion region, then return the corresponding group-output output-pin activation.&#xD;
// Otherwise return the node activation from the activation group, as usual.&#xD;
&#xD;
ExpansionRegion region = (ExpansionRegion)(this.regionActivation.node);&#xD;
&#xD;
InputPinList inputs = region.input;&#xD;
ActivityNodeActivation activation = null;&#xD;
&#xD;
int i = 1;&#xD;
while (activation == null &amp; i &lt;= region.input.size()) {&#xD;
    if (node == region.input.getValue(i-1)) {&#xD;
        activation = this.regionInputs.getValue(i-1);&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
int j = 1;&#xD;
while (activation == null &amp; j &lt;= region.inputElement.size()) {&#xD;
    if (node == region.inputElement.getValue(j - 1)) {&#xD;
        activation = this.groupInputs.getValue(j - 1);&#xD;
    }&#xD;
    j = j + 1;&#xD;
}&#xD;
&#xD;
int k = 1;&#xD;
while (activation == null &amp; k &lt;= region.outputElement.size()) {&#xD;
    if (node == region.outputElement.getValue(k - 1)) {&#xD;
        activation = this.groupOutputs.getValue(k - 1);&#xD;
    }&#xD;
    k = k + 1;&#xD;
}&#xD;
&#xD;
if (activation == null) {&#xD;
    activation = super.getNodeActivation(node);&#xD;
}&#xD;
&#xD;
return activation;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJjBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RIhxRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RJjRRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJjhRBEd-0fNU76fYmlA" name="getActivityExecution">
              <ownedComment xmi:id="_17RJjxRBEd-0fNU76fYmlA">
                <body>// Get the activity execution that contains the expansion region activation for this activation group.&#xD;
&#xD;
return this.regionActivation.getActivityExecution();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJkBRBEd-0fNU76fYmlA" name="Parameter1" type="_17RIbhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RJkRRBEd-0fNU76fYmlA" name="ExpansionNodeActivation">
            <ownedComment xmi:id="_17RJkhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RJkxRBEd-0fNU76fYmlA" general="_17RHfxRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RJlBRBEd-0fNU76fYmlA" name="fire">
              <ownedComment xmi:id="_17RJlRRBEd-0fNU76fYmlA" annotatedElement="_17RJlBRBEd-0fNU76fYmlA">
                <body>// Take tokens from all incoming edges.&#xD;
&#xD;
Debug.println(&quot;[fire] Expansion node &quot; + this.node.name + &quot;...&quot;);&#xD;
&#xD;
this.addTokens(incomingTokens);&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJlhRBEd-0fNU76fYmlA" name="incomingTokens" type="_17RHNBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJlxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJmBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJmRRBEd-0fNU76fYmlA" name="receiveOffer">
              <ownedComment xmi:id="_17RJmhRBEd-0fNU76fYmlA" annotatedElement="_17RJmRRBEd-0fNU76fYmlA">
                <body>// Forward the offer on to the expansion region.&#xD;
&#xD;
this.getExpansionRegionActivation().receiveOffer();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJmxRBEd-0fNU76fYmlA" name="isReady">
              <ownedComment xmi:id="_17RJnBRBEd-0fNU76fYmlA" annotatedElement="_17RJmxRBEd-0fNU76fYmlA">
                <body>// An expansion node is always fired by its expansion region.&#xD;
&#xD;
return false;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJnRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJnhRBEd-0fNU76fYmlA" name="getExpansionRegionActivation">
              <ownedComment xmi:id="_17RJnxRBEd-0fNU76fYmlA" annotatedElement="_17RJnhRBEd-0fNU76fYmlA">
                <body>// Return the expansion region activation corresponding to this expansion node, in the context of the activity node activation group this expansion node activation is in.&#xD;
&#xD;
ExpansionNode node = (ExpansionNode)(this.node);&#xD;
&#xD;
ExpansionRegion region = node.regionAsInput;&#xD;
if (region == null) {&#xD;
    region = node.regionAsOutput;&#xD;
}&#xD;
&#xD;
return (ExpansionRegionActivation)(this.group.getNodeActivation(region));&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJoBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RJoRRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RJoRRBEd-0fNU76fYmlA" name="ExpansionRegionActivation">
            <ownedComment xmi:id="_17RJohRBEd-0fNU76fYmlA" annotatedElement="_17RJoRRBEd-0fNU76fYmlA">
              <body>An expansion region activation is an action activation for a node that is an expansion region.&#xD;
[Note that even though an expansion region is a structured activity node, an expansion region activation is not a structured activity activation because of the special nature of expansion region behavior.]</body>
            </ownedComment>
            <ownedComment xmi:id="_17RJoxRBEd-0fNU76fYmlA">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RJpBRBEd-0fNU76fYmlA" general="_17HsGhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RJpRRBEd-0fNU76fYmlA" name="activationGroups" type="_17RJdhRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJyxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RJphRBEd-0fNU76fYmlA" annotatedElement="_17RJpRRBEd-0fNU76fYmlA">
                <body>The set of expansion activation groups for this expansion region activation. One activation group is created corresponding to each token held by the first input expansion node activation for the expansion region.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJpxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJqBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RJqRRBEd-0fNU76fYmlA" name="inputTokens" visibility="public" type="_17RJ2BRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJ3BRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RJqhRBEd-0fNU76fYmlA" annotatedElement="_17RJqRRBEd-0fNU76fYmlA">
                <body>The tokens taken from each of the input pin activations for this expansion region activation. These are preserved for initializing the region inputs of each of the activation groups.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJqxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJrBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RJrRRBEd-0fNU76fYmlA" name="inputExpansionTokens" visibility="public" type="_17RJ2BRBEd-0fNU76fYmlA" aggregation="composite" association="_17RJ3hRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RJrhRBEd-0fNU76fYmlA" annotatedElement="_17RJrRRBEd-0fNU76fYmlA">
                <body>The tokens taken from each of the input expansion node activations for this expansion region activation. These are preserved for initializing the group input of each of the activation groups.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJrxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJsBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RJsRRBEd-0fNU76fYmlA" name="takeOfferedTokens">
              <ownedComment xmi:id="_17RJshRBEd-0fNU76fYmlA">
                <body>// Take the tokens from the input pin and input expansion node activations and save them.&#xD;
&#xD;
ExpansionRegion region = (ExpansionRegion)(this.node);&#xD;
InputPinList inputPins = region.input;&#xD;
ExpansionNodeList inputElements = region.inputElement;&#xD;
&#xD;
this.inputTokens.clear();&#xD;
this.inputExpansionTokens.clear();&#xD;
&#xD;
for (int i = 0; i &lt; inputPins.size(); i++) {&#xD;
    InputPin inputPin = inputPins.getValue(i);&#xD;
    TokenSet tokenSet = new TokenSet();&#xD;
    tokenSet.tokens = this.getPinActivation(inputPin).takeTokens();&#xD;
    this.inputTokens.addValue(tokenSet);&#xD;
}&#xD;
&#xD;
for (int i = 0; i &lt; inputElements.size(); i++) {&#xD;
    ExpansionNode inputElement = inputElements.getValue(i);&#xD;
    ExpansionNodeActivation expansionNodeActivation = this.getExpansionNodeActivation(inputElement);&#xD;
    expansionNodeActivation.fire(expansionNodeActivation.takeOfferedTokens());&#xD;
    TokenSet tokenSet = new TokenSet();&#xD;
    tokenSet.tokens = expansionNodeActivation.takeTokens();&#xD;
    this.inputExpansionTokens.addValue(tokenSet);&#xD;
}&#xD;
&#xD;
return new TokenList();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJsxRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RHNBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJtBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJtRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJthRBEd-0fNU76fYmlA" name="doAction">
              <ownedComment xmi:id="_17RJtxRBEd-0fNU76fYmlA">
                <body>// If the expansion region has mustIsolate=true, then carry out its behavior with isolation.&#xD;
// Otherwise just activate it normally.&#xD;
&#xD;
if (((StructuredActivityNode)(this.node)).mustIsolate) {&#xD;
    _beginIsolation();&#xD;
        this.doStructuredActivity();&#xD;
    _endIsolation();&#xD;
} else {&#xD;
    this.doStructuredActivity();&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJuBRBEd-0fNU76fYmlA" name="doStructuredActivity">
              <ownedComment xmi:id="_17RJuRRBEd-0fNU76fYmlA" annotatedElement="_17RJuBRBEd-0fNU76fYmlA">
                <body>// Create a number of expansion region activation groups equal to the number of values expanded in the region, &#xD;
// setting the region inputs and group inputs for each group.&#xD;
// Run the body of the region in each group, either iteratively or in parallel.&#xD;
// Add the outputs of each activation group to the corresonding output expansion node activations.&#xD;
&#xD;
ExpansionRegion region = (ExpansionRegion)this.node;&#xD;
InputPinList inputPins = region.input;&#xD;
ExpansionNodeList inputElements = region.inputElement;&#xD;
ExpansionNodeList outputElements = region.outputElement;&#xD;
&#xD;
int n = this.inputExpansionTokens.getValue(0).tokens.size();&#xD;
int k = 1;&#xD;
while (k &lt;= n) {&#xD;
    ExpansionActivationGroup activationGroup = new ExpansionActivationGroup();&#xD;
    activationGroup.regionActivation = this;&#xD;
    activationGroup.index = k;&#xD;
&#xD;
    int j = 1;&#xD;
    while (j &lt;= inputPins.size()) {&#xD;
        OutputPinActivation regionInput = new OutputPinActivation();&#xD;
        regionInput.run();&#xD;
        activationGroup.regionInputs.addValue(regionInput);&#xD;
        j = j + 1;&#xD;
    }&#xD;
&#xD;
    j = 1;&#xD;
    while (j &lt;= inputElements.size()) {&#xD;
        OutputPinActivation groupInput = new OutputPinActivation();&#xD;
        groupInput.run();&#xD;
        activationGroup.groupInputs.addValue(groupInput);&#xD;
        j = j + 1;&#xD;
    }&#xD;
&#xD;
    j = 1;&#xD;
    while (j &lt;= outputElements.size()) {&#xD;
        OutputPinActivation groupOutput = new OutputPinActivation();&#xD;
        groupOutput.run();&#xD;
        activationGroup.groupOutputs.addValue(new OutputPinActivation());&#xD;
        j = j + 1;&#xD;
    }&#xD;
&#xD;
    activationGroup.createNodeActivations(region.node);&#xD;
    activationGroup.createEdgeInstances(region.edge);&#xD;
    this.activationGroups.addValue(activationGroup);&#xD;
&#xD;
    k = k + 1;&#xD;
}&#xD;
&#xD;
ExpansionActivationGroupList activationGroups = this.activationGroups;&#xD;
&#xD;
if (region.mode == ExpansionKind.iterative) {&#xD;
    Debug.println(&quot;[doStructuredActivity] Expansion mode = iterative&quot;);&#xD;
    for (int i = 0; i &lt; activationGroups.size(); i++) {&#xD;
        ExpansionActivationGroup activationGroup = activationGroups.getValue(i);&#xD;
        this.runGroup(activationGroup);&#xD;
    }&#xD;
}&#xD;
else if (region.mode == ExpansionKind.parallel) {&#xD;
    Debug.println(&quot;[doStructuredActivity] Expansion mode = parallel&quot;);&#xD;
    // *** Activate all groups concurrently. ***&#xD;
    for (Iterator i = activationGroups.iterator(); i.hasNext();) {&#xD;
        ExpansionActivationGroup activationGroup = (ExpansionActivationGroup)i.next();&#xD;
        this.runGroup(activationGroup);&#xD;
    }&#xD;
}&#xD;
&#xD;
for (int i = 0; i &lt; activationGroups.size(); i++) {&#xD;
    ExpansionActivationGroup activationGroup = activationGroups.getValue(i);&#xD;
    OutputPinActivationList groupOutputs = activationGroup.groupOutputs;&#xD;
    for (int j = 0; j &lt; groupOutputs.size(); j++) {&#xD;
        OutputPinActivation groupOutput = groupOutputs.getValue(j);&#xD;
        ExpansionNode outputElement = outputElements.getValue(j);&#xD;
        this.getExpansionNodeActivation(outputElement).addTokens(groupOutput.takeTokens());&#xD;
    }&#xD;
}&#xD;
&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJuhRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17RJuxRBEd-0fNU76fYmlA">
                <body>// Terminate the execution of all contained node activations (which completes the performance of the expansion region activation).&#xD;
&#xD;
ExpansionActivationGroupList activationGroups = this.activationGroups;&#xD;
for (int i = 0; i &lt; activationGroups.size(); i++) {&#xD;
    ExpansionActivationGroup activationGroup = this.activationGroups.getValue(i);&#xD;
    activationGroup.terminateAll();&#xD;
}&#xD;
&#xD;
super.terminate();</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJvBRBEd-0fNU76fYmlA" name="isReady">
              <ownedComment xmi:id="_17RJvRRBEd-0fNU76fYmlA" annotatedElement="_17RJvBRBEd-0fNU76fYmlA">
                <body>// In addition to the usual ready checks for an action, check that all expansion nodes have the same number of inputs (greater than zero).&#xD;
&#xD;
ExpansionRegion region = (ExpansionRegion)(this.node);&#xD;
&#xD;
boolean ready = super.isReady();&#xD;
if (ready) {&#xD;
    int n = this.numberOfValues(); // This gets the number of values on the first expansion node.&#xD;
&#xD;
    if (n &lt; 1) {&#xD;
        return false;&#xD;
    } else {&#xD;
        int i = 1;&#xD;
        while (ready &amp; i&lt;= region.inputElement.size()) {&#xD;
            ready = (this.getExpansionNodeActivation(region.inputElement.getValue(i-1)).countOfferedValues() == n);&#xD;
            i = i + 1;&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
return ready;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJvhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJvxRBEd-0fNU76fYmlA" name="sendOffers">
              <ownedComment xmi:id="_17RJwBRBEd-0fNU76fYmlA" annotatedElement="_17RJvxRBEd-0fNU76fYmlA">
                <body>// Fire all output expansion nodes and send offers on all outgoing control flows.&#xD;
&#xD;
ExpansionRegion region = (ExpansionRegion)(this.node);&#xD;
&#xD;
// *** Send offers from all output expansion nodes concurrently. ***&#xD;
ExpansionNodeList outputElements = region.outputElement;&#xD;
for (Iterator i = outputElements.iterator(); i.hasNext();) {&#xD;
    ExpansionNode outputElement = (ExpansionNode)i.next();&#xD;
    this.getExpansionNodeActivation(outputElement).sendUnofferedTokens();&#xD;
}&#xD;
&#xD;
// Send offers on all outgoing control flows.&#xD;
super.sendOffers();&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJwRRBEd-0fNU76fYmlA" name="runGroup">
              <ownedComment xmi:id="_17RJwhRBEd-0fNU76fYmlA" annotatedElement="_17RJwRRBEd-0fNU76fYmlA">
                <body>// Set up the inputs for the group with the given index, run the group and then fire the group outputs.&#xD;
&#xD;
Debug.println(&quot;[runGroup] groupInput[0] = &quot; + this.inputExpansionTokens.getValue(0).tokens.getValue(activationGroup.index-1).getValue());&#xD;
&#xD;
TokenSetList inputTokens = this.inputTokens;&#xD;
for (int j = 0; j &lt; inputTokens.size(); j++) {&#xD;
    TokenSet tokenSet = inputTokens.getValue(j);&#xD;
    OutputPinActivation regionInput = activationGroup.regionInputs.getValue(j);&#xD;
    regionInput.clearTokens();&#xD;
    regionInput.addTokens(tokenSet.tokens);&#xD;
    regionInput.sendUnofferedTokens();&#xD;
}&#xD;
&#xD;
TokenSetList inputExpansionTokens = this.inputExpansionTokens;&#xD;
for (int j = 0; j &lt; inputExpansionTokens.size(); j++) {&#xD;
    TokenSet tokenSet = inputExpansionTokens.getValue(j);&#xD;
    OutputPinActivation groupInput = activationGroup.groupInputs.getValue(j);&#xD;
    groupInput.clearTokens();&#xD;
    groupInput.addToken(tokenSet.tokens.getValue(activationGroup.index-1));&#xD;
    groupInput.sendUnofferedTokens();&#xD;
}&#xD;
&#xD;
activationGroup.run(activationGroup.nodeActivations);&#xD;
&#xD;
OutputPinActivationList groupOutputs = activationGroup.groupOutputs;&#xD;
for (int i = 0; i &lt; groupOutputs.size(); i++) {&#xD;
    OutputPinActivation groupOutput = groupOutputs.getValue(i);&#xD;
    groupOutput.fire(groupOutput.takeOfferedTokens());&#xD;
}&#xD;
&#xD;
activationGroup.terminateAll();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJwxRBEd-0fNU76fYmlA" name="activationGroup" type="_17RJdhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJxBRBEd-0fNU76fYmlA" name="getExpansionNodeActivation">
              <ownedComment xmi:id="_17RJxRRBEd-0fNU76fYmlA" annotatedElement="_17RJxBRBEd-0fNU76fYmlA">
                <body>// Return the expansion node activation corresponding to the given expansion node, in the context of the activity node activation group this expansion region activation is in.&#xD;
// [Note: Expansion regions do not own their expansion nodes. Instead, they are own as object nodes by the enclosing activity or group. &#xD;
// Therefore, they will already be activated along with their expansion region.]&#xD;
&#xD;
return (ExpansionNodeActivation)(this.group.getNodeActivation(node));&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJxhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RJkRRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RJxxRBEd-0fNU76fYmlA" name="node" type="_17RUcBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJyBRBEd-0fNU76fYmlA" name="numberOfValues">
              <ownedComment xmi:id="_17RJyRRBEd-0fNU76fYmlA" annotatedElement="_17RJyBRBEd-0fNU76fYmlA">
                <body>// Return the number of values on the first input expansion node of the expansion region of this activation.&#xD;
// (The region is required to have at least one input expansion node.)&#xD;
&#xD;
ExpansionRegion region = (ExpansionRegion)(this.node);&#xD;
&#xD;
return this.getExpansionNodeActivation(region.inputElement.getValue(0)).countOfferedValues();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJyhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJyxRBEd-0fNU76fYmlA" name="A_activationGroups_regionActivation" memberEnd="_17RJpRRBEd-0fNU76fYmlA _17RJghRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJzBRBEd-0fNU76fYmlA" name="A_regionInputs_expansionActivationGroup" memberEnd="_17RJehRBEd-0fNU76fYmlA _17RJzRRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJzRRBEd-0fNU76fYmlA" visibility="private" type="_17RJdhRBEd-0fNU76fYmlA" association="_17RJzBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJzhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJzxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJ0BRBEd-0fNU76fYmlA" name="A_groupInputs_expansionActivationGroup" memberEnd="_17RJfhRBEd-0fNU76fYmlA _17RJ0RRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJ0RRBEd-0fNU76fYmlA" visibility="private" type="_17RJdhRBEd-0fNU76fYmlA" association="_17RJ0BRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJ0hRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJ0xRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJ1BRBEd-0fNU76fYmlA" name="A_groupOutputs_expansionActivationGroup" memberEnd="_17RJhBRBEd-0fNU76fYmlA _17RJ1RRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJ1RRBEd-0fNU76fYmlA" visibility="private" type="_17RJdhRBEd-0fNU76fYmlA" association="_17RJ1BRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJ1hRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJ1xRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RJ2BRBEd-0fNU76fYmlA" name="TokenSet">
            <ownedAttribute xmi:id="_17RJ2RRBEd-0fNU76fYmlA" name="tokens" visibility="public" type="_17RHNBRBEd-0fNU76fYmlA" association="_17RJ4BRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJ2hRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJ2xRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJ3BRBEd-0fNU76fYmlA" name="A_inputTokens_expansionRegionActivation" memberEnd="_17RJqRRBEd-0fNU76fYmlA _17RJ3RRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJ3RRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RJoRRBEd-0fNU76fYmlA" association="_17RJ3BRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJ3hRBEd-0fNU76fYmlA" name="A_inputExpansionTokens_expansionRegionActivation" memberEnd="_17RJrRRBEd-0fNU76fYmlA _17RJ3xRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJ3xRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RJoRRBEd-0fNU76fYmlA" association="_17RJ3hRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RJ4BRBEd-0fNU76fYmlA" name="A_tokens_tokenSet" memberEnd="_17RJ2RRBEd-0fNU76fYmlA _17RJ4RRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RJ4RRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RJ2BRBEd-0fNU76fYmlA" association="_17RJ4BRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RJ4hRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RJ4xRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RJ5BRBEd-0fNU76fYmlA" name="Classes">
        <packagedElement xmi:type="uml:Package" xmi:id="_17RJ5RRBEd-0fNU76fYmlA" name="Kernel">
          <packageImport xmi:id="_17RJ5hRBEd-0fNU76fYmlA" importedPackage="_17RMjRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RJ5xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RJ6BRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17RJ6RRBEd-0fNU76fYmlA" importedPackage="_17RNVBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RJ6hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RJ6xRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17RJ7BRBEd-0fNU76fYmlA" importedPackage="_17ROzRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RJ7RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RJ7hRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17RJ7xRBEd-0fNU76fYmlA" importedPackage="_17RMOBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RJ8BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RJ8RRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17RJ8hRBEd-0fNU76fYmlA" importedPackage="_17ROHRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RJ8xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RJ9BRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RJ9RRBEd-0fNU76fYmlA" name="StructuredValue" isAbstract="true">
            <ownedComment xmi:id="_17RJ9hRBEd-0fNU76fYmlA" annotatedElement="_17RJ9RRBEd-0fNU76fYmlA">
              <body>A structured value is a Value whose type has structural features: a data type (but not a primitive type or enumeration), a class or an association.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RJ9xRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RJ-BRBEd-0fNU76fYmlA" general="_17RKJhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RJ-RRBEd-0fNU76fYmlA" name="specify">
              <ownedComment xmi:id="_17RJ-hRBEd-0fNU76fYmlA" annotatedElement="_17RJ-RRBEd-0fNU76fYmlA">
                <body>// Return an instance value that specifies this structured value.&#xD;
&#xD;
// Debug.println(&quot;[specify] StructuredValue...&quot;);&#xD;
&#xD;
InstanceValue instanceValue = new InstanceValue();&#xD;
InstanceSpecification instance = new InstanceSpecification();&#xD;
&#xD;
instanceValue.type = null;&#xD;
instanceValue.instance = instance;&#xD;
&#xD;
instance.classifier = this.getTypes();&#xD;
&#xD;
FeatureValueList featureValues = this.getFeatureValues();&#xD;
// Debug.println(&quot;[specify] &quot; + featureValues.size() + &quot; feature(s).&quot;);&#xD;
&#xD;
for (int i = 0; i &lt; featureValues.size(); i++) {&#xD;
    FeatureValue featureValue = featureValues.getValue(i);&#xD;
&#xD;
    Slot slot = new Slot();&#xD;
    slot.definingFeature = featureValue.feature;&#xD;
&#xD;
    // Debug.println(&quot;[specify] feature = &quot; + featureValue.feature.name + &quot;, &quot; + featureValue.values.size() + &quot; value(s).&quot;);&#xD;
&#xD;
    ValueList values = featureValue.values;&#xD;
    for (int j = 0; j &lt; values.size(); j++) {&#xD;
        Value value = values.getValue(j);&#xD;
        // Debug.println(&quot;[specify] value = &quot; + value);&#xD;
        slot.value.addValue(value.specify());&#xD;
    }&#xD;
&#xD;
    instance.slot.addValue(slot);&#xD;
}&#xD;
&#xD;
return instanceValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJ-xRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RO0RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RJ_BRBEd-0fNU76fYmlA" name="getFeatureValue" isAbstract="true">
              <ownedComment xmi:id="_17RJ_RRBEd-0fNU76fYmlA" annotatedElement="_17RJ_BRBEd-0fNU76fYmlA">
                <body>Get the feature value associated with the given feature. &#xD;
The given feature must be a structural feature of the type of the structured value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RJ_hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLRhRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RJ_xRBEd-0fNU76fYmlA" name="feature" type="_17RO1BRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKABRBEd-0fNU76fYmlA" name="setFeatureValue" isAbstract="true">
              <ownedComment xmi:id="_17RKARRBEd-0fNU76fYmlA" annotatedElement="_17RKABRBEd-0fNU76fYmlA">
                <body>Set the value(s) and, optionally, the position index associated with the given feature. &#xD;
The given feature must be a structural feature of the type of the structured value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKAhRBEd-0fNU76fYmlA" name="feature" type="_17RO1BRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RKAxRBEd-0fNU76fYmlA" name="values" type="_17RKJhRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKBBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKBRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RKBhRBEd-0fNU76fYmlA" name="position">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKBxRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKCBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKCRRBEd-0fNU76fYmlA" name="getFeatureValues" isAbstract="true">
              <ownedComment xmi:id="_17RKChRBEd-0fNU76fYmlA" annotatedElement="_17RKCRRBEd-0fNU76fYmlA">
                <body>Return the feature values associated with this structural value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKCxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLRhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKDBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKDRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKDhRBEd-0fNU76fYmlA" name="createFeatureValues">
              <ownedComment xmi:id="_17RKDxRBEd-0fNU76fYmlA" annotatedElement="_17RKDhRBEd-0fNU76fYmlA">
                <body>// Create empty feature values for all structural features, direct and inherited, of the types of this structured value.&#xD;
&#xD;
ClassifierList types = this.getTypes();&#xD;
&#xD;
for (int i = 0; i &lt; types.size(); i++) {&#xD;
    Classifier type = types.getValue(i);&#xD;
    NamedElementList members = type.member;&#xD;
&#xD;
    for (int j = 0; j &lt; members.size(); j++) {&#xD;
        NamedElement member = members.getValue(j);&#xD;
        if (member instanceof StructuralFeature) {&#xD;
            this.setFeatureValue((StructuralFeature)member, new ValueList(), 0);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RKEBRBEd-0fNU76fYmlA" name="UnlimitedNaturalValue">
            <ownedComment xmi:id="_17RKERRBEd-0fNU76fYmlA" annotatedElement="_17RKEBRBEd-0fNU76fYmlA">
              <body>An unlimited natural value is a primitive value whose type is UnlimitedNatural.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RKEhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RKExRBEd-0fNU76fYmlA" general="_17RKlxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RKFBRBEd-0fNU76fYmlA" name="value">
              <ownedComment xmi:id="_17RKFRRBEd-0fNU76fYmlA" annotatedElement="_17RKFBRBEd-0fNU76fYmlA">
                <body>The actual unlimited natural value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RKFhRBEd-0fNU76fYmlA" name="specify">
              <ownedComment xmi:id="_17RKFxRBEd-0fNU76fYmlA" annotatedElement="_17RKFhRBEd-0fNU76fYmlA">
                <body>// Return a literal unlimited natural with the value of this unlimited natural value.&#xD;
&#xD;
LiteralUnlimitedNatural literal = new LiteralUnlimitedNatural();&#xD;
&#xD;
literal.type = this.type;&#xD;
literal.value = this.value;&#xD;
&#xD;
return literal;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKGBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RO0RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKGRRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RKGhRBEd-0fNU76fYmlA" annotatedElement="_17RKGRRBEd-0fNU76fYmlA">
                <body>// Test if this unlimited natural value is equal to the otherValue. &#xD;
// To be equal, the otherValue must have the same value as this unlimited natural value.&#xD;
&#xD;
boolean isEqual = false;&#xD;
if (otherValue instanceof UnlimitedNaturalValue) {&#xD;
    isEqual = ((UnlimitedNaturalValue)otherValue).value == this.value;&#xD;
}&#xD;
&#xD;
return isEqual;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKGxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RKHBRBEd-0fNU76fYmlA" name="otherValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKHRRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RKHhRBEd-0fNU76fYmlA" annotatedElement="_17RKHRRBEd-0fNU76fYmlA">
                <body>// Create a new unlimited natural value with the same value as this value.&#xD;
&#xD;
UnlimitedNaturalValue newValue = (UnlimitedNaturalValue)(super.copy());&#xD;
&#xD;
newValue.value = this.value;&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKHxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKIBRBEd-0fNU76fYmlA" name="new_" visibility="protected">
              <ownedComment xmi:id="_17RKIRRBEd-0fNU76fYmlA" annotatedElement="_17RKIBRBEd-0fNU76fYmlA">
                <body>// Create a new unlimited natural value with no value.&#xD;
&#xD;
return new UnlimitedNaturalValue();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKIhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKIxRBEd-0fNU76fYmlA" name="toString">
              <ownedComment xmi:id="_17RKJBRBEd-0fNU76fYmlA" annotatedElement="_17RKIxRBEd-0fNU76fYmlA">
                <body>String stringValue = &quot;*&quot;;&#xD;
&#xD;
if (this.value.naturalValue >= 0) {&#xD;
    IntegerValue integerValue = new IntegerValue();&#xD;
    integerValue.value = this.value.naturalValue;&#xD;
    stringValue = integerValue.toString();&#xD;
}&#xD;
&#xD;
return stringValue;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKJRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RKJhRBEd-0fNU76fYmlA" name="Value" isAbstract="true">
            <ownedComment xmi:id="_17RKJxRBEd-0fNU76fYmlA" annotatedElement="_17RKJhRBEd-0fNU76fYmlA">
              <body>A value is an instance of one or more classifiers, which are its types. A value is always representable using a value specification.&#xD;
&#xD;
[Note: Value specializes SemanticVisitor to allow the Execution subclass to be a semantic visitor, without requiring multiple generalization of Execution.]</body>
            </ownedComment>
            <ownedComment xmi:id="_17RKKBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RKKRRBEd-0fNU76fYmlA" general="_17RNXhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RKKhRBEd-0fNU76fYmlA" name="specify" isAbstract="true">
              <ownedComment xmi:id="_17RKKxRBEd-0fNU76fYmlA" annotatedElement="_17RKKhRBEd-0fNU76fYmlA">
                <body>Return a value specification whose evaluation gives a value equal to this value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKLBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RO0RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKLRRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RKLhRBEd-0fNU76fYmlA" annotatedElement="_17RKLRRBEd-0fNU76fYmlA">
                <body>// Test if this value is equal to otherValue. To be equal, this value must have the same type as otherValue. &#xD;
// This operation must be overridden in Value subclasses to check for equality of properties defined in those subclasses.&#xD;
&#xD;
ClassifierList myTypes = this.getTypes();&#xD;
ClassifierList otherTypes = otherValue.getTypes();&#xD;
&#xD;
boolean isEqual = true;&#xD;
&#xD;
// Debug.println(&quot;[equals] Value...&quot;);&#xD;
// Debug.println(&quot;[equals] this has &quot; + myTypes.size() + &quot;types, other has &quot; + otherTypes.size() + &quot;.&quot;);&#xD;
if (myTypes.size() != otherTypes.size()) {&#xD;
    isEqual = false;&#xD;
&#xD;
} else {&#xD;
    // Debug.println(&quot;[equals] &quot; + myTypes.size() + &quot; type(s).&quot;);&#xD;
&#xD;
    int i = 1;&#xD;
    while (isEqual &amp; i &lt;= myTypes.size()) {&#xD;
&#xD;
        // Debug.println(&quot;[equals] this type = &quot; + myTypes.getValue(i-1).name);&#xD;
&#xD;
        boolean matched = false;&#xD;
        int j = 1;&#xD;
        while (!matched &amp; j &lt;= otherTypes.size()) {&#xD;
            // Debug.println(&quot;[equals] other type = &quot; + otherTypes.getValue(j-1).name);&#xD;
            matched = (otherTypes.getValue(j-1) == myTypes.getValue(i-1));&#xD;
            j = j + 1;&#xD;
        }&#xD;
&#xD;
        isEqual = matched;&#xD;
        i = i + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
return isEqual;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKLxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RKMBRBEd-0fNU76fYmlA" name="otherValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKMRRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RKMhRBEd-0fNU76fYmlA" annotatedElement="_17RKMRRBEd-0fNU76fYmlA">
                <body>// Create a new value that is equal to this value.  &#xD;
// By default, this operation simply creates a new value with empty properties. &#xD;
// It must be overridden in each Value subclass to do the superclass copy and then appropriately set properties defined in the subclass.&#xD;
&#xD;
return this.new_();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKMxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKNBRBEd-0fNU76fYmlA" name="new_" visibility="protected" isAbstract="true">
              <ownedComment xmi:id="_17RKNRRBEd-0fNU76fYmlA" annotatedElement="_17RKNBRBEd-0fNU76fYmlA">
                <body>Create a new value of the same Value subclass as this value, with all properties empty (even if this violates multiplicity constraints). &#xD;
This operation must be defined in each concrete Value subclass to create an instance of that subclass.&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKNhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKNxRBEd-0fNU76fYmlA" name="getTypes" isAbstract="true">
              <ownedComment xmi:id="_17RKOBRBEd-0fNU76fYmlA" annotatedElement="_17RKNxRBEd-0fNU76fYmlA">
                <body>Gets all the classifiers under which this value is currently classifier.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKORRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRHRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKOhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKOxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKPBRBEd-0fNU76fYmlA" name="hasType">
              <ownedComment xmi:id="_17RKPRRBEd-0fNU76fYmlA" annotatedElement="_17RKPBRBEd-0fNU76fYmlA">
                <body>// Check if this object has the given classifier as a type.&#xD;
&#xD;
ClassifierList types = this.getTypes();&#xD;
&#xD;
boolean found = false;&#xD;
int i = 1;&#xD;
while (!found &amp; i &lt;= types.size()) {&#xD;
    found = (types.getValue(i-1) == type);&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return found;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKPhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RKPxRBEd-0fNU76fYmlA" name="type" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKQBRBEd-0fNU76fYmlA" name="toString" isAbstract="true">
              <ownedComment xmi:id="_17RKQRRBEd-0fNU76fYmlA" annotatedElement="_17RKQBRBEd-0fNU76fYmlA">
                <body>Return a string representation of this value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKQhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKQxRBEd-0fNU76fYmlA" name="objectId">
              <ownedComment xmi:id="_17RKRBRBEd-0fNU76fYmlA" annotatedElement="_17RKQxRBEd-0fNU76fYmlA">
                <body>// Return an identifier for this object.&#xD;
// [Non-normative.]&#xD;
&#xD;
return super.toString();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKRRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RKRhRBEd-0fNU76fYmlA" name="StringValue">
            <ownedComment xmi:id="_17RKRxRBEd-0fNU76fYmlA" annotatedElement="_17RKRhRBEd-0fNU76fYmlA">
              <body>A string value is a primitive value whose type is String.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RKSBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RKSRRBEd-0fNU76fYmlA" general="_17RKlxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RKShRBEd-0fNU76fYmlA" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RKSxRBEd-0fNU76fYmlA" name="specify">
              <ownedComment xmi:id="_17RKTBRBEd-0fNU76fYmlA" annotatedElement="_17RKSxRBEd-0fNU76fYmlA">
                <body>// Return a literal string with the value of this string value.&#xD;
&#xD;
LiteralString literal = new LiteralString();&#xD;
&#xD;
literal.type = this.type;&#xD;
literal.value = this.value;&#xD;
&#xD;
return literal;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKTRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RO0RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKThRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RKTxRBEd-0fNU76fYmlA" annotatedElement="_17RKThRBEd-0fNU76fYmlA">
                <body>// Test if this string value is equal to the otherValue. &#xD;
// To be equal, the otherValue must have the same value as this string value.&#xD;
&#xD;
boolean isEqual = false;&#xD;
if (otherValue instanceof StringValue) {&#xD;
    isEqual = ((StringValue)otherValue).value.equals(this.value);&#xD;
}&#xD;
&#xD;
return isEqual;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKUBRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RKURRBEd-0fNU76fYmlA" name="otherValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKUhRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RKUxRBEd-0fNU76fYmlA" annotatedElement="_17RKUhRBEd-0fNU76fYmlA">
                <body>// Create a new string value with the same value as this string value.&#xD;
&#xD;
StringValue newValue = (StringValue)(super.copy());&#xD;
&#xD;
newValue.value = this.value;&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKVBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKVRRBEd-0fNU76fYmlA" name="new_" visibility="protected">
              <ownedComment xmi:id="_17RKVhRBEd-0fNU76fYmlA" annotatedElement="_17RKVRRBEd-0fNU76fYmlA">
                <body>// Create a new string value with no value.&#xD;
&#xD;
return new StringValue();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKVxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKWBRBEd-0fNU76fYmlA" name="toString">
              <ownedComment xmi:id="_17RKWRRBEd-0fNU76fYmlA" annotatedElement="_17RKWBRBEd-0fNU76fYmlA">
                <body>return value;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKWhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RKWxRBEd-0fNU76fYmlA" name="Reference">
            <ownedComment xmi:id="_17RKXBRBEd-0fNU76fYmlA" annotatedElement="_17RKWxRBEd-0fNU76fYmlA">
              <body>A reference is an access path to a specific object. There may be multiple references to the same object.&#xD;
As a structured value, the reference acts just the same as its referent in terms of type, features, operations, etc.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RKXRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RKXhRBEd-0fNU76fYmlA" general="_17RJ9RRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RKXxRBEd-0fNU76fYmlA" name="referent" type="_17RKphRBEd-0fNU76fYmlA" association="_17RMFRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKYBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKYRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RKYhRBEd-0fNU76fYmlA" name="startBehavior">
              <ownedComment xmi:id="_17RKYxRBEd-0fNU76fYmlA" annotatedElement="_17RKYhRBEd-0fNU76fYmlA">
                <body>// Asynchronously start the behavior of the given classifier for the referent object.&#xD;
&#xD;
this.referent.startBehavior(classifier, inputs);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKZBRBEd-0fNU76fYmlA" name="classifier" type="_17RQ2RRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKZRRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKZhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RKZxRBEd-0fNU76fYmlA" name="inputs" type="_17RMPxRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKaBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKaRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKahRBEd-0fNU76fYmlA" name="dispatch">
              <ownedComment xmi:id="_17RKaxRBEd-0fNU76fYmlA" annotatedElement="_17RKahRBEd-0fNU76fYmlA">
                <body>// Dispatch the given operation to the referent object.&#xD;
&#xD;
return this.referent.dispatch(operation);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKbBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMWhRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RKbRRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKbhRBEd-0fNU76fYmlA" name="send">
              <ownedComment xmi:id="_17RKbxRBEd-0fNU76fYmlA" annotatedElement="_17RKbhRBEd-0fNU76fYmlA">
                <body>// Send the given signal instance to the referent object.&#xD;
&#xD;
this.referent.send(signalInstance);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKcBRBEd-0fNU76fYmlA" name="signalInstance" type="_17RM7RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKcRRBEd-0fNU76fYmlA" name="destroy">
              <ownedComment xmi:id="_17RKchRBEd-0fNU76fYmlA" annotatedElement="_17RKcRRBEd-0fNU76fYmlA">
                <body>// Destroy the referent.&#xD;
&#xD;
this.referent.destroy();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKcxRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RKdBRBEd-0fNU76fYmlA" annotatedElement="_17RKcxRBEd-0fNU76fYmlA">
                <body>// Test if this reference is equal to the otherValue. &#xD;
// To be equal, the otherValue must also be a reference, with the same referent as this reference.&#xD;
&#xD;
boolean isEqual = false;&#xD;
if (otherValue instanceof Reference) {&#xD;
    isEqual = (((Reference)otherValue).referent == this.referent);&#xD;
}&#xD;
&#xD;
return isEqual;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKdRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RKdhRBEd-0fNU76fYmlA" name="otherValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKdxRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RKeBRBEd-0fNU76fYmlA" annotatedElement="_17RKdxRBEd-0fNU76fYmlA">
                <body>// Create a new reference with the same referent as this reference.&#xD;
&#xD;
Reference newValue = (Reference)(super.copy());&#xD;
&#xD;
newValue.referent = this.referent;&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKeRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKehRBEd-0fNU76fYmlA" name="new_" visibility="protected">
              <ownedComment xmi:id="_17RKexRBEd-0fNU76fYmlA" annotatedElement="_17RKehRBEd-0fNU76fYmlA">
                <body>// Create a new reference with no referent.&#xD;
&#xD;
return new Reference();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKfBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKfRRBEd-0fNU76fYmlA" name="getTypes">
              <ownedComment xmi:id="_17RKfhRBEd-0fNU76fYmlA" annotatedElement="_17RKfRRBEd-0fNU76fYmlA">
                <body>// Get the types of the referent object.&#xD;
&#xD;
return this.referent.getTypes();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKfxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRHRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKgBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKgRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKghRBEd-0fNU76fYmlA" name="getFeatureValue">
              <ownedComment xmi:id="_17RKgxRBEd-0fNU76fYmlA" annotatedElement="_17RKghRBEd-0fNU76fYmlA">
                <body>// Get the feature value associated with the given feature in the referent object.&#xD;
&#xD;
return this.referent.getFeatureValue(feature);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKhBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLRhRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RKhRRBEd-0fNU76fYmlA" name="feature" type="_17RO1BRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKhhRBEd-0fNU76fYmlA" name="setFeatureValue">
              <ownedComment xmi:id="_17RKhxRBEd-0fNU76fYmlA" annotatedElement="_17RKhhRBEd-0fNU76fYmlA">
                <body>// Set the values associated with the given feature in the referent object.&#xD;
&#xD;
this.referent.setFeatureValue(feature, values, position);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKiBRBEd-0fNU76fYmlA" name="feature" type="_17RO1BRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RKiRRBEd-0fNU76fYmlA" name="values" type="_17RKJhRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKihRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKixRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RKjBRBEd-0fNU76fYmlA" name="position">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKjRRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKjhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKjxRBEd-0fNU76fYmlA" name="getFeatureValues">
              <ownedComment xmi:id="_17RKkBRBEd-0fNU76fYmlA" annotatedElement="_17RKjxRBEd-0fNU76fYmlA">
                <body>// Return the feature values of the referent.&#xD;
&#xD;
return this.referent.getFeatureValues();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKkRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLRhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKkhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKkxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKlBRBEd-0fNU76fYmlA" name="toString">
              <ownedComment xmi:id="_17RKlRRBEd-0fNU76fYmlA" annotatedElement="_17RKlBRBEd-0fNU76fYmlA">
                <body>return &quot;Reference to &quot; + this.referent.toString();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKlhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RKlxRBEd-0fNU76fYmlA" name="PrimitiveValue" isAbstract="true">
            <ownedComment xmi:id="_17RKmBRBEd-0fNU76fYmlA" annotatedElement="_17RKlxRBEd-0fNU76fYmlA">
              <body>A primitive value is a value whose (single) type is a primitive type.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RKmRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RKmhRBEd-0fNU76fYmlA" general="_17RKJhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RKmxRBEd-0fNU76fYmlA" name="type" type="_17RQYhRBEd-0fNU76fYmlA" association="_17RMERRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKnBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKnRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RKnhRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RKnxRBEd-0fNU76fYmlA" annotatedElement="_17RKnhRBEd-0fNU76fYmlA">
                <body>// Create a new value that is equal to this primitive value.&#xD;
&#xD;
PrimitiveValue newValue = (PrimitiveValue)(super.copy());&#xD;
&#xD;
newValue.type = this.type;&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKoBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKoRRBEd-0fNU76fYmlA" name="getTypes">
              <ownedComment xmi:id="_17RKohRBEd-0fNU76fYmlA" annotatedElement="_17RKoRRBEd-0fNU76fYmlA">
                <body>// Return the single primitive type of this value.&#xD;
&#xD;
ClassifierList types = new ClassifierList();&#xD;
types.addValue(this.type);&#xD;
return types;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKoxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRHRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKpBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKpRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RKphRBEd-0fNU76fYmlA" name="Object">
            <ownedComment xmi:id="_17RKpxRBEd-0fNU76fYmlA" annotatedElement="_17RKphRBEd-0fNU76fYmlA">
              <body>An object is an extensional value that may have multiple types, all of which must be classes. (Note that a destroyed object has no types.)&#xD;
An object has a unique identity. Usually, references to objects are manipulated, rather than the objects themselves, and there may be multiple references to the same object.&#xD;
If an object is active, it has an object activation that handle the execution of its classifier behavior(s).</body>
            </ownedComment>
            <ownedComment xmi:id="_17RKqBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RKqRRBEd-0fNU76fYmlA" general="_17RLXBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RKqhRBEd-0fNU76fYmlA" name="types" type="_17RQ2RRBEd-0fNU76fYmlA" association="_17RMDRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RKqxRBEd-0fNU76fYmlA" annotatedElement="_17RKqhRBEd-0fNU76fYmlA">
                <body>The classes under which this object is currently classified. (A destroyed object has no types.)</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKrBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKrRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RKrhRBEd-0fNU76fYmlA" name="objectActivation" type="_17RM_hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RMDBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RKrxRBEd-0fNU76fYmlA" annotatedElement="_17RKrhRBEd-0fNU76fYmlA">
                <body>The object activation handling the active behavior of this object.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKsBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKsRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RKshRBEd-0fNU76fYmlA" name="startBehavior">
              <ownedComment xmi:id="_17RKsxRBEd-0fNU76fYmlA" annotatedElement="_17RKshRBEd-0fNU76fYmlA">
                <body>// Create an object activation for this object (if one does not already exist) and start its behavior(s).&#xD;
&#xD;
// Debug.println(&quot;[startBehavior] On object...&quot;);&#xD;
&#xD;
if (this.objectActivation == null) {&#xD;
    this.objectActivation = new ObjectActivation();&#xD;
    this.objectActivation.object = this;&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[startBehavior] objectActivation = &quot; + objectActivation);&#xD;
&#xD;
this.objectActivation.startBehavior(classifier, inputs);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKtBRBEd-0fNU76fYmlA" name="classifier" type="_17RQ2RRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKtRRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKthRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RKtxRBEd-0fNU76fYmlA" name="inputs" type="_17RMPxRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RKuBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RKuRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKuhRBEd-0fNU76fYmlA" name="dispatch">
              <ownedComment xmi:id="_17RKuxRBEd-0fNU76fYmlA" annotatedElement="_17RKuhRBEd-0fNU76fYmlA">
                <body>// Dispatch the given operation to a method execution, using a dispatch strategy.&#xD;
&#xD;
return ((DispatchStrategy)this.locus.factory.getStrategy(&quot;dispatch&quot;)).dispatch(this, operation);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKvBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMWhRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RKvRRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKvhRBEd-0fNU76fYmlA" name="send">
              <ownedComment xmi:id="_17RKvxRBEd-0fNU76fYmlA" annotatedElement="_17RKvhRBEd-0fNU76fYmlA">
                <body>// If the object is active, add the given signal instance to the event pool and signal that a new signal instance has arrived.&#xD;
&#xD;
if (this.objectActivation != null) {&#xD;
    this.objectActivation.send(signalInstance);&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKwBRBEd-0fNU76fYmlA" name="signalInstance" type="_17RM7RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKwRRBEd-0fNU76fYmlA" name="destroy">
              <ownedComment xmi:id="_17RKwhRBEd-0fNU76fYmlA" annotatedElement="_17RKwRRBEd-0fNU76fYmlA">
                <body>// Stop the object activation (if any), clear all types and destroy the object as an extensional value.&#xD;
&#xD;
Debug.println(&quot;[destroy] object = &quot; + this.objectId());&#xD;
&#xD;
if (this.objectActivation != null) {&#xD;
    this.objectActivation.stop();&#xD;
    this.objectActivation = null;&#xD;
}&#xD;
&#xD;
this.types.clear();&#xD;
super.destroy();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKwxRBEd-0fNU76fYmlA" name="register">
              <ownedComment xmi:id="_17RKxBRBEd-0fNU76fYmlA" annotatedElement="_17RKwxRBEd-0fNU76fYmlA">
                <body>// Register the given accept event accepter to wait for a dispatched signal event.&#xD;
&#xD;
if (this.objectActivation != null) {&#xD;
    this.objectActivation.register(accepter);&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKxRRBEd-0fNU76fYmlA" name="accepter" type="_17RMyRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKxhRBEd-0fNU76fYmlA" name="unregister">
              <ownedComment xmi:id="_17RKxxRBEd-0fNU76fYmlA">
                <body>// Remove the given event accepter for the list of waiting event accepters.&#xD;
&#xD;
if (this.objectActivation != null) {&#xD;
    this.objectActivation.unregister(accepter);&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKyBRBEd-0fNU76fYmlA" name="accepter" type="_17RMyRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKyRRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RKyhRBEd-0fNU76fYmlA" annotatedElement="_17RKyRRBEd-0fNU76fYmlA">
                <body>// Create a new object that is a copy of this object at the same locus as this object.&#xD;
// However, the new object will NOT have any object activation (i.e, its classifier behaviors will not be started).&#xD;
&#xD;
Object_ newObject = (Object_)(super.copy());&#xD;
&#xD;
Class_List types = this.types;&#xD;
for (int i = 0; i &lt; types.size(); i++) {&#xD;
    Class_ type = types.getValue(i);&#xD;
    newObject.types.addValue(type);&#xD;
}&#xD;
&#xD;
return newObject;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKyxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKzBRBEd-0fNU76fYmlA" name="new_" visibility="protected">
              <ownedComment xmi:id="_17RKzRRBEd-0fNU76fYmlA" annotatedElement="_17RKzBRBEd-0fNU76fYmlA">
                <body>// Create a new object with no type, feature values or locus.&#xD;
&#xD;
return new Object_();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RKzhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RKzxRBEd-0fNU76fYmlA" name="getTypes">
              <ownedComment xmi:id="_17RK0BRBEd-0fNU76fYmlA" annotatedElement="_17RKzxRBEd-0fNU76fYmlA">
                <body>// Return the types of this object.&#xD;
&#xD;
ClassifierList types = new ClassifierList();&#xD;
Class_List myTypes = this.types;&#xD;
for (int i = 0; i &lt; myTypes.size(); i++) {&#xD;
    Class_ type = myTypes.getValue(i);&#xD;
    types.addValue(type);&#xD;
}&#xD;
&#xD;
return types;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RK0RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRHRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RK0hRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RK0xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RK1BRBEd-0fNU76fYmlA" name="LiteralBooleanEvaluation">
            <ownedComment xmi:id="_17RK1RRBEd-0fNU76fYmlA" annotatedElement="_17RK1BRBEd-0fNU76fYmlA">
              <body>A boolean evaluation is an evaluation whose specification is a literal boolean.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RK1hRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RK1xRBEd-0fNU76fYmlA" general="_17RK3RRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RK2BRBEd-0fNU76fYmlA" name="evaluate">
              <ownedComment xmi:id="_17RK2RRBEd-0fNU76fYmlA" annotatedElement="_17RK2BRBEd-0fNU76fYmlA">
                <body>// Evaluate a literal boolean, producing a boolean value.&#xD;
&#xD;
LiteralBoolean literal = (LiteralBoolean)specification;&#xD;
BooleanValue booleanValue = new BooleanValue();&#xD;
booleanValue.type = this.getType(&quot;Boolean&quot;);&#xD;
booleanValue.value = literal.value;&#xD;
&#xD;
return booleanValue;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RK2hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RK2xRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RK3BRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RK3RRBEd-0fNU76fYmlA" name="LiteralEvaluation" isAbstract="true">
            <ownedComment xmi:id="_17RK3hRBEd-0fNU76fYmlA" annotatedElement="_17RK3RRBEd-0fNU76fYmlA">
              <body>A literal evaluation is an evaluation whose specification is a Literal Specification.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RK3xRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RK4BRBEd-0fNU76fYmlA" general="_17RLaRRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RK4RRBEd-0fNU76fYmlA" name="getType">
              <ownedComment xmi:id="_17RK4hRBEd-0fNU76fYmlA" annotatedElement="_17RK4RRBEd-0fNU76fYmlA">
                <body>// Get the type of the specification. If that is null, then use the built-in type of the given name.&#xD;
&#xD;
PrimitiveType type = (PrimitiveType)(this.specification.type);&#xD;
&#xD;
if (type == null) {&#xD;
    type = this.locus.factory.getBuiltInType(builtInTypeName);&#xD;
}&#xD;
&#xD;
return type;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RK4xRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQYhRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RK5BRBEd-0fNU76fYmlA" name="builtInTypeName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RK5RRBEd-0fNU76fYmlA" name="LiteralIntegerEvaluation">
            <ownedComment xmi:id="_17RK5hRBEd-0fNU76fYmlA" annotatedElement="_17RK5RRBEd-0fNU76fYmlA">
              <body>A literal integer evaluation is an evaluation whose specification is a literal integer.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RK5xRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RK6BRBEd-0fNU76fYmlA" general="_17RK3RRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RK6RRBEd-0fNU76fYmlA" name="evaluate">
              <ownedComment xmi:id="_17RK6hRBEd-0fNU76fYmlA" annotatedElement="_17RK6RRBEd-0fNU76fYmlA">
                <body>// Evaluate a literal integer, producing an integer value.&#xD;
&#xD;
LiteralInteger literal = (LiteralInteger)specification;&#xD;
IntegerValue integerValue = new IntegerValue();&#xD;
integerValue.type = this.getType(&quot;Integer&quot;);&#xD;
integerValue.value = literal.value;&#xD;
&#xD;
return integerValue;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RK6xRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RK7BRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RK7RRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RK7hRBEd-0fNU76fYmlA" name="LiteralNullEvaluation">
            <ownedComment xmi:id="_17RK7xRBEd-0fNU76fYmlA" annotatedElement="_17RK7hRBEd-0fNU76fYmlA">
              <body>A literal null evaluation is an evaluation whose specification is a literal null.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RK8BRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RK8RRBEd-0fNU76fYmlA" general="_17RK3RRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RK8hRBEd-0fNU76fYmlA" name="evaluate">
              <ownedComment xmi:id="_17RK8xRBEd-0fNU76fYmlA" annotatedElement="_17RK8hRBEd-0fNU76fYmlA">
                <body>// Evaluate a literal null, returning nothing (since a null represents an &quot;absence of any value&quot;).&#xD;
&#xD;
return null;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RK9BRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RK9RRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RK9hRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RK9xRBEd-0fNU76fYmlA" name="LiteralStringEvaluation">
            <ownedComment xmi:id="_17RK-BRBEd-0fNU76fYmlA" annotatedElement="_17RK9xRBEd-0fNU76fYmlA">
              <body>A literal string evaluation is an evaluation whose specification is a literal string.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RK-RRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RK-hRBEd-0fNU76fYmlA" general="_17RK3RRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RK-xRBEd-0fNU76fYmlA" name="evaluate">
              <ownedComment xmi:id="_17RK_BRBEd-0fNU76fYmlA" annotatedElement="_17RK-xRBEd-0fNU76fYmlA">
                <body>// Evaluate a literal string, producing a string value.&#xD;
&#xD;
LiteralString literal = (LiteralString)specification;&#xD;
StringValue stringValue = new StringValue();&#xD;
stringValue.type = this.getType(&quot;String&quot;);&#xD;
stringValue.value = literal.value;&#xD;
&#xD;
return stringValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RK_RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RK_hRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RK_xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLABRBEd-0fNU76fYmlA" name="LiteralUnlimitedNaturalEvaluation">
            <ownedComment xmi:id="_17RLARRBEd-0fNU76fYmlA" annotatedElement="_17RLABRBEd-0fNU76fYmlA">
              <body>A literal unlimited natural evaluation is an evaluation whose specification is a literal unlimited natural.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RLAhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RLAxRBEd-0fNU76fYmlA" general="_17RK3RRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RLBBRBEd-0fNU76fYmlA" name="evaluate">
              <ownedComment xmi:id="_17RLBRRBEd-0fNU76fYmlA" annotatedElement="_17RLBBRBEd-0fNU76fYmlA">
                <body>// Evaluate a literal unlimited natural producing an unlimited natural value.&#xD;
&#xD;
LiteralUnlimitedNatural literal = (LiteralUnlimitedNatural)specification;&#xD;
UnlimitedNaturalValue unlimitedNaturalValue = new UnlimitedNaturalValue();&#xD;
unlimitedNaturalValue.type = this.getType(&quot;UnlimitedNatural&quot;);&#xD;
unlimitedNaturalValue.value = literal.value;&#xD;
&#xD;
return unlimitedNaturalValue;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLBhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLBxRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLCBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLCRRBEd-0fNU76fYmlA" name="Link">
            <ownedComment xmi:id="_17RLChRBEd-0fNU76fYmlA" annotatedElement="_17RLCRRBEd-0fNU76fYmlA">
              <body>A link is an extensional value whose (single) type is an association. (However, if the link has been destroyed, then it has no type.)&#xD;
A link must at have most one feature value for each structural feature owned by its type.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RLCxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RLDBRBEd-0fNU76fYmlA" general="_17RLXBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RLDRRBEd-0fNU76fYmlA" name="type" type="_17RRrhRBEd-0fNU76fYmlA" association="_17RMCBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RLDhRBEd-0fNU76fYmlA" annotatedElement="_17RLDRRBEd-0fNU76fYmlA">
                <body>The type of this link.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLDxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLEBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RLERRBEd-0fNU76fYmlA" name="destroy">
              <ownedComment xmi:id="_17RLEhRBEd-0fNU76fYmlA" annotatedElement="_17RLERRBEd-0fNU76fYmlA">
                <body>// Remove the type of this link and destroy it.&#xD;
// Shift the positions of the feature values of any remaining links in &#xD;
// the extent of the same association, for ends that are ordered.&#xD;
&#xD;
Debug.println(&quot;[destroy] link = &quot; + this.objectId());&#xD;
&#xD;
PropertyList ends = this.type.memberEnd;&#xD;
ExtensionalValueList extent = this.locus.getExtent(this.type);&#xD;
&#xD;
for (int i = 0; i &lt; extent.size(); i++) {&#xD;
    ExtensionalValue otherLink = extent.getValue(i);&#xD;
    for (int j=0; j &lt; ends.size(); j++) {&#xD;
        Property end = ends.getValue(j);&#xD;
        if (end.multiplicityElement.isOrdered) {&#xD;
            FeatureValue featureValue = otherLink.getFeatureValue(end);&#xD;
            if (this.getFeatureValue(end).position &lt; featureValue.position) {&#xD;
                featureValue.position = featureValue.position - 1;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
this.type = null;&#xD;
super.destroy();&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLExRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RLFBRBEd-0fNU76fYmlA" annotatedElement="_17RLExRBEd-0fNU76fYmlA">
                <body>// Create a new link with the same type, locus and feature values as this link.&#xD;
&#xD;
Link newValue = (Link)(super.copy());&#xD;
&#xD;
newValue.type = this.type;&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLFRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLFhRBEd-0fNU76fYmlA" name="new_" visibility="protected">
              <ownedComment xmi:id="_17RLFxRBEd-0fNU76fYmlA" annotatedElement="_17RLFhRBEd-0fNU76fYmlA">
                <body>// Create a new link with no type or properies.&#xD;
&#xD;
return new Link();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLGBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLGRRBEd-0fNU76fYmlA" name="getTypes">
              <ownedComment xmi:id="_17RLGhRBEd-0fNU76fYmlA" annotatedElement="_17RLGRRBEd-0fNU76fYmlA">
                <body>// Return the single type of this link (if any).&#xD;
&#xD;
ClassifierList types = null;&#xD;
&#xD;
if (this.type == null) {&#xD;
    types = new ClassifierList();&#xD;
} else {&#xD;
    types = new ClassifierList();&#xD;
    types.addValue(this.type);&#xD;
}&#xD;
&#xD;
return types;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLGxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRHRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLHBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLHRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLHhRBEd-0fNU76fYmlA" name="setFeatureValue">
              <ownedComment xmi:id="_17RLHxRBEd-0fNU76fYmlA" annotatedElement="_17RLHhRBEd-0fNU76fYmlA">
                <body>// If a position is given, before setting the given feature value, adjust the position values of the ends of other links for this same feature.&#xD;
&#xD;
if (position > 0) {&#xD;
    ExtensionalValueList extent = this.locus.getExtent(this.type);&#xD;
    for (int i = 0; i &lt; extent.size(); i++) {&#xD;
        ExtensionalValue value = extent.getValue(i);&#xD;
        FeatureValue featureValue = value.getFeatureValue(feature);&#xD;
        if (featureValue.position >= position) {&#xD;
            featureValue.position = featureValue.position + 1;&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
super.setFeatureValue(feature, values, position);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLIBRBEd-0fNU76fYmlA" name="feature" type="_17RO1BRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RLIRRBEd-0fNU76fYmlA" name="values" type="_17RKJhRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLIhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLIxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RLJBRBEd-0fNU76fYmlA" name="position">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLJRRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLJhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLJxRBEd-0fNU76fYmlA" name="InstanceValueEvaluation">
            <ownedComment xmi:id="_17RLKBRBEd-0fNU76fYmlA" annotatedElement="_17RLJxRBEd-0fNU76fYmlA">
              <body>An instance value evaluation is an evaluation whose specification is an instance value. </body>
            </ownedComment>
            <ownedComment xmi:id="_17RLKRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RLKhRBEd-0fNU76fYmlA" general="_17RLaRRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RLKxRBEd-0fNU76fYmlA" name="evaluate">
              <ownedComment xmi:id="_17RLLBRBEd-0fNU76fYmlA" annotatedElement="_17RLKxRBEd-0fNU76fYmlA">
                <body>// If the instance specification is for an enumeration, then return the identified enumeration literal.&#xD;
// If the instance specification is for a data type (but not a primitive value or an enumeration), then create a data value of the given data type.&#xD;
// If the instance specification is for an object, then create an object at the current locus with the specified types.&#xD;
// Set each feature of the created value to the result of evaluating the value specifications for the specified slot for the feature.&#xD;
&#xD;
// Debug.println(&quot;[evaluate] InstanceValueEvaluation...&quot;);&#xD;
&#xD;
InstanceSpecification instance = ((InstanceValue)this.specification).instance;&#xD;
ClassifierList types = instance.classifier;&#xD;
Classifier myType = types.getValue(0);&#xD;
&#xD;
Debug.println(&quot;[evaluate] type = &quot; + myType.name);&#xD;
&#xD;
Value value;&#xD;
if (instance instanceof EnumerationLiteral) {&#xD;
    // Debug.println(&quot;[evaluate] Type is an enumeration.&quot;); &#xD;
    EnumerationValue enumerationValue = new EnumerationValue();&#xD;
    enumerationValue.type = (Enumeration)myType;&#xD;
    enumerationValue.literal = (EnumerationLiteral)instance;&#xD;
    value = enumerationValue;&#xD;
}&#xD;
else {&#xD;
    StructuredValue structuredValue = null;&#xD;
&#xD;
    if (myType instanceof DataType) {&#xD;
        // Debug.println(&quot;[evaluate] Type is a data type.&quot;);&#xD;
        DataValue dataValue = new DataValue();&#xD;
        dataValue.type = (DataType)myType;&#xD;
        structuredValue = dataValue;&#xD;
    }&#xD;
    else {&#xD;
        Object_ object = null;&#xD;
        if (myType instanceof Behavior) {&#xD;
            // Debug.println(&quot;[evaluate] Type is a behavior.&quot;);&#xD;
            object = this.locus.factory.createExecution((Behavior)myType, null);&#xD;
        }&#xD;
        else {&#xD;
            // Debug.println(&quot;[evaluate] Type is a class.&quot;);&#xD;
            object = new Object_();&#xD;
            for (int i = 0; i &lt; types.size(); i++) {&#xD;
                Classifier type = types.getValue(i);&#xD;
                object.types.addValue((Class_)type);&#xD;
            }&#xD;
        }&#xD;
&#xD;
        this.locus.add(object);&#xD;
&#xD;
        Reference reference = new Reference();&#xD;
        reference.referent = object;&#xD;
        structuredValue = reference;&#xD;
    }&#xD;
&#xD;
    structuredValue.createFeatureValues();&#xD;
&#xD;
    // Debug.println(&quot;[evaluate] &quot; + instance.slot.size() + &quot; slot(s).&quot;);&#xD;
&#xD;
    SlotList instanceSlots = instance.slot;&#xD;
    for (int i = 0; i &lt; instanceSlots.size(); i++) {&#xD;
        Slot slot = instanceSlots.getValue(i);&#xD;
        ValueList values = new ValueList();&#xD;
&#xD;
        // Debug.println(&quot;[evaluate] feature = &quot; + slot.definingFeature.name + &quot;, &quot; + slot.value.size() + &quot; value(s).&quot;);&#xD;
        ValueSpecificationList slotValues = slot.value;&#xD;
        for (int j = 0; j &lt; slotValues.size(); j++) {&#xD;
            ValueSpecification slotValue = slotValues.getValue(j);&#xD;
            // Debug.println(&quot;[evaluate] Value = &quot; + slotValue.getClass().getName());&#xD;
            values.addValue(this.locus.executor.evaluate(slotValue));&#xD;
        }&#xD;
        structuredValue.setFeatureValue(slot.definingFeature, values, 0);&#xD;
    }&#xD;
&#xD;
   value = structuredValue;&#xD;
}&#xD;
&#xD;
return value;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLLRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLLhRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLLxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLMBRBEd-0fNU76fYmlA" name="IntegerValue">
            <ownedComment xmi:id="_17RLMRRBEd-0fNU76fYmlA" annotatedElement="_17RLMBRBEd-0fNU76fYmlA">
              <body>An integer value is a primitive value whose type is Integer.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RLMhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RLMxRBEd-0fNU76fYmlA" general="_17RKlxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RLNBRBEd-0fNU76fYmlA" name="value">
              <ownedComment xmi:id="_17RLNRRBEd-0fNU76fYmlA" annotatedElement="_17RLNBRBEd-0fNU76fYmlA">
                <body>The actual Integer value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RLNhRBEd-0fNU76fYmlA" name="specify">
              <ownedComment xmi:id="_17RLNxRBEd-0fNU76fYmlA" annotatedElement="_17RLNhRBEd-0fNU76fYmlA">
                <body>// Return a literal integer with the value of this integer value.&#xD;
&#xD;
LiteralInteger literal = new LiteralInteger();&#xD;
&#xD;
literal.type = this.type;&#xD;
literal.value = this.value;&#xD;
&#xD;
return literal;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLOBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RO0RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLORRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RLOhRBEd-0fNU76fYmlA" annotatedElement="_17RLORRBEd-0fNU76fYmlA">
                <body>// Test if this integer value is equal to the otherValue. &#xD;
// To be equal, the otherValue must have the same value as this integer value.&#xD;
&#xD;
boolean isEqual = false;&#xD;
if (otherValue instanceof IntegerValue) {&#xD;
    isEqual = ((IntegerValue)otherValue).value == this.value;&#xD;
}&#xD;
&#xD;
return isEqual;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLOxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RLPBRBEd-0fNU76fYmlA" name="otherValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLPRRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RLPhRBEd-0fNU76fYmlA" annotatedElement="_17RLPRRBEd-0fNU76fYmlA">
                <body>// Create a new integer value with the same value as this integer value.&#xD;
&#xD;
IntegerValue newValue = (IntegerValue)(super.copy());&#xD;
&#xD;
newValue.value = this.value;&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLPxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLQBRBEd-0fNU76fYmlA" name="new_" visibility="protected">
              <ownedComment xmi:id="_17RLQRRBEd-0fNU76fYmlA" annotatedElement="_17RLQBRBEd-0fNU76fYmlA">
                <body>// Create a new integer value with no value.&#xD;
&#xD;
return new IntegerValue();</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLQhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLQxRBEd-0fNU76fYmlA" name="toString">
              <ownedComment xmi:id="_17RLRBRBEd-0fNU76fYmlA">
                <body>String stringValue = &quot;&quot;;&#xD;
&#xD;
if (this.value == 0) {&#xD;
    stringValue = &quot;0&quot;;&#xD;
} else {&#xD;
    int positiveValue = this.value;&#xD;
&#xD;
    if (positiveValue &lt; 0) {&#xD;
      positiveValue = -positiveValue;&#xD;
    }&#xD;
&#xD;
    do {&#xD;
        int digit = positiveValue % 10;&#xD;
&#xD;
        if (digit == 0) {&#xD;
            stringValue = &quot;0&quot; + stringValue;&#xD;
        } else if (digit == 1) {&#xD;
            stringValue = &quot;1&quot; + stringValue;&#xD;
        } else if (digit == 2) {&#xD;
            stringValue = &quot;2&quot; + stringValue;&#xD;
        } else if (digit == 3) {&#xD;
            stringValue = &quot;3&quot; + stringValue;&#xD;
        } else if (digit == 4) {&#xD;
            stringValue = &quot;4&quot; + stringValue;&#xD;
        } else if (digit == 5) {&#xD;
            stringValue = &quot;5&quot; + stringValue;&#xD;
        } else if (digit == 6) {&#xD;
            stringValue = &quot;6&quot; + stringValue;&#xD;
        } else if (digit == 7) {&#xD;
            stringValue = &quot;7&quot; + stringValue;&#xD;
        } else if (digit == 8) {&#xD;
            stringValue = &quot;8&quot; + stringValue;&#xD;
        } else if (digit == 9) {&#xD;
            stringValue = &quot;9&quot; + stringValue;&#xD;
        }&#xD;
&#xD;
        positiveValue = positiveValue / 10;&#xD;
    } while (positiveValue > 0);&#xD;
&#xD;
    if (this.value &lt; 0) {&#xD;
        stringValue = &quot;-&quot; + stringValue;&#xD;
    }&#xD;
}&#xD;
&#xD;
return stringValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLRRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLRhRBEd-0fNU76fYmlA" name="FeatureValue">
            <ownedComment xmi:id="_17RLRxRBEd-0fNU76fYmlA" annotatedElement="_17RLRhRBEd-0fNU76fYmlA">
              <body>A feature value gives the value(s) that a single structural feature has in a specific structured value.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RLSBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:id="_17RLSRRBEd-0fNU76fYmlA" name="feature" type="_17RO1BRBEd-0fNU76fYmlA" association="_17RMBBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RLShRBEd-0fNU76fYmlA" annotatedElement="_17RLSRRBEd-0fNU76fYmlA">
                <body>The structural feature being given value(s).</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLSxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLTBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RLTRRBEd-0fNU76fYmlA" name="values" type="_17RKJhRBEd-0fNU76fYmlA" isOrdered="true" isUnique="false" aggregation="composite" association="_17RMABRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RLThRBEd-0fNU76fYmlA" annotatedElement="_17RLTRRBEd-0fNU76fYmlA">
                <body>The values of for the feature. Zero or more values are possible, as constrained by the multiplicity of the feature.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLTxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLUBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RLURRBEd-0fNU76fYmlA" name="position">
              <ownedComment xmi:id="_17RLUhRBEd-0fNU76fYmlA" annotatedElement="_17RLURRBEd-0fNU76fYmlA">
                <body>The position of this feature value in a set of ordered values for a feature of an association.&#xD;
[This is only relevant if the feature value is for a link and the feature is ordered.]</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLUxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLVBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RLVRRBEd-0fNU76fYmlA" name="hasEqualValues">
              <ownedComment xmi:id="_17RLVhRBEd-0fNU76fYmlA" annotatedElement="_17RLVRRBEd-0fNU76fYmlA">
                <body>// Determine if this feature value has an equal set of values as another feature value.&#xD;
// If the feature is ordered, then the values also have to be in the same order.&#xD;
&#xD;
boolean equal = true;&#xD;
&#xD;
if (this.values.size() != other.values.size()) {&#xD;
    equal = false;&#xD;
&#xD;
} else {&#xD;
&#xD;
    // Debug.println(&quot;[hasEqualValues] feature = &quot; + this.feature.name + &quot;, &quot; + this.values.size() + &quot; value(s).&quot;);&#xD;
&#xD;
    if (this.feature.multiplicityElement.isOrdered) {&#xD;
        int i = 1;&#xD;
        while (equal &amp; i &lt;= this.values.size()) {&#xD;
            equal = this.values.getValue(i-1).equals(other.values.getValue(i-1));&#xD;
            i = i + 1;&#xD;
        }&#xD;
&#xD;
    } else {&#xD;
        // Note: otherFeatureValues is used here solely as a holder for a copy of the list of other values,&#xD;
        // since the Java to UML mapping conventions do not allow &quot;remove&quot; on a local list variable.&#xD;
        FeatureValue otherFeatureValues = new FeatureValue();&#xD;
        ValueList values = other.values;&#xD;
        for (int i=0; i &lt; values.size(); i++) {&#xD;
            Value value = values.getValue(i);&#xD;
            otherFeatureValues.values.addValue(value);&#xD;
        }&#xD;
&#xD;
        int i = 1;&#xD;
        while (equal &amp; i &lt;= this.values.size()) {&#xD;
            // Debug.println(&quot;[hasEqualValues] This value [&quot; + (i-1) + &quot;] = &quot; + this.values.getValue(i-1));&#xD;
&#xD;
            boolean  matched = false;&#xD;
            int j = 1;&#xD;
            while (!matched &amp; j &lt;= otherFeatureValues.values.size()) {&#xD;
                 if (this.values.getValue(i-1).equals(otherFeatureValues.values.getValue(j-1))) {&#xD;
                    // Debug.println(&quot;[hasEqualValues] Other value [&quot; + (j-1) + &quot;] = &quot; + otherFeatureValues.values.getValue(j-1));&#xD;
                    matched = true;&#xD;
                    otherFeatureValues.values.remove(j-1);&#xD;
                }&#xD;
                j = j + 1;&#xD;
            }&#xD;
&#xD;
            equal = matched;&#xD;
            i = i + 1;&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
return equal;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLVxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RLWBRBEd-0fNU76fYmlA" name="other" type="_17RLRhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLWRRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RLWhRBEd-0fNU76fYmlA" annotatedElement="_17RLWRRBEd-0fNU76fYmlA">
                <body>// Create a copy of this feature value.&#xD;
&#xD;
FeatureValue newValue = new FeatureValue();&#xD;
&#xD;
newValue.feature = this.feature;&#xD;
newValue.position = this.position;&#xD;
&#xD;
ValueList values = this.values;&#xD;
for (int i = 0; i &lt; values.size(); i ++) {&#xD;
    Value value = values.getValue(i);&#xD;
    newValue.values.addValue(value.copy());&#xD;
}&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLWxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLRhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLXBRBEd-0fNU76fYmlA" name="ExtensionalValue" isAbstract="true">
            <ownedComment xmi:id="_17RLXRRBEd-0fNU76fYmlA" annotatedElement="_17RLXBRBEd-0fNU76fYmlA">
              <body>An extensional value is a data value that is part of the extent of some classifier at a specific locus.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RLXhRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RLXxRBEd-0fNU76fYmlA" general="_17RLrRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RLYBRBEd-0fNU76fYmlA" name="locus" type="_17RNZBRBEd-0fNU76fYmlA" association="_17RL_xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RLYRRBEd-0fNU76fYmlA" annotatedElement="_17RLYBRBEd-0fNU76fYmlA">
                <body>The locus of the extent of which this value is a member. (If the value has been destroyed, it has no locus.)</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLYhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLYxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RLZBRBEd-0fNU76fYmlA" name="destroy">
              <ownedComment xmi:id="_17RLZRRBEd-0fNU76fYmlA" annotatedElement="_17RLZBRBEd-0fNU76fYmlA">
                <body>// Remove this value from its locus (if it has not already been destroyed).&#xD;
&#xD;
if (this.locus != null) {&#xD;
    this.locus.remove(this);&#xD;
}</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLZhRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RLZxRBEd-0fNU76fYmlA" annotatedElement="_17RLZhRBEd-0fNU76fYmlA">
                <body>// Create a new extensional value with the same feature values at the same locus as this one.&#xD;
&#xD;
ExtensionalValue newValue = (ExtensionalValue)(super.copy());&#xD;
&#xD;
if (this.locus != null) {&#xD;
    this.locus.add(newValue);&#xD;
}&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLaBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLaRRBEd-0fNU76fYmlA" name="Evaluation" isAbstract="true">
            <ownedComment xmi:id="_17RLahRBEd-0fNU76fYmlA" annotatedElement="_17RLaRRBEd-0fNU76fYmlA">
              <body>An evaluation is used to evaluate a value specification to produce a value.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RLaxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RLbBRBEd-0fNU76fYmlA" general="_17RNXhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RLbRRBEd-0fNU76fYmlA" name="specification" type="_17RO0RRBEd-0fNU76fYmlA" association="_17RL9xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RLbhRBEd-0fNU76fYmlA" annotatedElement="_17RLbRRBEd-0fNU76fYmlA">
                <body>The value specification to be evaluated.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLbxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLcBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RLcRRBEd-0fNU76fYmlA" name="locus" type="_17RNZBRBEd-0fNU76fYmlA" association="_17RL-xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RLchRBEd-0fNU76fYmlA" annotatedElement="_17RLcRRBEd-0fNU76fYmlA">
                <body>The locus at which this evaluation is taking place.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLcxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLdBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RLdRRBEd-0fNU76fYmlA" name="evaluate" isAbstract="true" isQuery="true">
              <ownedComment xmi:id="_17RLdhRBEd-0fNU76fYmlA" annotatedElement="_17RLdRRBEd-0fNU76fYmlA">
                <body>Evaluate the specification, returning the resulting value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLdxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLeBRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLeRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLehRBEd-0fNU76fYmlA" name="EnumerationValue">
            <ownedComment xmi:id="_17RLexRBEd-0fNU76fYmlA" annotatedElement="_17RLehRBEd-0fNU76fYmlA">
              <body>An enumeration value is a value whose (single) type is an enumeration. &#xD;
It's literal must be an owned literal of it's type.&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:id="_17RLfBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RLfRRBEd-0fNU76fYmlA" general="_17RKJhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RLfhRBEd-0fNU76fYmlA" name="literal" type="_17RRgRRBEd-0fNU76fYmlA" association="_17RL8xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RLfxRBEd-0fNU76fYmlA" annotatedElement="_17RLfhRBEd-0fNU76fYmlA">
                <body>The literal value of this enumeration value.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLgBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLgRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RLghRBEd-0fNU76fYmlA" name="type" type="_17RRdRRBEd-0fNU76fYmlA" association="_17RL7xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLgxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLhBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RLhRRBEd-0fNU76fYmlA" name="specify">
              <ownedComment xmi:id="_17RLhhRBEd-0fNU76fYmlA" annotatedElement="_17RLhRRBEd-0fNU76fYmlA">
                <body>// Return an instance value with literal as the instance.&#xD;
&#xD;
InstanceValue instanceValue = new InstanceValue();&#xD;
InstanceSpecification instance = new InstanceSpecification();&#xD;
&#xD;
instanceValue.type = this.type;&#xD;
instanceValue.instance = this.literal;&#xD;
&#xD;
return instanceValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLhxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RO0RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLiBRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RLiRRBEd-0fNU76fYmlA" annotatedElement="_17RLiBRBEd-0fNU76fYmlA">
                <body>// Test if this enumeration value is equal to the otherValue. &#xD;
// To be equal, the otherValue must also be an enumeration value with the same literal as this enumeration value.&#xD;
&#xD;
boolean isEqual = false;&#xD;
if (otherValue instanceof EnumerationValue) {&#xD;
    isEqual = ((EnumerationValue)otherValue).literal == this.literal;&#xD;
}&#xD;
&#xD;
return isEqual;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLihRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RLixRBEd-0fNU76fYmlA" name="otherValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLjBRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RLjRRBEd-0fNU76fYmlA" annotatedElement="_17RLjBRBEd-0fNU76fYmlA">
                <body>// Create a new enumeration value with the same literal as this enumeration value.&#xD;
&#xD;
EnumerationValue newValue = (EnumerationValue)(super.copy());&#xD;
&#xD;
newValue.type = this.type;&#xD;
newValue.literal = this.literal;&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLjhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLjxRBEd-0fNU76fYmlA" name="new_" visibility="protected">
              <ownedComment xmi:id="_17RLkBRBEd-0fNU76fYmlA" annotatedElement="_17RLjxRBEd-0fNU76fYmlA">
                <body>// Create a new enumeration value with no literal.&#xD;
&#xD;
return new EnumerationValue();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLkRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLkhRBEd-0fNU76fYmlA" name="getTypes">
              <ownedComment xmi:id="_17RLkxRBEd-0fNU76fYmlA" annotatedElement="_17RLkhRBEd-0fNU76fYmlA">
                <body>// Return the single type of this enumeration value.&#xD;
&#xD;
ClassifierList types = new ClassifierList();&#xD;
types.addValue(this.type);&#xD;
&#xD;
return types;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLlBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRHRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLlRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLlhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLlxRBEd-0fNU76fYmlA" name="toString">
              <ownedComment xmi:id="_17RLmBRBEd-0fNU76fYmlA" annotatedElement="_17RLlxRBEd-0fNU76fYmlA">
                <body>return literal.name;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLmRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLmhRBEd-0fNU76fYmlA" name="DataValue">
            <ownedComment xmi:id="_17RLmxRBEd-0fNU76fYmlA" annotatedElement="_17RLmhRBEd-0fNU76fYmlA">
              <body>A data value is a compund value whose (single) type is a data type other than a primitive type or an enumeration.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RLnBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RLnRRBEd-0fNU76fYmlA" general="_17RLrRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RLnhRBEd-0fNU76fYmlA" name="type" type="_17RRWxRBEd-0fNU76fYmlA" association="_17RL6xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RLnxRBEd-0fNU76fYmlA" annotatedElement="_17RLnhRBEd-0fNU76fYmlA">
                <body>The type of this data value. This must not be a primitive or an enumeration.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLoBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLoRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RLohRBEd-0fNU76fYmlA" name="getTypes">
              <ownedComment xmi:id="_17RLoxRBEd-0fNU76fYmlA" annotatedElement="_17RLohRBEd-0fNU76fYmlA">
                <body>// Return the single type of this data value.&#xD;
&#xD;
ClassifierList types = new ClassifierList();&#xD;
types.addValue(this.type);&#xD;
&#xD;
return types;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLpBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRHRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLpRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLphRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLpxRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RLqBRBEd-0fNU76fYmlA" annotatedElement="_17RLpxRBEd-0fNU76fYmlA">
                <body>// Create a new data value with the same type and feature values as this data value.&#xD;
&#xD;
DataValue newValue = (DataValue)(super.copy());&#xD;
&#xD;
newValue.type = this.type;&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLqRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLqhRBEd-0fNU76fYmlA" name="new_" visibility="protected">
              <ownedComment xmi:id="_17RLqxRBEd-0fNU76fYmlA" annotatedElement="_17RLqhRBEd-0fNU76fYmlA">
                <body>// Create a new data value with no type or feature values.&#xD;
&#xD;
return new DataValue();</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLrBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RLrRRBEd-0fNU76fYmlA" name="CompoundValue" isAbstract="true">
            <ownedComment xmi:id="_17RLrhRBEd-0fNU76fYmlA" annotatedElement="_17RLrRRBEd-0fNU76fYmlA">
              <body>A compound value is a structured value with by-value semantics. Values are associated with each structural feature specified by the type(s) of the compound value.&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:id="_17RLrxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RLsBRBEd-0fNU76fYmlA" general="_17RJ9RRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RLsRRBEd-0fNU76fYmlA" name="featureValues" type="_17RLRhRBEd-0fNU76fYmlA" aggregation="composite" association="_17RL6RRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLshRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLsxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RLtBRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RLtRRBEd-0fNU76fYmlA" annotatedElement="_17RLtBRBEd-0fNU76fYmlA">
                <body>// Test if this data value is equal to the otherValue. &#xD;
// To be equal, the otherValue must also be a compund value with the same types and equal values for each feature.&#xD;
&#xD;
// Debug.println(&quot;[equals] othervalue instanceof CompoundValue = &quot; + (otherValue instanceof CompoundValue));&#xD;
// Debug.println(&quot;[equals] super.equals(otherValue) = &quot; + super.equals(otherValue));&#xD;
&#xD;
boolean isEqual = otherValue instanceof CompoundValue;&#xD;
&#xD;
 if (isEqual) {&#xD;
&#xD;
    CompoundValue otherCompoundValue = (CompoundValue)otherValue;&#xD;
    // Debug.println(&quot;[equals] &quot; + this.featureValues.size() + &quot; feature(s).&quot;);&#xD;
&#xD;
    isEqual = super.equals(otherValue) &amp; otherCompoundValue.featureValues.size() == this.featureValues.size();&#xD;
 &#xD;
    int i = 1;&#xD;
    while (isEqual &amp; i &lt;= this.featureValues.size()) {&#xD;
        FeatureValue thisFeatureValue = this.featureValues.getValue(i-1);&#xD;
&#xD;
        boolean matched = false;&#xD;
        int j = 1;&#xD;
        while (!matched &amp; j &lt;= otherCompoundValue.featureValues.size()) {&#xD;
            FeatureValue otherFeatureValue = otherCompoundValue.featureValues.getValue(j-1);&#xD;
            if (thisFeatureValue.feature == otherFeatureValue.feature) {&#xD;
                matched = thisFeatureValue.hasEqualValues(otherFeatureValue);&#xD;
            }&#xD;
            j = j + 1;&#xD;
        }&#xD;
&#xD;
        isEqual = matched;&#xD;
        i = i + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
return isEqual;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLthRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RLtxRBEd-0fNU76fYmlA" name="otherValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLuBRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RLuRRBEd-0fNU76fYmlA" annotatedElement="_17RLuBRBEd-0fNU76fYmlA">
                <body>// Create a new data value with the same featureValues as this data value.&#xD;
&#xD;
CompoundValue newValue = (CompoundValue)(super.copy());&#xD;
&#xD;
FeatureValueList featureValues = this.featureValues;&#xD;
for (int i = 0; i &lt; featureValues.size(); i++) {&#xD;
    FeatureValue featureValue = featureValues.getValue(i);&#xD;
    newValue.featureValues.addValue(featureValue.copy());&#xD;
}&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLuhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLuxRBEd-0fNU76fYmlA" name="getFeatureValue">
              <ownedComment xmi:id="_17RLvBRBEd-0fNU76fYmlA" annotatedElement="_17RLuxRBEd-0fNU76fYmlA">
                <body>// Get the value(s) of the member of featureValues for the given feature.&#xD;
&#xD;
FeatureValue featureValue = null;&#xD;
int i = 1; &#xD;
while (featureValue == null &amp; i &lt;= this.featureValues.size()) {&#xD;
    if (this.featureValues.getValue(i-1).feature == feature) {&#xD;
        featureValue = this.featureValues.getValue(i-1);&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return featureValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLvRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLRhRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RLvhRBEd-0fNU76fYmlA" name="feature" type="_17RO1BRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLvxRBEd-0fNU76fYmlA" name="setFeatureValue">
              <ownedComment xmi:id="_17RLwBRBEd-0fNU76fYmlA" annotatedElement="_17RLvxRBEd-0fNU76fYmlA">
                <body>// Set the value(s) of the member of featureValues for the given feature.&#xD;
&#xD;
FeatureValue featureValue = this.getFeatureValue(feature);&#xD;
&#xD;
if (featureValue == null) {&#xD;
    featureValue = new FeatureValue();&#xD;
    this.featureValues.addValue(featureValue);&#xD;
}&#xD;
&#xD;
featureValue.feature = feature;&#xD;
featureValue.values = values;&#xD;
featureValue.position = position;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLwRRBEd-0fNU76fYmlA" name="feature" type="_17RO1BRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RLwhRBEd-0fNU76fYmlA" name="values" type="_17RKJhRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLwxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLxBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RLxRRBEd-0fNU76fYmlA" name="position">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLxhRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLxxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLyBRBEd-0fNU76fYmlA" name="getFeatureValues">
              <ownedComment xmi:id="_17RLyRRBEd-0fNU76fYmlA" annotatedElement="_17RLyBRBEd-0fNU76fYmlA">
                <body>// Return the feature values for this compound value.&#xD;
&#xD;
return this.featureValues;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLyhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLRhRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RLyxRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RLzBRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RLzRRBEd-0fNU76fYmlA" name="removeFeatureValues">
              <ownedComment xmi:id="_17RLzhRBEd-0fNU76fYmlA" annotatedElement="_17RLzRRBEd-0fNU76fYmlA">
                <body>// Remove all feature values for features whose type is the given classifier.&#xD;
&#xD;
int i = 1;&#xD;
while (i &lt;= this.featureValues.size()) {&#xD;
    if (this.featureValues.getValue(i-1).feature.typedElement.type == classifier) {&#xD;
        this.featureValues.remove(i-1);&#xD;
    }&#xD;
    else {&#xD;
        i = i + 1;&#xD;
    }&#xD;
}&#xD;
    </body>
              </ownedComment>
              <ownedParameter xmi:id="_17RLzxRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RL0BRBEd-0fNU76fYmlA" name="toString">
              <ownedComment xmi:id="_17RL0RRBEd-0fNU76fYmlA" annotatedElement="_17RL0BRBEd-0fNU76fYmlA">
                <body>String buffer = &quot;(&quot; + this.objectId() + &quot;:&quot;;&#xD;
&#xD;
ClassifierList types = this.getTypes();&#xD;
&#xD;
int i = 1;&#xD;
while (i &lt;= types.size()) {&#xD;
    buffer = buffer +&quot; &quot; + types.getValue(i-1).name;&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
int k = 1;&#xD;
while (k &lt;= this.featureValues.size()) {&#xD;
    FeatureValue featureValue = this.featureValues.getValue(k-1);&#xD;
    buffer = buffer + &quot;\n\t\t&quot; +  featureValue.feature.name + &quot;[&quot; + featureValue.position + &quot;]  =&quot;;&#xD;
&#xD;
    int j = 1;&#xD;
    while (j &lt;= featureValue.values.size()) {&#xD;
         buffer = buffer + &quot; &quot; + featureValue.values.getValue(j-1).toString();&#xD;
        j = j + 1;&#xD;
    }&#xD;
&#xD;
    k = k + 1;&#xD;
}&#xD;
&#xD;
return buffer + &quot;)&quot;;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RL0hRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RL0xRBEd-0fNU76fYmlA" name="BooleanValue">
            <ownedComment xmi:id="_17RL1BRBEd-0fNU76fYmlA" annotatedElement="_17RL0xRBEd-0fNU76fYmlA">
              <body>A boolean value is a primitive value whose type is Boolean.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RL1RRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RL1hRBEd-0fNU76fYmlA" general="_17RKlxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RL1xRBEd-0fNU76fYmlA" name="value">
              <ownedComment xmi:id="_17RL2BRBEd-0fNU76fYmlA" annotatedElement="_17RL1xRBEd-0fNU76fYmlA">
                <body>The actual Boolean value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RL2RRBEd-0fNU76fYmlA" name="specify">
              <ownedComment xmi:id="_17RL2hRBEd-0fNU76fYmlA" annotatedElement="_17RL2RRBEd-0fNU76fYmlA">
                <body>// Return a literal boolean with the value of this boolean value.&#xD;
&#xD;
LiteralBoolean literal = new LiteralBoolean();&#xD;
&#xD;
literal.type = this.type;&#xD;
literal.value = this.value;&#xD;
&#xD;
return literal;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RL2xRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RO0RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RL3BRBEd-0fNU76fYmlA" name="equals">
              <ownedComment xmi:id="_17RL3RRBEd-0fNU76fYmlA" annotatedElement="_17RL3BRBEd-0fNU76fYmlA">
                <body>// Test if this boolean value is equal to the otherValue. &#xD;
// To be equal, the otherValue must have the same value as this boolean value.&#xD;
&#xD;
boolean isEqual = false;&#xD;
if (otherValue instanceof BooleanValue) {&#xD;
    isEqual = ((BooleanValue)otherValue).value == this.value;&#xD;
}&#xD;
&#xD;
return isEqual;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RL3hRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RL3xRBEd-0fNU76fYmlA" name="otherValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RL4BRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RL4RRBEd-0fNU76fYmlA" annotatedElement="_17RL4BRBEd-0fNU76fYmlA">
                <body>// Create a new boolean value with the same value as this boolean value.&#xD;
&#xD;
BooleanValue newValue = (BooleanValue)(super.copy());&#xD;
&#xD;
newValue.value = this.value;&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RL4hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RL4xRBEd-0fNU76fYmlA" name="new_" visibility="protected">
              <ownedComment xmi:id="_17RL5BRBEd-0fNU76fYmlA" annotatedElement="_17RL4xRBEd-0fNU76fYmlA">
                <body>// Return a new boolean value with no value.&#xD;
&#xD;
return new BooleanValue();</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RL5RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RL5hRBEd-0fNU76fYmlA" name="toString">
              <ownedComment xmi:id="_17RL5xRBEd-0fNU76fYmlA" annotatedElement="_17RL5hRBEd-0fNU76fYmlA">
                <body>String stringValue = &quot;false&quot;;&#xD;
&#xD;
if (this.value) {&#xD;
  stringValue = &quot;true&quot;;&#xD;
}&#xD;
&#xD;
return stringValue;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RL6BRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RL6RRBEd-0fNU76fYmlA" name="A_featureValues_compoundValue" memberEnd="_17RLsRRBEd-0fNU76fYmlA _17RL6hRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RL6hRBEd-0fNU76fYmlA" visibility="private" type="_17RLrRRBEd-0fNU76fYmlA" association="_17RL6RRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RL6xRBEd-0fNU76fYmlA" name="A_type_dataValue" memberEnd="_17RLnhRBEd-0fNU76fYmlA _17RL7BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RL7BRBEd-0fNU76fYmlA" visibility="private" type="_17RLmhRBEd-0fNU76fYmlA" association="_17RL6xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RL7RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RL7hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RL7xRBEd-0fNU76fYmlA" name="A_type_enumerationValue" memberEnd="_17RLghRBEd-0fNU76fYmlA _17RL8BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RL8BRBEd-0fNU76fYmlA" visibility="private" type="_17RLehRBEd-0fNU76fYmlA" association="_17RL7xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RL8RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RL8hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RL8xRBEd-0fNU76fYmlA" name="A_literal_enumerationValue" memberEnd="_17RLfhRBEd-0fNU76fYmlA _17RL9BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RL9BRBEd-0fNU76fYmlA" visibility="private" type="_17RLehRBEd-0fNU76fYmlA" association="_17RL8xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RL9RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RL9hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RL9xRBEd-0fNU76fYmlA" name="A_specification_evaluation" memberEnd="_17RLbRRBEd-0fNU76fYmlA _17RL-BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RL-BRBEd-0fNU76fYmlA" visibility="private" type="_17RLaRRBEd-0fNU76fYmlA" association="_17RL9xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RL-RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RL-hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RL-xRBEd-0fNU76fYmlA" name="A_locus_evaluation" memberEnd="_17RLcRRBEd-0fNU76fYmlA _17RL_BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RL_BRBEd-0fNU76fYmlA" visibility="private" type="_17RLaRRBEd-0fNU76fYmlA" association="_17RL-xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RL_RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RL_hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RL_xRBEd-0fNU76fYmlA" name="A_locus_extensionalValues" memberEnd="_17RLYBRBEd-0fNU76fYmlA _17RNbxRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMABRBEd-0fNU76fYmlA" name="A_values_featureValue" memberEnd="_17RLTRRBEd-0fNU76fYmlA _17RMARRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMARRBEd-0fNU76fYmlA" visibility="private" type="_17RLRhRBEd-0fNU76fYmlA" association="_17RMABRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMAhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMAxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMBBRBEd-0fNU76fYmlA" name="A_feature_featureValue" memberEnd="_17RLSRRBEd-0fNU76fYmlA _17RMBRRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMBRRBEd-0fNU76fYmlA" visibility="private" type="_17RLRhRBEd-0fNU76fYmlA" association="_17RMBBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMBhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMBxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMCBRBEd-0fNU76fYmlA" name="A_type_Link" memberEnd="_17RLDRRBEd-0fNU76fYmlA _17RMCRRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMCRRBEd-0fNU76fYmlA" visibility="private" type="_17RLCRRBEd-0fNU76fYmlA" association="_17RMCBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMChRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMCxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMDBRBEd-0fNU76fYmlA" name="A_objectActivation_object" memberEnd="_17RKrhRBEd-0fNU76fYmlA _17RNDRRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMDRRBEd-0fNU76fYmlA" name="A_types_object" memberEnd="_17RKqhRBEd-0fNU76fYmlA _17RMDhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMDhRBEd-0fNU76fYmlA" visibility="private" type="_17RKphRBEd-0fNU76fYmlA" association="_17RMDRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMDxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMEBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMERRBEd-0fNU76fYmlA" name="A_type_primitiveValue" memberEnd="_17RKmxRBEd-0fNU76fYmlA _17RMEhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMEhRBEd-0fNU76fYmlA" visibility="private" type="_17RKlxRBEd-0fNU76fYmlA" association="_17RMERRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMExRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMFBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMFRRBEd-0fNU76fYmlA" name="A_reference_reference" memberEnd="_17RKXxRBEd-0fNU76fYmlA _17RMFhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMFhRBEd-0fNU76fYmlA" visibility="private" type="_17RKWxRBEd-0fNU76fYmlA" association="_17RMFRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMFxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMGBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RMGRRBEd-0fNU76fYmlA" name="DispatchStrategy" isAbstract="true">
            <ownedComment xmi:id="_17RMGhRBEd-0fNU76fYmlA" annotatedElement="_17RMGRRBEd-0fNU76fYmlA">
              <body>A dispatch strategy is a semantic strategy for the polymorphic dispatching of an operation to an execution of a method for that operation.</body>
            </ownedComment>
            <generalization xmi:id="_17RMGxRBEd-0fNU76fYmlA" general="_17RN9RRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RMHBRBEd-0fNU76fYmlA" name="getName">
              <ownedComment xmi:id="_17RMHRRBEd-0fNU76fYmlA">
                <body>// Dispatch strategies are always named &quot;dispatch&quot;.&#xD;
&#xD;
return &quot;dispatch&quot;;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMHhRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMHxRBEd-0fNU76fYmlA" name="dispatch">
              <ownedComment xmi:id="_17RMIBRBEd-0fNU76fYmlA">
                <body>// Get the behavior for the given operation as determined by the type(s) of the given object, compile the behavior at the locus of the object, and return the resulting execution object.&#xD;
&#xD;
return object.locus.factory.createExecution(this.getMethod(object,operation), object);</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMIRRBEd-0fNU76fYmlA" name="object" type="_17RKphRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RMIhRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RMIxRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RMWhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMJBRBEd-0fNU76fYmlA" name="getMethod" isAbstract="true">
              <ownedComment xmi:id="_17RMJRRBEd-0fNU76fYmlA" annotatedElement="_17RMJBRBEd-0fNU76fYmlA">
                <body>// Get the method that corresponds to the given operation for the given object.</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMJhRBEd-0fNU76fYmlA" name="object" type="_17RKphRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RMJxRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RMKBRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17ROTBRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RMKRRBEd-0fNU76fYmlA" name="RedefinitionBasedDispatchStrategy">
            <ownedComment xmi:id="_17RMKhRBEd-0fNU76fYmlA" annotatedElement="_17RMKRRBEd-0fNU76fYmlA">
              <body>A redefinition-based dispatch strategy is one that requires:&#xD;
- each non-abstract operation to have exactly one method &#xD;
- an overriding subclass operation to explicitly redefine the overridden superclass operation.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RMKxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RMLBRBEd-0fNU76fYmlA" general="_17RMGRRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RMLRRBEd-0fNU76fYmlA" name="getMethod">
              <ownedComment xmi:id="_17RMLhRBEd-0fNU76fYmlA" annotatedElement="_17RMLRRBEd-0fNU76fYmlA">
                <body>// Get the method that corresponds to the given operation for the given object.&#xD;
// [If there is more than one type with a method for the operation, then the first one is arbitrarily chosen.]&#xD;
&#xD;
Behavior method = null;&#xD;
int i = 1;&#xD;
while (method == null &amp; i &lt;= object.types.size()) {&#xD;
    Class_ type = object.types.getValue(i-1);&#xD;
    NamedElementList members = type.member;&#xD;
    int j = 1;&#xD;
    while (method == null &amp; j &lt;= members.size()) {&#xD;
        NamedElement member = members.getValue(j-1);&#xD;
        if (member instanceof Operation) {&#xD;
            Operation memberOperation = (Operation)member;&#xD;
            if (this.operationsMatch(memberOperation, operation)) {&#xD;
                method = memberOperation.method.getValue(0);&#xD;
            }&#xD;
        }&#xD;
        j = j + 1;&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return method;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMLxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17ROTBRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RMMBRBEd-0fNU76fYmlA" name="object" type="_17RKphRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RMMRRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMMhRBEd-0fNU76fYmlA" name="operationsMatch">
              <ownedComment xmi:id="_17RMMxRBEd-0fNU76fYmlA" annotatedElement="_17RMMhRBEd-0fNU76fYmlA">
                <body>// Check if the owned operation is equal to or a redefinition (directly or indirectly) of the base operation.&#xD;
&#xD;
boolean matches = false;&#xD;
if (ownedOperation == baseOperation) {&#xD;
    matches = true;&#xD;
} else {&#xD;
    int i = 1;&#xD;
    while (!matches &amp; i &lt;= ownedOperation.redefinedOperation.size()) {&#xD;
        matches = this.operationsMatch(ownedOperation.redefinedOperation.getValue(i-1), baseOperation);&#xD;
        i = i + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
return matches;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMNBRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RMNRRBEd-0fNU76fYmlA" name="ownedOperation" type="_17RP6RRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RMNhRBEd-0fNU76fYmlA" name="baseOperation" type="_17RP6RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RMNxRBEd-0fNU76fYmlA" name="CommonBehaviors">
        <packagedElement xmi:type="uml:Package" xmi:id="_17RMOBRBEd-0fNU76fYmlA" name="BasicBehaviors">
          <packageImport xmi:id="_17RMORRBEd-0fNU76fYmlA" importedPackage="_17RJ5RRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RMOhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RMOxRBEd-0fNU76fYmlA" key="imports"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17RMPBRBEd-0fNU76fYmlA" importedPackage="_17ROHRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RMPRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RMPhRBEd-0fNU76fYmlA" key="imports"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RMPxRBEd-0fNU76fYmlA" name="ParameterValue">
            <ownedComment xmi:id="_17RMQBRBEd-0fNU76fYmlA" annotatedElement="_17RMPxRBEd-0fNU76fYmlA">
              <body>A parameter value gives the value(s) for a specific parameter.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RMQRRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:id="_17RMQhRBEd-0fNU76fYmlA" name="parameter" type="_17RQQhRBEd-0fNU76fYmlA" association="_17RMhRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMQxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMRBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RMRRRBEd-0fNU76fYmlA" name="values" type="_17RKJhRBEd-0fNU76fYmlA" aggregation="composite" association="_17RMiRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RMRhRBEd-0fNU76fYmlA" annotatedElement="_17RMRRRBEd-0fNU76fYmlA">
                <body>The values of for the parameter. Zero or more values are possible, as constrained by the multiplicity of the parameter.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMRxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMSBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RMSRRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RMShRBEd-0fNU76fYmlA" annotatedElement="_17RMSRRBEd-0fNU76fYmlA">
                <body>// Create a new parameter value for the same parameter as this parameter value, but with copies of the values of this parameter value.&#xD;
&#xD;
ParameterValue newValue = new ParameterValue();&#xD;
&#xD;
newValue.parameter = this.parameter;&#xD;
&#xD;
ValueList values = this.values;&#xD;
for (int i = 0; i &lt; values.size(); i++) {&#xD;
    Value value = values.getValue(i);&#xD;
    newValue.values.addValue(value.copy());&#xD;
}&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMSxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMPxRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RMTBRBEd-0fNU76fYmlA" name="OpaqueBehaviorExecution" isAbstract="true">
            <ownedComment xmi:id="_17RMTRRBEd-0fNU76fYmlA" annotatedElement="_17RMTBRBEd-0fNU76fYmlA">
              <body>An opaque execution is an execution for an opaque behavior. &#xD;
Opaque behaviors are used to define primitive behaviors.&#xD;
The actual definition of the primitive behavior should be given in a concrete subclass of OpaqueBehaviorExecution.&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:id="_17RMThRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RMTxRBEd-0fNU76fYmlA" general="_17RMWhRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RMUBRBEd-0fNU76fYmlA" name="execute">
              <ownedComment xmi:id="_17RMURRBEd-0fNU76fYmlA" annotatedElement="_17RMUBRBEd-0fNU76fYmlA">
                <body>// Execute the body of the opaque behavior.&#xD;
&#xD;
Debug.println(&quot;[execute] Opaque behavior &quot; + this.getBehavior().name + &quot;...&quot;);&#xD;
&#xD;
ParameterList parameters = this.getBehavior().ownedParameter;&#xD;
&#xD;
ParameterValueList inputs = new ParameterValueList();&#xD;
ParameterValueList outputs = new ParameterValueList();&#xD;
&#xD;
for (int i = 0; i &lt; parameters.size(); i++) {&#xD;
    Parameter parameter = parameters.getValue(i);&#xD;
&#xD;
    if ((parameter.direction == ParameterDirectionKind.in) |&#xD;
        (parameter.direction == ParameterDirectionKind.inout)) {&#xD;
        inputs.addValue(this.getParameterValue(parameter));&#xD;
    }&#xD;
&#xD;
    if ((parameter.direction == ParameterDirectionKind.inout) |&#xD;
        (parameter.direction == ParameterDirectionKind.out) |&#xD;
        (parameter.direction == ParameterDirectionKind.return_)) {&#xD;
        ParameterValue parameterValue = new ParameterValue();&#xD;
        parameterValue.parameter = parameter;&#xD;
        this.setParameterValue(parameterValue);&#xD;
        outputs.addValue(parameterValue);&#xD;
    }&#xD;
}&#xD;
&#xD;
this.doBody(inputs, outputs);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMUhRBEd-0fNU76fYmlA" name="doBody" isAbstract="true">
              <ownedComment xmi:id="_17RMUxRBEd-0fNU76fYmlA" annotatedElement="_17RMUhRBEd-0fNU76fYmlA">
                <body>The actual definition of the behavior of an Opaque Behavior should be given in a concrete subclass that defines this operation.&#xD;
The values of the inputParameters are set when the operation is called.&#xD;
The values of the outputParmeters should be set during the execution of the operation.</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMVBRBEd-0fNU76fYmlA" name="inputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMVRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMVhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RMVxRBEd-0fNU76fYmlA" name="outputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMWBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMWRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RMWhRBEd-0fNU76fYmlA" name="Execution" isAbstract="true">
            <ownedComment xmi:id="_17RMWxRBEd-0fNU76fYmlA" annotatedElement="_17RMWhRBEd-0fNU76fYmlA">
              <body>An execution is used to execute a specific behavior. Since a behavior is a kind of class, an execution is an object with the behavior as its type.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RMXBRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RMXRRBEd-0fNU76fYmlA" general="_17RKphRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RMXhRBEd-0fNU76fYmlA" name="context" type="_17RKphRBEd-0fNU76fYmlA" association="_17RMfxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RMXxRBEd-0fNU76fYmlA" annotatedElement="_17RMXhRBEd-0fNU76fYmlA">
                <body>The object that provides the context for this execution. &#xD;
The type of the context of the execution must be the context of the type (behavior) of the execution.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMYBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMYRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RMYhRBEd-0fNU76fYmlA" name="parameterValues" type="_17RMPxRBEd-0fNU76fYmlA" aggregation="composite" association="_17RMgxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RMYxRBEd-0fNU76fYmlA" annotatedElement="_17RMYhRBEd-0fNU76fYmlA">
                <body>The parameterValues for this execution. All parameterValues must have a parameter that is a parameter of the type of this execution.&#xD;
The values of all input (in and in-out) parameters must be set before the execution is executed.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMZBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMZRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RMZhRBEd-0fNU76fYmlA" name="execute" isAbstract="true">
              <ownedComment xmi:id="_17RMZxRBEd-0fNU76fYmlA" annotatedElement="_17RMZhRBEd-0fNU76fYmlA">
                <body>Execute the behavior given by the type of this execution. &#xD;
The parameterValues for any input (in or in-out) parameters of the behavior should be set before the execution.&#xD;
The parameteValues for any output (in-out, out or return) parameters of the behavior will be set by the execution.&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMaBRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17RMaRRBEd-0fNU76fYmlA" annotatedElement="_17RMaBRBEd-0fNU76fYmlA">
                <body>// Terminate an ongoing execution. By default, do nothing.&#xD;
&#xD;
return;&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMahRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RMaxRBEd-0fNU76fYmlA" annotatedElement="_17RMahRBEd-0fNU76fYmlA">
                <body>// Create a new execution that has the same behavior and parameterValues as this execution.&#xD;
&#xD;
// Debug.println(&quot;[Copy] execution = &quot; + this);&#xD;
&#xD;
Execution newValue = (Execution)(super.copy());&#xD;
&#xD;
newValue.context = this.context;&#xD;
&#xD;
ParameterValueList parameterValues = this.parameterValues;&#xD;
for (int i = 0; i &lt; parameterValues.size(); i++) {&#xD;
    ParameterValue parameterValue = parameterValues.getValue(i);&#xD;
    newValue.parameterValues.addValue(parameterValue.copy());&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[Copy] Done.&quot;);&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMbBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMbRRBEd-0fNU76fYmlA" name="new_" isAbstract="true">
              <ownedComment xmi:id="_17RMbhRBEd-0fNU76fYmlA" annotatedElement="_17RMbRRBEd-0fNU76fYmlA">
                <body>Create a new execution with no behavior or parameterValues.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMbxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMcBRBEd-0fNU76fYmlA" name="setParameterValue">
              <ownedComment xmi:id="_17RMcRRBEd-0fNU76fYmlA" annotatedElement="_17RMcBRBEd-0fNU76fYmlA">
                <body>// Set the given parameter value for this execution.&#xD;
// If a parameter value already existed for the parameter of the given parameter value, then replace its value.&#xD;
&#xD;
// Debug.println(&quot;[setParameterValue] parameter = &quot; + parameterValue.parameter.name + &quot; with &quot; + parameterValue.values.size() + &quot; values&quot;);&#xD;
&#xD;
ParameterValue existingParameterValue = this.getParameterValue(parameterValue.parameter);&#xD;
&#xD;
if (existingParameterValue == null) {&#xD;
    this.parameterValues.addValue(parameterValue);&#xD;
}&#xD;
else {&#xD;
    existingParameterValue.values = parameterValue.values;&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMchRBEd-0fNU76fYmlA" name="parameterValue" type="_17RMPxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMcxRBEd-0fNU76fYmlA" name="getParameterValue">
              <ownedComment xmi:id="_17RMdBRBEd-0fNU76fYmlA" annotatedElement="_17RMcxRBEd-0fNU76fYmlA">
                <body>// Get the parameter value of this execution corresponding to the given parameter (if any).&#xD;
&#xD;
ParameterValue parameterValue = null;&#xD;
int i = 1;&#xD;
while (parameterValue == null &amp; i &lt;= this.parameterValues.size()) {&#xD;
    if (this.parameterValues.getValue(i-1).parameter == parameter) {&#xD;
        parameterValue = this.parameterValues.getValue(i-1);&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return parameterValue;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMdRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMPxRBEd-0fNU76fYmlA" direction="return"/>
              <ownedParameter xmi:id="_17RMdhRBEd-0fNU76fYmlA" name="parameter" type="_17RQQhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMdxRBEd-0fNU76fYmlA" name="getOutputParameterValues">
              <ownedComment xmi:id="_17RMeBRBEd-0fNU76fYmlA" annotatedElement="_17RMdxRBEd-0fNU76fYmlA">
                <body>// Return the parameter values for output (in-out, out and return) parameters.&#xD;
&#xD;
ParameterValueList outputs = new ParameterValueList();&#xD;
ParameterValueList parameterValues = this.parameterValues;&#xD;
for (int i = 0; i &lt; parameterValues.size(); i++) {&#xD;
    ParameterValue parameterValue = parameterValues.getValue(i);&#xD;
    Parameter parameter = parameterValue.parameter;&#xD;
    if ((parameter.direction == ParameterDirectionKind.inout) |&#xD;
        (parameter.direction == ParameterDirectionKind.out) |&#xD;
        (parameter.direction == ParameterDirectionKind.return_)) {&#xD;
        outputs.addValue(parameterValue);&#xD;
    }&#xD;
}&#xD;
&#xD;
return outputs;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMeRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMPxRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMehRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMexRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMfBRBEd-0fNU76fYmlA" name="getBehavior">
              <ownedComment xmi:id="_17RMfRRBEd-0fNU76fYmlA" annotatedElement="_17RMfBRBEd-0fNU76fYmlA">
                <body>// Get the behavior that is the type of this execution.&#xD;
&#xD;
return (Behavior)(this.getTypes().getValue(0));</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMfhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17ROTBRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMfxRBEd-0fNU76fYmlA" name="A_context_execution" memberEnd="_17RMXhRBEd-0fNU76fYmlA _17RMgBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMgBRBEd-0fNU76fYmlA" visibility="private" type="_17RMWhRBEd-0fNU76fYmlA" association="_17RMfxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMgRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMghRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMgxRBEd-0fNU76fYmlA" name="A_parameterValues_execution" memberEnd="_17RMYhRBEd-0fNU76fYmlA _17RMhBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMhBRBEd-0fNU76fYmlA" visibility="private" type="_17RMWhRBEd-0fNU76fYmlA" association="_17RMgxRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMhRRBEd-0fNU76fYmlA" name="A_parameter_parameterValue" memberEnd="_17RMQhRBEd-0fNU76fYmlA _17RMhhRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMhhRBEd-0fNU76fYmlA" visibility="private" type="_17RMPxRBEd-0fNU76fYmlA" association="_17RMhRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMhxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMiBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RMiRRBEd-0fNU76fYmlA" name="A_values_parameterValue" memberEnd="_17RMRRRBEd-0fNU76fYmlA _17RMihRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RMihRBEd-0fNU76fYmlA" visibility="private" type="_17RMPxRBEd-0fNU76fYmlA" association="_17RMiRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMixRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMjBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17RMjRRBEd-0fNU76fYmlA" name="Communications">
          <packageImport xmi:id="_17RMjhRBEd-0fNU76fYmlA" importedPackage="_17RMOBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RMjxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RMkBRBEd-0fNU76fYmlA" key="imports"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17RMkRRBEd-0fNU76fYmlA" importedPackage="_17ROgxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RMkhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RMkxRBEd-0fNU76fYmlA" key="imports"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Activity" xmi:id="_17RMlBRBEd-0fNU76fYmlA" name="ClassifierBehaviorExecutionActivity">
            <ownedBehavior xmi:type="uml:Activity" xmi:id="_17RMlRRBEd-0fNU76fYmlA" name="OwnedBehaviorActivity1"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_17RMlhRBEd-0fNU76fYmlA" name="Call _startBehavior" outgoing="_17RMoBRBEd-0fNU76fYmlA" operation="_17RM6hRBEd-0fNU76fYmlA">
              <target xmi:id="_17RMlxRBEd-0fNU76fYmlA" incoming="_17RMoxRBEd-0fNU76fYmlA" type="_17RM0xRBEd-0fNU76fYmlA">
                <upperBound xmi:type="uml:LiteralInteger" xmi:id="_17RMmBRBEd-0fNU76fYmlA" value="1024"/>
              </target>
            </node>
            <node xmi:type="uml:ActivityFinalNode" xmi:id="_17RMmRRBEd-0fNU76fYmlA" incoming="_17RMoBRBEd-0fNU76fYmlA"/>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_17RMmhRBEd-0fNU76fYmlA" name="ReadSelf" incoming="_17RMnRRBEd-0fNU76fYmlA">
              <result xmi:id="_17RMmxRBEd-0fNU76fYmlA" outgoing="_17RMoxRBEd-0fNU76fYmlA"/>
            </node>
            <node xmi:type="uml:InitialNode" xmi:id="_17RMnBRBEd-0fNU76fYmlA" outgoing="_17RMnRRBEd-0fNU76fYmlA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_17RMnRRBEd-0fNU76fYmlA" source="_17RMnBRBEd-0fNU76fYmlA" target="_17RMmhRBEd-0fNU76fYmlA">
              <guard xmi:type="uml:OpaqueExpression" xmi:id="_17RMnhRBEd-0fNU76fYmlA">
                <body></body>
              </guard>
              <weight xmi:type="uml:LiteralInteger" xmi:id="_17RMnxRBEd-0fNU76fYmlA" value="1"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_17RMoBRBEd-0fNU76fYmlA" source="_17RMlhRBEd-0fNU76fYmlA" target="_17RMmRRBEd-0fNU76fYmlA">
              <guard xmi:type="uml:OpaqueExpression" xmi:id="_17RMoRRBEd-0fNU76fYmlA">
                <body></body>
              </guard>
              <weight xmi:type="uml:LiteralInteger" xmi:id="_17RMohRBEd-0fNU76fYmlA" value="1"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_17RMoxRBEd-0fNU76fYmlA" source="_17RMmxRBEd-0fNU76fYmlA" target="_17RMlxRBEd-0fNU76fYmlA">
              <guard xmi:type="uml:OpaqueExpression" xmi:id="_17RMpBRBEd-0fNU76fYmlA">
                <body></body>
              </guard>
              <weight xmi:type="uml:LiteralInteger" xmi:id="_17RMpRRBEd-0fNU76fYmlA" value="1"/>
            </edge>
          </packagedElement>
          <packagedElement xmi:type="uml:Activity" xmi:id="_17RMphRBEd-0fNU76fYmlA" name="EventDispatchLoop">
            <node xmi:type="uml:InitialNode" xmi:id="_17RMpxRBEd-0fNU76fYmlA" outgoing="_17RMwBRBEd-0fNU76fYmlA"/>
            <node xmi:type="uml:CallOperationAction" xmi:id="_17RMqBRBEd-0fNU76fYmlA" name="Call _send" outgoing="_17RMtxRBEd-0fNU76fYmlA" operation="_17RNKRRBEd-0fNU76fYmlA">
              <argument xmi:id="_17RMqRRBEd-0fNU76fYmlA" name="signal" incoming="_17RMwxRBEd-0fNU76fYmlA" type="_17RM7BRBEd-0fNU76fYmlA" ordering="unordered">
                <eAnnotations xmi:id="_17RMqhRBEd-0fNU76fYmlA" source="Parameter" references="_17RNKxRBEd-0fNU76fYmlA"/>
                <upperBound xmi:type="uml:LiteralInteger" xmi:id="_17RMqxRBEd-0fNU76fYmlA" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RMrBRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RMrRRBEd-0fNU76fYmlA" value="1"/>
              </argument>
              <target xmi:id="_17RMrhRBEd-0fNU76fYmlA" incoming="_17RMuhRBEd-0fNU76fYmlA" type="_17RM_hRBEd-0fNU76fYmlA">
                <upperBound xmi:type="uml:LiteralInteger" xmi:id="_17RMrxRBEd-0fNU76fYmlA" value="1024"/>
              </target>
            </node>
            <node xmi:type="uml:ReadSelfAction" xmi:id="_17RMsBRBEd-0fNU76fYmlA" name="ReadSelf" incoming="_17RMvRRBEd-0fNU76fYmlA">
              <result xmi:id="_17RMsRRBEd-0fNU76fYmlA" outgoing="_17RMuhRBEd-0fNU76fYmlA" type="_17RM_hRBEd-0fNU76fYmlA"/>
            </node>
            <node xmi:type="uml:AcceptEventAction" xmi:id="_17RMshRBEd-0fNU76fYmlA" name="Accept Arrival Signal" outgoing="_17RMvRRBEd-0fNU76fYmlA" incoming="_17RMxhRBEd-0fNU76fYmlA">
              <result xmi:id="_17RMsxRBEd-0fNU76fYmlA" outgoing="_17RMwxRBEd-0fNU76fYmlA" type="_17RM7BRBEd-0fNU76fYmlA">
                <upperBound xmi:type="uml:LiteralInteger" xmi:id="_17RMtBRBEd-0fNU76fYmlA" value="1"/>
              </result>
              <trigger xmi:id="_17RMtRRBEd-0fNU76fYmlA" name="" event="_17RNQhRBEd-0fNU76fYmlA"/>
            </node>
            <node xmi:type="uml:MergeNode" xmi:id="_17RMthRBEd-0fNU76fYmlA" outgoing="_17RMxhRBEd-0fNU76fYmlA" incoming="_17RMwBRBEd-0fNU76fYmlA _17RMtxRBEd-0fNU76fYmlA"/>
            <edge xmi:type="uml:ControlFlow" xmi:id="_17RMtxRBEd-0fNU76fYmlA" source="_17RMqBRBEd-0fNU76fYmlA" target="_17RMthRBEd-0fNU76fYmlA">
              <guard xmi:type="uml:OpaqueExpression" xmi:id="_17RMuBRBEd-0fNU76fYmlA"/>
              <weight xmi:type="uml:LiteralInteger" xmi:id="_17RMuRRBEd-0fNU76fYmlA" value="1"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_17RMuhRBEd-0fNU76fYmlA" source="_17RMsRRBEd-0fNU76fYmlA" target="_17RMrhRBEd-0fNU76fYmlA">
              <guard xmi:type="uml:OpaqueExpression" xmi:id="_17RMuxRBEd-0fNU76fYmlA">
                <body></body>
              </guard>
              <weight xmi:type="uml:LiteralInteger" xmi:id="_17RMvBRBEd-0fNU76fYmlA" value="1"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_17RMvRRBEd-0fNU76fYmlA" source="_17RMshRBEd-0fNU76fYmlA" target="_17RMsBRBEd-0fNU76fYmlA">
              <guard xmi:type="uml:OpaqueExpression" xmi:id="_17RMvhRBEd-0fNU76fYmlA">
                <body></body>
              </guard>
              <weight xmi:type="uml:LiteralInteger" xmi:id="_17RMvxRBEd-0fNU76fYmlA" value="1"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_17RMwBRBEd-0fNU76fYmlA" source="_17RMpxRBEd-0fNU76fYmlA" target="_17RMthRBEd-0fNU76fYmlA">
              <guard xmi:type="uml:OpaqueExpression" xmi:id="_17RMwRRBEd-0fNU76fYmlA">
                <body></body>
              </guard>
              <weight xmi:type="uml:LiteralInteger" xmi:id="_17RMwhRBEd-0fNU76fYmlA" value="1"/>
            </edge>
            <edge xmi:type="uml:ObjectFlow" xmi:id="_17RMwxRBEd-0fNU76fYmlA" source="_17RMsxRBEd-0fNU76fYmlA" target="_17RMqRRBEd-0fNU76fYmlA">
              <guard xmi:type="uml:OpaqueExpression" xmi:id="_17RMxBRBEd-0fNU76fYmlA">
                <body></body>
              </guard>
              <weight xmi:type="uml:LiteralInteger" xmi:id="_17RMxRRBEd-0fNU76fYmlA" value="1"/>
            </edge>
            <edge xmi:type="uml:ControlFlow" xmi:id="_17RMxhRBEd-0fNU76fYmlA" source="_17RMthRBEd-0fNU76fYmlA" target="_17RMshRBEd-0fNU76fYmlA">
              <guard xmi:type="uml:OpaqueExpression" xmi:id="_17RMxxRBEd-0fNU76fYmlA">
                <body></body>
              </guard>
              <weight xmi:type="uml:LiteralInteger" xmi:id="_17RMyBRBEd-0fNU76fYmlA" value="1"/>
            </edge>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RMyRRBEd-0fNU76fYmlA" name="EventAccepter" isAbstract="true">
            <ownedComment xmi:id="_17RMyhRBEd-0fNU76fYmlA" annotatedElement="_17RMyRRBEd-0fNU76fYmlA">
              <body>An event accepter handles signal reception events.&#xD;
This is an abstract class intended to provide a common interface for different kinds of event accepters.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RMyxRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedOperation xmi:id="_17RMzBRBEd-0fNU76fYmlA" name="accept" isAbstract="true">
              <ownedComment xmi:id="_17RMzRRBEd-0fNU76fYmlA" annotatedElement="_17RMzBRBEd-0fNU76fYmlA">
                <body>Accept a signal occurance for the given signal instance.</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RMzhRBEd-0fNU76fYmlA" name="signalInstance" type="_17RM7RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RMzxRBEd-0fNU76fYmlA" name="match" isAbstract="true">
              <ownedComment xmi:id="_17RM0BRBEd-0fNU76fYmlA" annotatedElement="_17RMzxRBEd-0fNU76fYmlA">
                <body>Determine if the given signal instance matches a trigger of this event accepter.</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RM0RRBEd-0fNU76fYmlA" name="signalInstance" type="_17RM7RRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RM0hRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RM0xRBEd-0fNU76fYmlA" name="ClassifierBehaviorExecution" isActive="true">
            <ownedComment xmi:id="_17RM1BRBEd-0fNU76fYmlA" annotatedElement="_17RM0xRBEd-0fNU76fYmlA">
              <body>A classifier behavior execution executes the classifier behavior from a specific active class. </body>
            </ownedComment>
            <ownedComment xmi:id="_17RM1RRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:id="_17RM1hRBEd-0fNU76fYmlA" name="execution" type="_17RMWhRBEd-0fNU76fYmlA" association="_17RNPhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RM1xRBEd-0fNU76fYmlA" annotatedElement="_17RM1hRBEd-0fNU76fYmlA">
                <body>The execution of the associated classifier behavior for a certain object.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RM2BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RM2RRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RM2hRBEd-0fNU76fYmlA" name="classifier" type="_17RQ2RRBEd-0fNU76fYmlA" association="_17RNOhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RM2xRBEd-0fNU76fYmlA" annotatedElement="_17RM2hRBEd-0fNU76fYmlA">
                <body>The classifier whose behavior is being executed. (This must be an active class.)</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RM3BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RM3RRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RM3hRBEd-0fNU76fYmlA" name="objectActivation" type="_17RM_hRBEd-0fNU76fYmlA" association="_17RNLRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RM3xRBEd-0fNU76fYmlA" annotatedElement="_17RM3hRBEd-0fNU76fYmlA">
                <body>The object activation that owns this classifier behavior execution.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RM4BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RM4RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RM4hRBEd-0fNU76fYmlA" name="execute">
              <ownedComment xmi:id="_17RM4xRBEd-0fNU76fYmlA" annotatedElement="_17RM4hRBEd-0fNU76fYmlA">
                <body>// Set the classifier for this classifier behavior execution to the given class.&#xD;
// If the given class is a behavior, set the execution to be the object of the object activation of the classifier behavior execution.&#xD;
// Otherwise the class must be an active class, so get an execution object for the classifier behavior for the class.&#xD;
// Set the input parameters for the execution to the given values.&#xD;
// Then start the active behavior of this ClassifierBehaviorExecution object, which will execute the execution object on a separate thread of control.&#xD;
&#xD;
// Debug.println(&quot;[execute] Executing behavior for &quot; + classifier.name + &quot;...&quot;);&#xD;
&#xD;
this.classifier = classifier;&#xD;
Object_ object = this.objectActivation.object;&#xD;
&#xD;
if (classifier instanceof Behavior) {&#xD;
    this.execution = (Execution)object;&#xD;
} else {&#xD;
    this.execution = object.locus.factory.createExecution(classifier.classifierBehavior, object);&#xD;
}&#xD;
&#xD;
if (inputs != null) {&#xD;
    for (int i = 0; i &lt; inputs.size(); i++) {&#xD;
        ParameterValue input = inputs.getValue(i);&#xD;
        this.execution.setParameterValue(input);&#xD;
    }&#xD;
}&#xD;
&#xD;
_startObjectBehavior();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RM5BRBEd-0fNU76fYmlA" name="classifier" type="_17RQ2RRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RM5RRBEd-0fNU76fYmlA" name="inputs" type="_17RMPxRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RM5hRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RM5xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RM6BRBEd-0fNU76fYmlA" name="terminate">
              <ownedComment xmi:id="_17RM6RRBEd-0fNU76fYmlA" annotatedElement="_17RM6BRBEd-0fNU76fYmlA">
                <body>// Terminate the associated execution.&#xD;
// If the execution is not itself the object of the object activation, then destroy it.&#xD;
&#xD;
//Debug.println(&quot;[terminate] Terminating behavior for &quot; + classifier.name + &quot;...&quot;);&#xD;
&#xD;
this.execution.terminate();&#xD;
&#xD;
if (this.execution != this.objectActivation.object) {&#xD;
    this.execution.destroy();&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RM6hRBEd-0fNU76fYmlA" name="_startObjectBehavior">
              <ownedComment xmi:id="_17RM6xRBEd-0fNU76fYmlA">
                <body>// *** This should start the asynchronous ClassifierBehaviorExecutionActivity to do the following. ***&#xD;
this.execution.execute();</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Signal" xmi:id="_17RM7BRBEd-0fNU76fYmlA" name="ArrivalSignal"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RM7RRBEd-0fNU76fYmlA" name="SignalInstance">
            <ownedComment xmi:id="_17RM7hRBEd-0fNU76fYmlA">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:id="_17RM7xRBEd-0fNU76fYmlA" general="_17RLrRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RM8BRBEd-0fNU76fYmlA" name="type" type="_17ROkRRBEd-0fNU76fYmlA" association="_17RNNhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RM8RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RM8hRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RM8xRBEd-0fNU76fYmlA" name="getTypes">
              <ownedComment xmi:id="_17RM9BRBEd-0fNU76fYmlA" annotatedElement="_17RM8xRBEd-0fNU76fYmlA">
                <body>// Return the single type of this signal instance.&#xD;
&#xD;
ClassifierList types = new ClassifierList();&#xD;
&#xD;
types.addValue(this.type);&#xD;
&#xD;
return types;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RM9RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRHRRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RM9hRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RM9xRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RM-BRBEd-0fNU76fYmlA" name="new_">
              <ownedComment xmi:id="_17RM-RRBEd-0fNU76fYmlA" annotatedElement="_17RM-BRBEd-0fNU76fYmlA">
                <body>// Create a new signal instance with no type or feature values.&#xD;
&#xD;
return new SignalInstance();</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RM-hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RM-xRBEd-0fNU76fYmlA" name="copy">
              <ownedComment xmi:id="_17RM_BRBEd-0fNU76fYmlA" annotatedElement="_17RM-xRBEd-0fNU76fYmlA">
                <body>// Create a new signal instance with the same type and feature values as this signal instance.&#xD;
&#xD;
SignalInstance newValue = (SignalInstance)(super.copy());&#xD;
&#xD;
newValue.type = this.type;&#xD;
&#xD;
return newValue;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RM_RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RM_hRBEd-0fNU76fYmlA" name="ObjectActivation" isActive="true">
            <ownedComment xmi:id="_17RM_xRBEd-0fNU76fYmlA" annotatedElement="_17RM_hRBEd-0fNU76fYmlA">
              <body>An object activation handles the active behavior of an active object.</body>
            </ownedComment>
            <ownedComment xmi:id="_17RNABRBEd-0fNU76fYmlA">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:id="_17RNARRBEd-0fNU76fYmlA" name="classifierBehaviorExecutions" type="_17RM0xRBEd-0fNU76fYmlA" aggregation="composite" association="_17RNLRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RNAhRBEd-0fNU76fYmlA" annotatedElement="_17RNARRBEd-0fNU76fYmlA">
                <body>The executing classifier behaviors for this object activation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNAxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNBBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RNBRRBEd-0fNU76fYmlA" name="waitingEventAccepters" visibility="public" type="_17RMyRRBEd-0fNU76fYmlA" association="_17RNLhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RNBhRBEd-0fNU76fYmlA" annotatedElement="_17RNBRRBEd-0fNU76fYmlA">
                <body>The set of event accepters waiting for signals to be received by the object of this object activation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNBxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNCBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RNCRRBEd-0fNU76fYmlA" name="eventPool" type="_17RM7RRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RNMhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RNChRBEd-0fNU76fYmlA" annotatedElement="_17RNCRRBEd-0fNU76fYmlA">
                <body>The pool of signals sent to the object of this object activation, pending dispatching as events.&#xD;
(All the data values in the pool must be signal instances -- that is, they must have a single type that is a signal.)</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNCxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNDBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RNDRRBEd-0fNU76fYmlA" name="object" type="_17RKphRBEd-0fNU76fYmlA" association="_17RMDBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RNDhRBEd-0fNU76fYmlA" annotatedElement="_17RNDRRBEd-0fNU76fYmlA">
                <body>The object whose active behavior is being handled by this active object.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RNDxRBEd-0fNU76fYmlA" name="startBehavior">
              <ownedComment xmi:id="_17RNEBRBEd-0fNU76fYmlA" annotatedElement="_17RNDxRBEd-0fNU76fYmlA">
                <body>// Start the event dispatch loop for this object activation (if it has not already been started).&#xD;
// If a classifier is given that is a type of the object of this object activation and there is not already a classifier behavior execution for it, &#xD;
//     then create a classifier behavior execution for it.&#xD;
// Otherwise, create a classifier behavior execution for each of the types of the object of this object activation which has a classifier behavior or which is a behavior itself &#xD;
//     and for which there is not currently a classifier behavior execution.&#xD;
&#xD;
// Start EventDispatchLoop&#xD;
_startObjectBehavior();&#xD;
&#xD;
if (classifier == null) {&#xD;
    Debug.println(&quot;[startBehavior] Starting behavior for all classifiers...&quot;);&#xD;
    // *** Start all classifier behaviors concurrently. ***&#xD;
    Class_List types = this.object.types;&#xD;
    for (Iterator i = types.iterator(); i.hasNext();) {&#xD;
        Class_ type = (Class_)i.next();&#xD;
        if (type instanceof Behavior | type.classifierBehavior != null) {&#xD;
            this.startBehavior(type, new ParameterValueList());&#xD;
        }&#xD;
    }&#xD;
}&#xD;
else {&#xD;
    Debug.println(&quot;[startBehavior] Starting behavior for &quot; + classifier.name + &quot;...&quot;);&#xD;
&#xD;
    boolean notYetStarted = true;&#xD;
    int i = 1;&#xD;
    while (notYetStarted &amp; i &lt;= this.classifierBehaviorExecutions.size()) {&#xD;
        notYetStarted = (this.classifierBehaviorExecutions.getValue(i-1).classifier != classifier);&#xD;
        i = i + 1;&#xD;
    }&#xD;
&#xD;
    if (notYetStarted) {&#xD;
        ClassifierBehaviorExecution newExecution = new ClassifierBehaviorExecution();&#xD;
        newExecution.objectActivation = this;&#xD;
        this.classifierBehaviorExecutions.addValue(newExecution);&#xD;
        newExecution.execute(classifier, inputs);&#xD;
    }&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RNERRBEd-0fNU76fYmlA" name="classifier" type="_17RQ2RRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNEhRBEd-0fNU76fYmlA" value="1"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNExRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RNFBRBEd-0fNU76fYmlA" name="inputs" type="_17RMPxRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNFRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNFhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RNFxRBEd-0fNU76fYmlA" name="stop">
              <ownedComment xmi:id="_17RNGBRBEd-0fNU76fYmlA" annotatedElement="_17RNFxRBEd-0fNU76fYmlA">
                <body>// Stop this object activation by terminating all classifier behavior executions.&#xD;
&#xD;
ClassifierBehaviorExecutionList classifierBehaviorExecutions = this.classifierBehaviorExecutions;&#xD;
for (int i = 0; i &lt; classifierBehaviorExecutions.size(); i++) {&#xD;
    ClassifierBehaviorExecution classifierBehaviorExecution = classifierBehaviorExecutions.getValue(i);&#xD;
    classifierBehaviorExecution.terminate();&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RNGRRBEd-0fNU76fYmlA" name="register">
              <ownedComment xmi:id="_17RNGhRBEd-0fNU76fYmlA" annotatedElement="_17RNGRRBEd-0fNU76fYmlA">
                <body>// Register the given event accepter to wait for a dispatched signal event.&#xD;
&#xD;
Debug.println(&quot;[register] object = &quot; + this.object);&#xD;
Debug.println(&quot;[register] accepter = &quot; + accepter);&#xD;
&#xD;
this.waitingEventAccepters.addValue(accepter);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RNGxRBEd-0fNU76fYmlA" name="accepter" type="_17RMyRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RNHBRBEd-0fNU76fYmlA" name="unregister">
              <ownedComment xmi:id="_17RNHRRBEd-0fNU76fYmlA">
                <body>// Remove the given event accepter for the list of waiting event accepters.&#xD;
&#xD;
Debug.println(&quot;[unregister] object = &quot; + this.object);&#xD;
Debug.println(&quot;[unregister] accepter = &quot; + accepter);&#xD;
&#xD;
boolean notFound = true;&#xD;
int i = 1;&#xD;
while (notFound &amp; i &lt;= this.waitingEventAccepters.size()) {&#xD;
    if (this.waitingEventAccepters.getValue(i-1) == accepter) {&#xD;
        this.waitingEventAccepters.remove(i-1);&#xD;
        notFound = false;&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RNHhRBEd-0fNU76fYmlA" name="accepter" type="_17RMyRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RNHxRBEd-0fNU76fYmlA" name="send">
              <ownedComment xmi:id="_17RNIBRBEd-0fNU76fYmlA" annotatedElement="_17RNHxRBEd-0fNU76fYmlA">
                <body>// Add the given signal instance to the event pool and signal that a new signal instance has arrived.&#xD;
&#xD;
this.eventPool.addValue((SignalInstance)(signalInstance.copy()));&#xD;
_send(new ArrivalSignal());&#xD;
&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RNIRRBEd-0fNU76fYmlA" name="signalInstance" type="_17RM7RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RNIhRBEd-0fNU76fYmlA" name="dispatchNextEvent">
              <ownedComment xmi:id="_17RNIxRBEd-0fNU76fYmlA" annotatedElement="_17RNIhRBEd-0fNU76fYmlA">
                <body>// Get the next signal instance out of the event pool.&#xD;
// If there is one or more waiting event accepters with triggers that match the signal instance, then dispatch it to exactly one of those waiting accepters.&#xD;
&#xD;
if (this.eventPool.size() > 0) {&#xD;
    SignalInstance signalInstance = this.getNextEvent();&#xD;
&#xD;
    Debug.println(&quot;[dispatchNextEvent] signalInstance = &quot; + signalInstance);&#xD;
&#xD;
    intList matchingEventAccepterIndexes = new intList();&#xD;
    EventAccepterList waitingEventAccepters = this.waitingEventAccepters;&#xD;
    for (int i = 0; i &lt; waitingEventAccepters.size(); i++) {&#xD;
        EventAccepter eventAccepter = waitingEventAccepters.getValue(i);&#xD;
        if (eventAccepter.match(signalInstance)) {&#xD;
            matchingEventAccepterIndexes.addValue(i);&#xD;
        }&#xD;
    }&#xD;
&#xD;
    if (matchingEventAccepterIndexes.size() > 0) {&#xD;
        // *** Choose one matching event accepter non-deterministically. ***&#xD;
        int j = ((ChoiceStrategy)this.object.locus.factory.getStrategy(&quot;choice&quot;)).choose(matchingEventAccepterIndexes.size());&#xD;
        EventAccepter selectedEventAccepter = this.waitingEventAccepters.getValue(j-1);&#xD;
        this.waitingEventAccepters.removeValue(j-1);&#xD;
        selectedEventAccepter.accept(signalInstance);&#xD;
    }&#xD;
}&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RNJBRBEd-0fNU76fYmlA" name="getNextEvent">
              <ownedComment xmi:id="_17RNJRRBEd-0fNU76fYmlA">
                <body>// Get the next event from the event pool, using a get next event strategy.&#xD;
&#xD;
return ((GetNextEventStrategy)this.object.locus.factory.getStrategy(&quot;getNextEvent&quot;)).getNextEvent(this);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RNJhRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RM7RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RNJxRBEd-0fNU76fYmlA" name="_startObjectBehavior">
              <ownedComment xmi:id="_17RNKBRBEd-0fNU76fYmlA">
                <body>// *** This should start the EventDispatchLoop ***&#xD;
&#xD;
return;</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RNKRRBEd-0fNU76fYmlA" name="_send">
              <ownedComment xmi:id="_17RNKhRBEd-0fNU76fYmlA">
                <body>// Signal the arrival of a new signal instance in the event pool.&#xD;
&#xD;
// *** This should send an ArrivalSignal to the EventDispatchLoop to do the following asynchronously. ***&#xD;
this.dispatchNextEvent();&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RNKxRBEd-0fNU76fYmlA" name="signal" type="_17RM7BRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedReception xmi:id="_17RNLBRBEd-0fNU76fYmlA" signal="_17RM7BRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RNLRRBEd-0fNU76fYmlA" name="A_classifierBehaviorExecutions_objectActivation" memberEnd="_17RNARRBEd-0fNU76fYmlA _17RM3hRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RNLhRBEd-0fNU76fYmlA" name="A_waitingEventAcceptors_objectActivation" memberEnd="_17RNBRRBEd-0fNU76fYmlA _17RNLxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RNLxRBEd-0fNU76fYmlA" visibility="private" type="_17RM_hRBEd-0fNU76fYmlA" association="_17RNLhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNMBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNMRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RNMhRBEd-0fNU76fYmlA" name="A_eventPool_objectActivation" memberEnd="_17RNCRRBEd-0fNU76fYmlA _17RNMxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RNMxRBEd-0fNU76fYmlA" visibility="private" type="_17RM_hRBEd-0fNU76fYmlA" association="_17RNMhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNNBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNNRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RNNhRBEd-0fNU76fYmlA" name="A_type_signalInstance" memberEnd="_17RM8BRBEd-0fNU76fYmlA _17RNNxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RNNxRBEd-0fNU76fYmlA" visibility="private" type="_17RM7RRBEd-0fNU76fYmlA" association="_17RNNhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNOBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNORRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RNOhRBEd-0fNU76fYmlA" name="A_classifier_classifierBehaviorExecution" memberEnd="_17RM2hRBEd-0fNU76fYmlA _17RNOxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RNOxRBEd-0fNU76fYmlA" visibility="private" type="_17RM0xRBEd-0fNU76fYmlA" association="_17RNOhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNPBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNPRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RNPhRBEd-0fNU76fYmlA" name="A_execution_classifierBehaviorExecution" memberEnd="_17RM1hRBEd-0fNU76fYmlA _17RNPxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RNPxRBEd-0fNU76fYmlA" visibility="private" type="_17RM0xRBEd-0fNU76fYmlA" association="_17RNPhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNQBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNQRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:SignalEvent" xmi:id="_17RNQhRBEd-0fNU76fYmlA" name="ArrivalSignalEvent" signal="_17RM7BRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RNQxRBEd-0fNU76fYmlA" name="GetNextEventStrategy" isAbstract="true">
            <ownedComment xmi:id="_17RNRBRBEd-0fNU76fYmlA" annotatedElement="_17RNQxRBEd-0fNU76fYmlA">
              <body>A get next event strategy is a semantic strategy that determines the order in which signal instances are retrieved from the event pool of an object activation.</body>
            </ownedComment>
            <generalization xmi:id="_17RNRRRBEd-0fNU76fYmlA" general="_17RN9RRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RNRhRBEd-0fNU76fYmlA" name="getName">
              <ownedComment xmi:id="_17RNRxRBEd-0fNU76fYmlA">
                <body>// Get next event strategies are always named &quot;getNextEvent&quot;.&#xD;
&#xD;
return &quot;getNextEvent&quot;;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RNSBRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RNSRRBEd-0fNU76fYmlA" name="getNextEvent" isAbstract="true">
              <ownedComment xmi:id="_17RNShRBEd-0fNU76fYmlA" annotatedElement="_17RNSRRBEd-0fNU76fYmlA">
                <body>Get the next event from the event pool of the given object activation. The event is removed from the pool.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RNSxRBEd-0fNU76fYmlA" name="objectActivation" type="_17RM_hRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RNTBRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RM7RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RNTRRBEd-0fNU76fYmlA" name="FIFOGetNextEventStrategy">
            <ownedComment xmi:id="_17RNThRBEd-0fNU76fYmlA" annotatedElement="_17RNTRRBEd-0fNU76fYmlA">
              <body>A FIFO get next event strategy gets events in first-in first-out order.</body>
            </ownedComment>
            <generalization xmi:id="_17RNTxRBEd-0fNU76fYmlA" general="_17RNQxRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RNUBRBEd-0fNU76fYmlA" name="getNextEvent">
              <ownedComment xmi:id="_17RNURRBEd-0fNU76fYmlA">
                <body>// Get the first event from the given event pool. The event is removed from the pool.&#xD;
&#xD;
SignalInstance signalInstance = objectActivation.eventPool.getValue(0);&#xD;
objectActivation.eventPool.removeValue(0);&#xD;
return signalInstance;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RNUhRBEd-0fNU76fYmlA" name="objectActivation" type="_17RM_hRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RNUxRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RM7RRBEd-0fNU76fYmlA" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RNVBRBEd-0fNU76fYmlA" name="Loci">
        <packageImport xmi:id="_17RNVRRBEd-0fNU76fYmlA" importedPackage="_17RJ5RRBEd-0fNU76fYmlA">
          <eAnnotations xmi:id="_17RNVhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_17RNVxRBEd-0fNU76fYmlA" key="import"/>
          </eAnnotations>
        </packageImport>
        <packageImport xmi:id="_17RNWBRBEd-0fNU76fYmlA" importedPackage="_17ROzRRBEd-0fNU76fYmlA">
          <eAnnotations xmi:id="_17RNWRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_17RNWhRBEd-0fNU76fYmlA" key="import"/>
          </eAnnotations>
        </packageImport>
        <packageImport xmi:id="_17RNWxRBEd-0fNU76fYmlA" importedPackage="_17ROHRRBEd-0fNU76fYmlA">
          <eAnnotations xmi:id="_17RNXBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_17RNXRRBEd-0fNU76fYmlA" key="import"/>
          </eAnnotations>
        </packageImport>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RNXhRBEd-0fNU76fYmlA" name="SemanticVisitor" isAbstract="true">
          <ownedComment xmi:id="_17RNXxRBEd-0fNU76fYmlA" annotatedElement="_17RNXhRBEd-0fNU76fYmlA">
            <body>The common base class for semantic visitor classes.</body>
          </ownedComment>
          <ownedOperation xmi:id="_17RNYBRBEd-0fNU76fYmlA" name="_endIsolation" isStatic="true">
            <ownedComment xmi:id="_17RNYRRBEd-0fNU76fYmlA">
              <body>Debug.println(&quot;[_endIsolation] End isolation.&quot;);&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNYhRBEd-0fNU76fYmlA" name="_beginIsolation" isStatic="true">
            <ownedComment xmi:id="_17RNYxRBEd-0fNU76fYmlA">
              <body>Debug.println(&quot;[_beginIsolation] Begin isolation.&quot;);&#xD;
</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RNZBRBEd-0fNU76fYmlA" name="Locus">
          <ownedComment xmi:id="_17RNZRRBEd-0fNU76fYmlA" annotatedElement="_17RNZBRBEd-0fNU76fYmlA">
            <body>A locus is a place at which extensional values (objects or links) can exist. The extent of a class or association is the set of objects or links of that type that exist at a certain locus.&#xD;
A locus also has an executor and a factory associated with it, used to execute behaviors as a result of requests dispatched to objects at the locus.</body>
          </ownedComment>
          <ownedComment xmi:id="_17RNZhRBEd-0fNU76fYmlA">
            <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedAttribute xmi:id="_17RNZxRBEd-0fNU76fYmlA" name="executor" type="_17RNjhRBEd-0fNU76fYmlA" aggregation="composite" association="_17RN8xRBEd-0fNU76fYmlA">
            <ownedComment xmi:id="_17RNaBRBEd-0fNU76fYmlA" annotatedElement="_17RNZxRBEd-0fNU76fYmlA">
              <body>The executor to be used at this locus.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNaRRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNahRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_17RNaxRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA" aggregation="composite" association="_17RN9BRBEd-0fNU76fYmlA">
            <ownedComment xmi:id="_17RNbBRBEd-0fNU76fYmlA" annotatedElement="_17RNaxRBEd-0fNU76fYmlA">
              <body>The factory to be used at this locus.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNbRRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNbhRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_17RNbxRBEd-0fNU76fYmlA" name="extensionalValues" type="_17RLXBRBEd-0fNU76fYmlA" aggregation="composite" association="_17RL_xRBEd-0fNU76fYmlA">
            <ownedComment xmi:id="_17RNcBRBEd-0fNU76fYmlA" annotatedElement="_17RNbxRBEd-0fNU76fYmlA">
              <body>The set of values that are members of classifier extents at this locus.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNcRRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNchRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_17RNcxRBEd-0fNU76fYmlA" name="setExecutor">
            <ownedComment xmi:id="_17RNdBRBEd-0fNU76fYmlA" annotatedElement="_17RNcxRBEd-0fNU76fYmlA">
              <body>// Set the executor for this locus.&#xD;
&#xD;
this.executor = executor;&#xD;
this.executor.locus = this;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNdRRBEd-0fNU76fYmlA" name="executor" type="_17RNjhRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNdhRBEd-0fNU76fYmlA" name="setFactory">
            <ownedComment xmi:id="_17RNdxRBEd-0fNU76fYmlA" annotatedElement="_17RNdhRBEd-0fNU76fYmlA">
              <body>// Set the factory for this locus.&#xD;
&#xD;
this.factory = factory;&#xD;
this.factory.locus = this;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNeBRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNeRRBEd-0fNU76fYmlA" name="getExtent">
            <ownedComment xmi:id="_17RNehRBEd-0fNU76fYmlA" annotatedElement="_17RNeRRBEd-0fNU76fYmlA">
              <body>// Return the set of extensional values at this locus which have the given classifier as a type.&#xD;
&#xD;
ExtensionalValueList extent = new ExtensionalValueList();&#xD;
&#xD;
ExtensionalValueList extensionalValues = this.extensionalValues;&#xD;
for (int i = 0; i &lt; extensionalValues.size(); i++) {&#xD;
    ExtensionalValue value = extensionalValues.getValue(i);&#xD;
    ClassifierList types = value.getTypes();&#xD;
&#xD;
    boolean conforms = false;&#xD;
    int j = 1;&#xD;
    while (!conforms &amp; j &lt;= types.size()) {&#xD;
        conforms = this.conforms(types.getValue(j-1), classifier);&#xD;
        j = j + 1;&#xD;
    }&#xD;
&#xD;
    if (conforms) {&#xD;
        extent.addValue(value);&#xD;
    }&#xD;
}&#xD;
&#xD;
return extent;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNexRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
            <ownedParameter xmi:id="_17RNfBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLXBRBEd-0fNU76fYmlA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNfRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNfhRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNfxRBEd-0fNU76fYmlA" name="add">
            <ownedComment xmi:id="_17RNgBRBEd-0fNU76fYmlA" annotatedElement="_17RNfxRBEd-0fNU76fYmlA">
              <body>// Add the given extensional value to this locus&#xD;
&#xD;
value.locus = this;&#xD;
this.extensionalValues.addValue(value);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNgRRBEd-0fNU76fYmlA" name="value" type="_17RLXBRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNghRBEd-0fNU76fYmlA" name="remove">
            <ownedComment xmi:id="_17RNgxRBEd-0fNU76fYmlA" annotatedElement="_17RNghRBEd-0fNU76fYmlA">
              <body>// Remove the given extensional value from this locus.&#xD;
&#xD;
value.locus = null;&#xD;
&#xD;
boolean notFound = true;&#xD;
int i = 1;&#xD;
while (notFound &amp; i &lt;= this.extensionalValues.size()) {&#xD;
    if (this.extensionalValues.getValue(i-1) == value) {&#xD;
        this.extensionalValues.remove(i-1);&#xD;
        notFound = false;&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNhBRBEd-0fNU76fYmlA" name="value" type="_17RLXBRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNhRRBEd-0fNU76fYmlA" name="instantiate">
            <ownedComment xmi:id="_17RNhhRBEd-0fNU76fYmlA" annotatedElement="_17RNhRRBEd-0fNU76fYmlA">
              <body>// Instantiate the given class at this locus.&#xD;
&#xD;
Object_ object = null;&#xD;
&#xD;
if (type instanceof Behavior) {&#xD;
    object = this.factory.createExecution((Behavior)type, null);&#xD;
}&#xD;
else {&#xD;
    object = new Object_();&#xD;
&#xD;
    object.types.addValue(type);&#xD;
    object.createFeatureValues();&#xD;
    this.add(object);&#xD;
}&#xD;
&#xD;
return object;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNhxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKphRBEd-0fNU76fYmlA" direction="return"/>
            <ownedParameter xmi:id="_17RNiBRBEd-0fNU76fYmlA" name="type" type="_17RQ2RRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNiRRBEd-0fNU76fYmlA" name="conforms">
            <ownedComment xmi:id="_17RNihRBEd-0fNU76fYmlA" annotatedElement="_17RNiRRBEd-0fNU76fYmlA">
              <body>// Test if a type conforms to a given classifier, that is, the type is equal to or a descendant of the classifier.&#xD;
&#xD;
boolean doesConform = false;&#xD;
&#xD;
if (type == classifier) {&#xD;
    doesConform = true;&#xD;
} else {&#xD;
    int i = 1;&#xD;
    while (!doesConform &amp; i &lt;= type.general.size()) {&#xD;
        doesConform = this.conforms(type.general.getValue(i-1), classifier);&#xD;
        i = i + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
return doesConform;&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNixRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RNjBRBEd-0fNU76fYmlA" name="type" type="_17RRHRRBEd-0fNU76fYmlA"/>
            <ownedParameter xmi:id="_17RNjRRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RNjhRBEd-0fNU76fYmlA" name="Executor">
          <ownedComment xmi:id="_17RNjxRBEd-0fNU76fYmlA" annotatedElement="_17RNjhRBEd-0fNU76fYmlA">
            <body>An executor is used to execute behaviors and evaluation value specifications.</body>
          </ownedComment>
          <ownedComment xmi:id="_17RNkBRBEd-0fNU76fYmlA">
            <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedAttribute xmi:id="_17RNkRRBEd-0fNU76fYmlA" name="locus" type="_17RNZBRBEd-0fNU76fYmlA" association="_17RN8xRBEd-0fNU76fYmlA">
            <ownedComment xmi:id="_17RNkhRBEd-0fNU76fYmlA" annotatedElement="_17RNkRRBEd-0fNU76fYmlA">
              <body>The locus at which this executor resides.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNkxRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNlBRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_17RNlRRBEd-0fNU76fYmlA" name="execute">
            <ownedComment xmi:id="_17RNlhRBEd-0fNU76fYmlA" annotatedElement="_17RNlRRBEd-0fNU76fYmlA">
              <body>// Execute the given behavior with the given input values in the given context, producing the given output values. &#xD;
// There must be one input parameter value for each input (in or in-out) parameter of the behavior.&#xD;
// The returned values include one parameter value for each output (in-out, out or return) parameter of the behavior.&#xD;
// The execution instance is destroyed at completion.&#xD;
&#xD;
Execution execution = this.locus.factory.createExecution(behavior, context);&#xD;
&#xD;
for (int i = 0; i &lt; inputs.size(); i++) {&#xD;
    execution.setParameterValue(inputs.getValue(i));&#xD;
}&#xD;
&#xD;
execution.execute();&#xD;
ParameterValueList outputValues = execution.getOutputParameterValues();&#xD;
execution.destroy();&#xD;
&#xD;
return outputValues;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNlxRBEd-0fNU76fYmlA" name="behavior" type="_17ROTBRBEd-0fNU76fYmlA"/>
            <ownedParameter xmi:id="_17RNmBRBEd-0fNU76fYmlA" name="context" type="_17RKphRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNmRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNmhRBEd-0fNU76fYmlA"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RNmxRBEd-0fNU76fYmlA" name="inputs" type="_17RMPxRBEd-0fNU76fYmlA" isOrdered="true">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNnBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNnRRBEd-0fNU76fYmlA"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RNnhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMPxRBEd-0fNU76fYmlA" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNnxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNoBRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNoRRBEd-0fNU76fYmlA" name="evaluate">
            <ownedComment xmi:id="_17RNohRBEd-0fNU76fYmlA" annotatedElement="_17RNoRRBEd-0fNU76fYmlA">
              <body>// Evaluate the given value specification, returning the specified value.&#xD;
&#xD;
// Debug.println(&quot;[evaluate] Start...&quot;);&#xD;
return this.locus.factory.createEvaluation(specification).evaluate();&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNoxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
            <ownedParameter xmi:id="_17RNpBRBEd-0fNU76fYmlA" name="specification" type="_17RO0RRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNpRRBEd-0fNU76fYmlA" name="start">
            <ownedComment xmi:id="_17RNphRBEd-0fNU76fYmlA" annotatedElement="_17RNpRRBEd-0fNU76fYmlA">
              <body>// Instantiate the given class and start any behavior of the resulting object.&#xD;
// (The behavior of an object includes any classifier behaviors for an active object or the class of the object itself, if that is a behavior.)&#xD;
&#xD;
Debug.println(&quot;[start] Starting &quot; + type.name + &quot;...&quot;);&#xD;
&#xD;
Object_ object = this.locus.instantiate(type);&#xD;
&#xD;
Debug.println(&quot;[start] Object = &quot; + object);&#xD;
object.startBehavior(type, inputs);&#xD;
&#xD;
Reference reference = new Reference();&#xD;
reference.referent = object;&#xD;
&#xD;
return reference;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNpxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKWxRBEd-0fNU76fYmlA" direction="return"/>
            <ownedParameter xmi:id="_17RNqBRBEd-0fNU76fYmlA" name="type" type="_17RQ2RRBEd-0fNU76fYmlA"/>
            <ownedParameter xmi:id="_17RNqRRBEd-0fNU76fYmlA" name="inputs" type="_17RMPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNqhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNqxRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RNrBRBEd-0fNU76fYmlA" name="ExecutionFactory">
          <ownedComment xmi:id="_17RNrRRBEd-0fNU76fYmlA" annotatedElement="_17RNrBRBEd-0fNU76fYmlA">
            <body> An execution factory is used to create objects that represent the execution of a behavior, the evaluation of a value specification or the activation of an activity node.</body>
          </ownedComment>
          <ownedComment xmi:id="_17RNrhRBEd-0fNU76fYmlA">
            <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
          </ownedComment>
          <ownedAttribute xmi:id="_17RNrxRBEd-0fNU76fYmlA" name="locus" type="_17RNZBRBEd-0fNU76fYmlA" association="_17RN9BRBEd-0fNU76fYmlA">
            <ownedComment xmi:id="_17RNsBRBEd-0fNU76fYmlA" annotatedElement="_17RNrxRBEd-0fNU76fYmlA">
              <body>The locus at which this factory resides.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNsRRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNshRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_17RNsxRBEd-0fNU76fYmlA" name="primitiveBehaviorPrototypes" type="_17RMTBRBEd-0fNU76fYmlA" association="_17RN6xRBEd-0fNU76fYmlA">
            <ownedComment xmi:id="_17RNtBRBEd-0fNU76fYmlA" annotatedElement="_17RNsxRBEd-0fNU76fYmlA">
              <body>The set of opaque behavior executions to be used to execute the primitive behaviors known to the factory.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNtRRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNthRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_17RNtxRBEd-0fNU76fYmlA" name="builtInTypes" type="_17RQYhRBEd-0fNU76fYmlA" association="_17RN7xRBEd-0fNU76fYmlA">
            <ownedComment xmi:id="_17RNuBRBEd-0fNU76fYmlA" annotatedElement="_17RNtxRBEd-0fNU76fYmlA">
              <body>The set of primitive types that have corresponding literal value specifications.&#xD;
Must include Integer, Boolean, String and UnlimitedNatural.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNuRRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNuhRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_17RNuxRBEd-0fNU76fYmlA" name="strategies" visibility="public" type="_17RN9RRBEd-0fNU76fYmlA" association="_17RN-hRBEd-0fNU76fYmlA">
            <ownedComment xmi:id="_17RNvBRBEd-0fNU76fYmlA" annotatedElement="_17RNuxRBEd-0fNU76fYmlA">
              <body>The set of semantic strategies currently registered with this execution factory.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNvRRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNvhRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_17RNvxRBEd-0fNU76fYmlA" name="createExecution">
            <ownedComment xmi:id="_17RNwBRBEd-0fNU76fYmlA" annotatedElement="_17RNvxRBEd-0fNU76fYmlA">
              <body>// Create an execution object for a given behavior. &#xD;
// The execution will take place at the locus of the factory in the given context.&#xD;
// If the context is empty, the execution is assumed to provide its own context.&#xD;
&#xD;
Execution execution;&#xD;
&#xD;
if (behavior instanceof OpaqueBehavior) {&#xD;
    execution = this.instantiateOpaqueBehaviorExecution((OpaqueBehavior)behavior);&#xD;
}&#xD;
else {&#xD;
    execution = (Execution)(this.instantiateVisitor(behavior));&#xD;
    execution.types.addValue(behavior);&#xD;
    execution.createFeatureValues();&#xD;
}&#xD;
&#xD;
this.locus.add(execution);&#xD;
&#xD;
if (context == null) {&#xD;
    execution.context = execution;&#xD;
}&#xD;
else {&#xD;
    execution.context = context;&#xD;
}&#xD;
&#xD;
return execution;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNwRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMWhRBEd-0fNU76fYmlA" direction="return"/>
            <ownedParameter xmi:id="_17RNwhRBEd-0fNU76fYmlA" name="behavior" type="_17ROTBRBEd-0fNU76fYmlA"/>
            <ownedParameter xmi:id="_17RNwxRBEd-0fNU76fYmlA" name="context" type="_17RKphRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RNxBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RNxRRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNxhRBEd-0fNU76fYmlA" name="createEvaluation">
            <ownedComment xmi:id="_17RNxxRBEd-0fNU76fYmlA" annotatedElement="_17RNxhRBEd-0fNU76fYmlA">
              <body>// Create an evaluation object for a given value specification. &#xD;
// The evaluation will take place at the locus of the factory.&#xD;
&#xD;
Evaluation evaluation = (Evaluation)(this.instantiateVisitor(specification));&#xD;
&#xD;
evaluation.specification = specification;&#xD;
evaluation.locus = this.locus;&#xD;
&#xD;
return evaluation;&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNyBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLaRRBEd-0fNU76fYmlA" direction="return"/>
            <ownedParameter xmi:id="_17RNyRRBEd-0fNU76fYmlA" name="specification" type="_17RO0RRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNyhRBEd-0fNU76fYmlA" name="instantiateVisitor" visibility="public">
            <ownedComment xmi:id="_17RNyxRBEd-0fNU76fYmlA" annotatedElement="_17RNyhRBEd-0fNU76fYmlA">
              <body>// Instantiate a visitor object for the given element.&#xD;
&#xD;
SemanticVisitor visitor = null;&#xD;
&#xD;
if (element instanceof fUML.Syntax.Classes.Kernel.LiteralBoolean) {&#xD;
  visitor = new fUML.Semantics.Classes.Kernel.LiteralBooleanEvaluation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Classes.Kernel.LiteralString) {&#xD;
  visitor = new fUML.Semantics.Classes.Kernel.LiteralStringEvaluation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Classes.Kernel.LiteralNull) {&#xD;
  visitor = new fUML.Semantics.Classes.Kernel.LiteralNullEvaluation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Classes.Kernel.InstanceValue) {&#xD;
  visitor = new fUML.Semantics.Classes.Kernel.InstanceValueEvaluation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Classes.Kernel.LiteralUnlimitedNatural) {&#xD;
  visitor = new fUML.Semantics.Classes.Kernel.LiteralUnlimitedNaturalEvaluation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Classes.Kernel.LiteralInteger) {&#xD;
  visitor = new fUML.Semantics.Classes.Kernel.LiteralIntegerEvaluation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.IntermediateActivities.Activity) {&#xD;
  visitor = new fUML.Semantics.Activities.IntermediateActivities.ActivityExecution();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.BasicActions.OutputPin) {&#xD;
  visitor = new fUML.Semantics.Actions.BasicActions.OutputPinActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.BasicActions.InputPin) {&#xD;
  visitor = new fUML.Semantics.Actions.BasicActions.InputPinActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.CompleteActions.StartClassifierBehaviorAction) {&#xD;
  visitor = new fUML.Semantics.Actions.CompleteActions.StartClassifierBehaviorActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.ReadStructuralFeatureAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.ReadStructuralFeatureActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.ReadSelfAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.ReadSelfActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.DestroyLinkAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.DestroyLinkActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.CompleteStructuredActivities.StructuredActivityNode) {&#xD;
  visitor = new fUML.Semantics.Activities.CompleteStructuredActivities.StructuredActivityNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.CompleteStructuredActivities.ConditionalNode) {&#xD;
  visitor = new fUML.Semantics.Activities.CompleteStructuredActivities.ConditionalNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.CompleteStructuredActivities.LoopNode) {&#xD;
  visitor = new fUML.Semantics.Activities.CompleteStructuredActivities.LoopNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.ExtraStructuredActivities.ExpansionNode) {&#xD;
  visitor = new fUML.Semantics.Activities.ExtraStructuredActivities.ExpansionNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.BasicActions.SendSignalAction) {&#xD;
  visitor = new fUML.Semantics.Actions.BasicActions.SendSignalActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.CreateObjectAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.CreateObjectActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.ReadLinkAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.ReadLinkActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.ClearAssociationAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.ClearAssociationActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.IntermediateActivities.JoinNode) {&#xD;
  visitor = new fUML.Semantics.Activities.IntermediateActivities.JoinNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.CompleteActions.ReclassifyObjectAction) {&#xD;
  visitor = new fUML.Semantics.Actions.CompleteActions.ReclassifyObjectActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.IntermediateActivities.InitialNode) {&#xD;
  visitor = new fUML.Semantics.Activities.IntermediateActivities.InitialNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.CompleteActions.StartObjectBehaviorAction) {&#xD;
  visitor = new fUML.Semantics.Actions.CompleteActions.StartObjectBehaviorActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.CompleteActions.ReadIsClassifiedObjectAction) {&#xD;
  visitor = new fUML.Semantics.Actions.CompleteActions.ReadIsClassifiedObjectActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.BasicActions.CallOperationAction) {&#xD;
  visitor = new fUML.Semantics.Actions.BasicActions.CallOperationActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.BasicActions.CallBehaviorAction) {&#xD;
  visitor = new fUML.Semantics.Actions.BasicActions.CallBehaviorActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.ExtraStructuredActivities.ExpansionRegion) {&#xD;
  visitor = new fUML.Semantics.Activities.ExtraStructuredActivities.ExpansionRegionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.AddStructuralFeatureValueAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.AddStructuralFeatureValueActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.IntermediateActivities.ActivityParameterNode) {&#xD;
  visitor = new fUML.Semantics.Activities.IntermediateActivities.ActivityParameterNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.ValueSpecificationAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.ValueSpecificationActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.IntermediateActivities.ActivityFinalNode) {&#xD;
  visitor = new fUML.Semantics.Activities.IntermediateActivities.ActivityFinalNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.IntermediateActivities.ForkNode) {&#xD;
  visitor = new fUML.Semantics.Activities.IntermediateActivities.ForkNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.CompleteActions.AcceptEventAction) {&#xD;
  visitor = new fUML.Semantics.Actions.CompleteActions.AcceptEventActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.IntermediateActivities.DecisionNode) {&#xD;
  visitor = new fUML.Semantics.Activities.IntermediateActivities.DecisionNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.CompleteActions.ReduceAction) {&#xD;
  visitor = new fUML.Semantics.Actions.CompleteActions.ReduceActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.DestroyObjectAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.DestroyObjectActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.ClearStructuralFeatureAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.ClearStructuralFeatureActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.TestIdentityAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.TestIdentityActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.CreateLinkAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.CreateLinkActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.IntermediateActions.RemoveStructuralFeatureValueAction) {&#xD;
  visitor = new fUML.Semantics.Actions.IntermediateActions.RemoveStructuralFeatureValueActionActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Activities.IntermediateActivities.MergeNode) {&#xD;
  visitor = new fUML.Semantics.Activities.IntermediateActivities.MergeNodeActivation();&#xD;
}&#xD;
&#xD;
if (element instanceof fUML.Syntax.Actions.CompleteActions.ReadExtentAction) {&#xD;
  visitor = new fUML.Semantics.Actions.CompleteActions.ReadExtentActionActivation();&#xD;
}&#xD;
&#xD;
return visitor;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RNzBRBEd-0fNU76fYmlA" name="element" type="_17RRZRRBEd-0fNU76fYmlA"/>
            <ownedParameter xmi:id="_17RNzRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RNXhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RNzhRBEd-0fNU76fYmlA" name="instantiateOpaqueBehaviorExecution" visibility="public">
            <ownedComment xmi:id="_17RNzxRBEd-0fNU76fYmlA" annotatedElement="_17RNzhRBEd-0fNU76fYmlA">
              <body>// Return a copy of the prototype for the primitive  behavior execution of the given opaque behavior.&#xD;
&#xD;
OpaqueBehaviorExecution execution = null;&#xD;
int i = 1;&#xD;
while (execution == null &amp; i &lt;= this.primitiveBehaviorPrototypes.size()) {&#xD;
    // Debug.println(&quot;[instantiateOpaqueExecution] Checking &quot; + this.primitiveBehaviorPrototypes.getValue(i).objectId() + &quot;...&quot;);&#xD;
    OpaqueBehaviorExecution prototype = this.primitiveBehaviorPrototypes.getValue(i-1);&#xD;
    if (prototype.getBehavior() == behavior) {&#xD;
        execution = (OpaqueBehaviorExecution)(prototype.copy());&#xD;
   }&#xD;
   i = i + 1;&#xD;
}&#xD;
&#xD;
if (execution == null) {&#xD;
    Debug.println(&quot;[instantiateOpaqueExecution] No prototype execution found for &quot; + behavior.name + &quot;.&quot;);&#xD;
}&#xD;
&#xD;
return execution;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RN0BRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMTBRBEd-0fNU76fYmlA" direction="return"/>
            <ownedParameter xmi:id="_17RN0RRBEd-0fNU76fYmlA" name="behavior" type="_17ROIRRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RN0hRBEd-0fNU76fYmlA" name="addPrimitiveBehaviorPrototype">
            <ownedComment xmi:id="_17RN0xRBEd-0fNU76fYmlA" annotatedElement="_17RN0hRBEd-0fNU76fYmlA">
              <body>// Add an opaque behavior execution to use as a prototype for instantiating the corresponding primitive opaque behavior.&#xD;
// Precondition: No primitive behavior prototype for the type of the given execution should already exist.&#xD;
&#xD;
this.primitiveBehaviorPrototypes.addValue(execution);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RN1BRBEd-0fNU76fYmlA" name="execution" type="_17RMTBRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RN1RRBEd-0fNU76fYmlA" name="addBuiltInType">
            <ownedComment xmi:id="_17RN1hRBEd-0fNU76fYmlA" annotatedElement="_17RN1RRBEd-0fNU76fYmlA">
              <body>// Add the given primitive type as a built-in type.&#xD;
// Precondition: No built-in type with the same name should already exist.&#xD;
&#xD;
this.builtInTypes.addValue(type);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RN1xRBEd-0fNU76fYmlA" name="type" type="_17RQYhRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RN2BRBEd-0fNU76fYmlA" name="getBuiltInType">
            <ownedComment xmi:id="_17RN2RRBEd-0fNU76fYmlA" annotatedElement="_17RN2BRBEd-0fNU76fYmlA">
              <body>// Return the built-in type with the given name.&#xD;
&#xD;
PrimitiveType type = null;&#xD;
int i = 1;&#xD;
while (type == null &amp; i &lt;= this.builtInTypes.size()) {&#xD;
    PrimitiveType primitiveType = this.builtInTypes.getValue(i-1);&#xD;
    if (primitiveType.name.equals(name)) {&#xD;
        type = primitiveType;&#xD;
    }&#xD;
    i = i + 1;&#xD;
}&#xD;
&#xD;
return type;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RN2hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQYhRBEd-0fNU76fYmlA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RN2xRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RN3BRBEd-0fNU76fYmlA"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RN3RRBEd-0fNU76fYmlA" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RN3hRBEd-0fNU76fYmlA" name="setStrategy">
            <ownedComment xmi:id="_17RN3xRBEd-0fNU76fYmlA">
              <body>// Set the strategy for a semantic variation point. Any existing strategy for the same SVP is replaced.&#xD;
&#xD;
int i = this.getStrategyIndex(strategy.getName());&#xD;
&#xD;
if (i &lt;= this.strategies.size()) {&#xD;
    this.strategies.removeValue(i-1);&#xD;
}&#xD;
&#xD;
this.strategies.addValue(strategy);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RN4BRBEd-0fNU76fYmlA" name="strategy" type="_17RN9RRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RN4RRBEd-0fNU76fYmlA" name="getStrategy">
            <ownedComment xmi:id="_17RN4hRBEd-0fNU76fYmlA">
              <body>// Get the strategy with the given name.&#xD;
&#xD;
int i = this.getStrategyIndex(name);&#xD;
&#xD;
SemanticStrategy strategy = null;&#xD;
if (i &lt;= this.strategies.size()) {&#xD;
    strategy = this.strategies.getValue(i-1);&#xD;
}&#xD;
&#xD;
return strategy;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RN4xRBEd-0fNU76fYmlA" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RN5BRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RN9RRBEd-0fNU76fYmlA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RN5RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RN5hRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RN5xRBEd-0fNU76fYmlA" name="getStrategyIndex">
            <ownedComment xmi:id="_17RN6BRBEd-0fNU76fYmlA">
              <body>// Get the index of the strategy with the given name.&#xD;
// If there is no such strategy, return the size of the strategies list.&#xD;
&#xD;
SemanticStrategyList strategies = this.strategies;&#xD;
&#xD;
int i = 1;&#xD;
boolean unmatched = true;&#xD;
while (unmatched &amp; (i &lt;= strategies.size())) {&#xD;
    if (strategies.getValue(i-1).getName().equals(name)) {&#xD;
        unmatched = false;&#xD;
    } else {&#xD;
        i = i + 1;&#xD;
    }&#xD;
}&#xD;
&#xD;
return i;&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RN6RRBEd-0fNU76fYmlA" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RN6hRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_17RN6xRBEd-0fNU76fYmlA" name="A_primitiveBehaviorPrototypes_executionFactory" memberEnd="_17RNsxRBEd-0fNU76fYmlA _17RN7BRBEd-0fNU76fYmlA">
          <ownedEnd xmi:id="_17RN7BRBEd-0fNU76fYmlA" visibility="private" type="_17RNrBRBEd-0fNU76fYmlA" association="_17RN6xRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RN7RRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RN7hRBEd-0fNU76fYmlA"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_17RN7xRBEd-0fNU76fYmlA" name="A_builtInTypes_executionFactory" memberEnd="_17RNtxRBEd-0fNU76fYmlA _17RN8BRBEd-0fNU76fYmlA">
          <ownedEnd xmi:id="_17RN8BRBEd-0fNU76fYmlA" visibility="private" type="_17RNrBRBEd-0fNU76fYmlA" association="_17RN7xRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RN8RRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RN8hRBEd-0fNU76fYmlA"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_17RN8xRBEd-0fNU76fYmlA" name="A_executor_locus" memberEnd="_17RNZxRBEd-0fNU76fYmlA _17RNkRRBEd-0fNU76fYmlA"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_17RN9BRBEd-0fNU76fYmlA" name="A_factory_locus" memberEnd="_17RNaxRBEd-0fNU76fYmlA _17RNrxRBEd-0fNU76fYmlA"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RN9RRBEd-0fNU76fYmlA" name="SemanticStrategy" isAbstract="true">
          <ownedComment xmi:id="_17RN9hRBEd-0fNU76fYmlA" annotatedElement="_17RN9RRBEd-0fNU76fYmlA">
            <body>The common base class for semantic strategy classes. A semantic strategy class specifies the behavior to be used at a specific semantic variatio point.</body>
          </ownedComment>
          <ownedOperation xmi:id="_17RN9xRBEd-0fNU76fYmlA" name="getName" isAbstract="true">
            <ownedComment xmi:id="_17RN-BRBEd-0fNU76fYmlA" annotatedElement="_17RN9xRBEd-0fNU76fYmlA">
              <body>Return the name of this strategy, as defined for the semantic variation point to which the strategy applies.</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RN-RRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_17RN-hRBEd-0fNU76fYmlA" name="A_strategies_executionFactory" memberEnd="_17RNuxRBEd-0fNU76fYmlA _17RN-xRBEd-0fNU76fYmlA">
          <ownedEnd xmi:id="_17RN-xRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RNrBRBEd-0fNU76fYmlA" association="_17RN-hRBEd-0fNU76fYmlA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RN_BRBEd-0fNU76fYmlA" name="ChoiceStrategy" isAbstract="true">
          <ownedComment xmi:id="_17RN_RRBEd-0fNU76fYmlA" annotatedElement="_17RN_BRBEd-0fNU76fYmlA">
            <body>A choice strategy is used to represent the behavior of making an arbitrary non-deterministic choice.&#xD;
A valid execution may use ANY choice strategy for choosing one element from a given set.</body>
          </ownedComment>
          <generalization xmi:id="_17RN_hRBEd-0fNU76fYmlA" general="_17RN9RRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RN_xRBEd-0fNU76fYmlA" name="getName">
            <ownedComment xmi:id="_17ROABRBEd-0fNU76fYmlA">
              <body>// The name of a choice strategy is always &quot;choice&quot;.&#xD;
&#xD;
return &quot;choice&quot;;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17ROARRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17ROAhRBEd-0fNU76fYmlA" name="choose" isAbstract="true">
            <ownedComment xmi:id="_17ROAxRBEd-0fNU76fYmlA" annotatedElement="_17ROAhRBEd-0fNU76fYmlA">
              <body>Choose an integer from 1 to the given size.&#xD;
[The size must be greater than 0.]</body>
            </ownedComment>
            <ownedParameter xmi:id="_17ROBBRBEd-0fNU76fYmlA" name="size">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17ROBRRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17ROBhRBEd-0fNU76fYmlA" name="FirstChoiceStrategy">
          <generalization xmi:id="_17ROBxRBEd-0fNU76fYmlA" general="_17RN_BRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17ROCBRBEd-0fNU76fYmlA" name="choose">
            <ownedComment xmi:id="_17ROCRRBEd-0fNU76fYmlA">
              <body>// Always choose one.&#xD;
&#xD;
return 1;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17ROChRBEd-0fNU76fYmlA" name="size">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17ROCxRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RODBRBEd-0fNU76fYmlA" name="L1">
        <packageMerge xmi:id="_17RODRRBEd-0fNU76fYmlA" mergedPackage="_17RJ5RRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RODhRBEd-0fNU76fYmlA" mergedPackage="_17RMOBRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RODxRBEd-0fNU76fYmlA" mergedPackage="_17RMjRRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17ROEBRBEd-0fNU76fYmlA" mergedPackage="_17RNVBRBEd-0fNU76fYmlA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17ROERRBEd-0fNU76fYmlA" name="L2">
        <packageMerge xmi:id="_17ROEhRBEd-0fNU76fYmlA" mergedPackage="_17RODBRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17ROExRBEd-0fNU76fYmlA" mergedPackage="_17RHLRRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17ROFBRBEd-0fNU76fYmlA" mergedPackage="_17HrxxRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17ROFRRBEd-0fNU76fYmlA" mergedPackage="_17HscRRBEd-0fNU76fYmlA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17ROFhRBEd-0fNU76fYmlA" name="L3">
        <packageMerge xmi:id="_17ROFxRBEd-0fNU76fYmlA" mergedPackage="_17ROERRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17ROGBRBEd-0fNU76fYmlA" mergedPackage="_17HtdRRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17ROGRRBEd-0fNU76fYmlA" mergedPackage="_17HtChRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17ROGhRBEd-0fNU76fYmlA" mergedPackage="_17RJbxRBEd-0fNU76fYmlA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_17ROGxRBEd-0fNU76fYmlA" name="Syntax">
      <packagedElement xmi:type="uml:Package" xmi:id="_17ROHBRBEd-0fNU76fYmlA" name="CommonBehaviors">
        <packagedElement xmi:type="uml:Package" xmi:id="_17ROHRRBEd-0fNU76fYmlA" name="BasicBehaviors">
          <packageImport xmi:id="_17ROHhRBEd-0fNU76fYmlA" importedPackage="_17ROzRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROHxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17ROIBRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17ROIRRBEd-0fNU76fYmlA" name="OpaqueBehavior">
            <eAnnotations xmi:id="_17ROIhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17ROIxRBEd-0fNU76fYmlA" name="fUML_empty_body_and_language" constrainedElement="_17ROIRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROJBRBEd-0fNU76fYmlA" annotatedElement="_17ROIxRBEd-0fNU76fYmlA">
                <body>body and language must be empty</body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17ROJRRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.language->isEmpty() and self.body->isEmpty()</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17ROJhRBEd-0fNU76fYmlA" name="fUML_inactive" constrainedElement="_17ROIRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROJxRBEd-0fNU76fYmlA" annotatedElement="_17ROJhRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>An opaque behavior cannot be active.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17ROKBRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>not self.isActive</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17ROKRRBEd-0fNU76fYmlA" general="_17ROTBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17ROKhRBEd-0fNU76fYmlA" name="body" visibility="public" isOrdered="true" isUnique="false" aggregation="composite" association="_17ROfRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROKxRBEd-0fNU76fYmlA" annotatedElement="_17ROKhRBEd-0fNU76fYmlA">
                <body>Specifies the behavior in one or more languages.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROLBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROLRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17ROLhRBEd-0fNU76fYmlA" name="language" visibility="public" isOrdered="true" aggregation="composite" association="_17ROgBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROLxRBEd-0fNU76fYmlA" annotatedElement="_17ROLhRBEd-0fNU76fYmlA">
                <body>Languages the body strings use in the same order as the body strings.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROMBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROMRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_17ROMhRBEd-0fNU76fYmlA" name="CallConcurrencyKind">
            <eAnnotations xmi:id="_17ROMxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedLiteral xmi:id="_17RONBRBEd-0fNU76fYmlA" name="sequential"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RONRRBEd-0fNU76fYmlA" name="FunctionBehavior">
            <eAnnotations xmi:id="_17RONhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RONxRBEd-0fNU76fYmlA" general="_17ROIRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17ROOBRBEd-0fNU76fYmlA" name="BehavioredClassifier" isAbstract="true">
            <eAnnotations xmi:id="_17ROORRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17ROOhRBEd-0fNU76fYmlA" name="fUML_allowed_owned_behaviors" constrainedElement="_17ROOBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROOxRBEd-0fNU76fYmlA" annotatedElement="_17ROOhRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>An owned behavior must be either the classifier behavior of or the method for an operation of its behaviored classifier.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17ROPBRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.ownedBehavior->forAll(b:Behavior|b = self.classifierBehavior xor self.allFeatures()->includes(b.specification))</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17ROPRRBEd-0fNU76fYmlA" general="_17RRHRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17ROPhRBEd-0fNU76fYmlA" name="ownedBehavior" type="_17ROTBRBEd-0fNU76fYmlA" aggregation="composite" association="_17ROcxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROPxRBEd-0fNU76fYmlA" annotatedElement="_17ROPhRBEd-0fNU76fYmlA">
                <body>References behavior specifications owned by a classifier.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROQBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROQRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17ROQhRBEd-0fNU76fYmlA" name="classifierBehavior" type="_17ROTBRBEd-0fNU76fYmlA" association="_17ROeBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROQxRBEd-0fNU76fYmlA" annotatedElement="_17ROQhRBEd-0fNU76fYmlA">
                <body>A behavior specification that specifies the behavior of the classifier itself.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RORBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RORRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RORhRBEd-0fNU76fYmlA" name="addOwnedBehavior">
              <ownedComment xmi:id="_17RORxRBEd-0fNU76fYmlA">
                <body>super.addOwnedMember(ownedBehavior);&#xD;
&#xD;
this.ownedBehavior.addValue(ownedBehavior);&#xD;
ownedBehavior._setContext(this);&#xD;
&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17ROSBRBEd-0fNU76fYmlA" name="ownedBehavior" type="_17ROTBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17ROSRRBEd-0fNU76fYmlA" name="setClassifierBehavior">
              <ownedComment xmi:id="_17ROShRBEd-0fNU76fYmlA">
                <body>// Note: The classifier behavior must also be added as an owned behavior using addOwnedBehavior.&#xD;
&#xD;
this.classifierBehavior = classifierBehavior;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17ROSxRBEd-0fNU76fYmlA" name="classifierBehavior" type="_17ROTBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17ROTBRBEd-0fNU76fYmlA" name="Behavior" isAbstract="true">
            <eAnnotations xmi:id="_17ROTRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17ROThRBEd-0fNU76fYmlA" name="fUML_reentrant_behavior" constrainedElement="_17ROTBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROTxRBEd-0fNU76fYmlA" annotatedElement="_17ROThRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>In this specification, an fUML instance model must have Behavior.isReentrant &lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17ROUBRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.isReentrant</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17ROURRBEd-0fNU76fYmlA" general="_17RQ2RRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17ROUhRBEd-0fNU76fYmlA" name="isReentrant" visibility="public">
              <ownedComment xmi:id="_17ROUxRBEd-0fNU76fYmlA" annotatedElement="_17ROUhRBEd-0fNU76fYmlA">
                <body>Tells whether the behavior can be invoked while it is still executing from a previous invocation.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17ROVBRBEd-0fNU76fYmlA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17ROVRRBEd-0fNU76fYmlA" name="specification" type="_17RPCxRBEd-0fNU76fYmlA" association="_17RSTRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROVhRBEd-0fNU76fYmlA" annotatedElement="_17ROVRRBEd-0fNU76fYmlA">
                <body>Designates a behavioral feature that the behavior implements. The behavioral feature must be owned by the classifier that owns the behavior or be inherited by it. The parameters of the behavioral feature and the implementing behavior must match. If a behavior does not have a specification, it is directly associated with a classifier (i.e., it is the behavior of the classifier as a whole).</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROVxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROWBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17ROWRRBEd-0fNU76fYmlA" name="ownedParameter" type="_17RQQhRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RObhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROWhRBEd-0fNU76fYmlA" annotatedElement="_17ROWRRBEd-0fNU76fYmlA">
                <body>References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.

</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROWxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROXBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17ROXRRBEd-0fNU76fYmlA" name="context" type="_17ROOBRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" association="_17ROaRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROXhRBEd-0fNU76fYmlA" annotatedElement="_17ROXRRBEd-0fNU76fYmlA">
                <body>The classifier that is the context for the execution of the behavior. If the behavior is owned by a BehavioredClassifier, that classifier is the context. Otherwise, the context is the first BehavioredClassifier reached by following the chain of owner relationships. For example, following this algorithm, the context of an entry action in a state machine is the classifier that owns the state machine. The features of the context classifier as well as the elements visible to the context classifier are visible to the behavior.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROXxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROYBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17ROYRRBEd-0fNU76fYmlA" name="Behavior">
              <ownedComment xmi:id="_17ROYhRBEd-0fNU76fYmlA">
                <body>this.isReentrant = true;&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17ROYxRBEd-0fNU76fYmlA" name="addOwnedParameter">
              <ownedComment xmi:id="_17ROZBRBEd-0fNU76fYmlA">
                <body>super.addOwnedMember(ownedParameter);&#xD;
this.ownedParameter.addValue(ownedParameter);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17ROZRRBEd-0fNU76fYmlA" name="ownedParameter" type="_17RQQhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17ROZhRBEd-0fNU76fYmlA" name="_setContext">
              <ownedComment xmi:id="_17ROZxRBEd-0fNU76fYmlA">
                <body>//Note: This is a helper operation intended to be called by certain operations outside the Behavior class in order to allow the setting of the context to be overriden in subclasses.&#xD;
//It should _not_ be called otherwise in order to set the context directly, rather than via these other operations.&#xD;
&#xD;
// Debug.println(&quot;[_setContext] behavior = &quot; + this.name + &quot;, context = &quot; + context.name);&#xD;
&#xD;
this.context = context;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17ROaBRBEd-0fNU76fYmlA" name="context" type="_17ROOBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17ROaRRBEd-0fNU76fYmlA" name="A_context_behavior" memberEnd="_17ROXRRBEd-0fNU76fYmlA _17ROaxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROahRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROaxRBEd-0fNU76fYmlA" name="behavior" type="_17ROTBRBEd-0fNU76fYmlA" association="_17ROaRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RObBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RObRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RObhRBEd-0fNU76fYmlA" name="A_behavior_ownedParameter" memberEnd="_17ROcBRBEd-0fNU76fYmlA _17ROWRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RObxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROcBRBEd-0fNU76fYmlA" name="behavior" type="_17ROTBRBEd-0fNU76fYmlA" association="_17RObhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROcRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROchRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17ROcxRBEd-0fNU76fYmlA" name="A_behavioredClassifier_ownedBehavior" memberEnd="_17ROdRRBEd-0fNU76fYmlA _17ROPhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROdBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROdRRBEd-0fNU76fYmlA" name="behavioredClassifier" type="_17ROOBRBEd-0fNU76fYmlA" association="_17ROcxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROdhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROdxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17ROeBRBEd-0fNU76fYmlA" name="A_classifierBehavior_behavioredClassifier" memberEnd="_17ROQhRBEd-0fNU76fYmlA _17ROehRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROeRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROehRBEd-0fNU76fYmlA" name="behavioredClassifier" type="_17ROOBRBEd-0fNU76fYmlA" association="_17ROeBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROexRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROfBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17ROfRRBEd-0fNU76fYmlA" name="A_body_opaqueBehavior" memberEnd="_17ROKhRBEd-0fNU76fYmlA _17ROfxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROfhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROfxRBEd-0fNU76fYmlA" name="opaqueBehavior" type="_17ROIRRBEd-0fNU76fYmlA" association="_17ROfRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17ROgBRBEd-0fNU76fYmlA" name="A_language_opaqueBehavior" memberEnd="_17ROghRBEd-0fNU76fYmlA _17ROLhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROgRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROghRBEd-0fNU76fYmlA" name="language" type="_17ROIRRBEd-0fNU76fYmlA" association="_17ROgBRBEd-0fNU76fYmlA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17ROgxRBEd-0fNU76fYmlA" name="Communications">
          <packageImport xmi:id="_17ROhBRBEd-0fNU76fYmlA" importedPackage="_17ROHRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROhRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17ROhhRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17ROhxRBEd-0fNU76fYmlA" name="Trigger">
            <eAnnotations xmi:id="_17ROiBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17ROiRRBEd-0fNU76fYmlA" general="_17RPsBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17ROihRBEd-0fNU76fYmlA" name="event" type="_17ROtxRBEd-0fNU76fYmlA" association="_17ROyRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROixRBEd-0fNU76fYmlA" annotatedElement="_17ROihRBEd-0fNU76fYmlA">
                <body>The event that causes the trigger.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROjBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROjRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17ROjhRBEd-0fNU76fYmlA" name="setEvent">
              <ownedComment xmi:id="_17ROjxRBEd-0fNU76fYmlA">
                <body>this.event = event;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17ROkBRBEd-0fNU76fYmlA" name="event" type="_17ROtxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17ROkRRBEd-0fNU76fYmlA" name="Signal">
            <eAnnotations xmi:id="_17ROkhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17ROkxRBEd-0fNU76fYmlA" general="_17RRHRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17ROlBRBEd-0fNU76fYmlA" name="ownedAttribute" type="_17RQZhRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17ROxBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROlRRBEd-0fNU76fYmlA" annotatedElement="_17ROlBRBEd-0fNU76fYmlA">
                <body>The attributes owned by the signal.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROlhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROlxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17ROmBRBEd-0fNU76fYmlA" name="addOwnedAttribute">
              <ownedComment xmi:id="_17ROmRRBEd-0fNU76fYmlA">
                <body>super.addAttribute(ownedAttribute);&#xD;
super.addOwnedMember(ownedAttribute);&#xD;
&#xD;
this.ownedAttribute.addValue(ownedAttribute);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17ROmhRBEd-0fNU76fYmlA" name="ownedAttribute" type="_17RQZhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17ROmxRBEd-0fNU76fYmlA" name="SignalEvent">
            <eAnnotations xmi:id="_17ROnBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17ROnRRBEd-0fNU76fYmlA" general="_17ROtBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17ROnhRBEd-0fNU76fYmlA" name="signal" type="_17ROkRRBEd-0fNU76fYmlA" association="_17ROvxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROnxRBEd-0fNU76fYmlA" annotatedElement="_17ROnhRBEd-0fNU76fYmlA">
                <body>The specific signal that is associated with this event.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedOperation xmi:id="_17ROoBRBEd-0fNU76fYmlA" name="setSignal">
              <ownedComment xmi:id="_17ROoRRBEd-0fNU76fYmlA">
                <body>this.signal = signal;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17ROohRBEd-0fNU76fYmlA" name="signal" type="_17ROkRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17ROoxRBEd-0fNU76fYmlA" name="Reception">
            <eAnnotations xmi:id="_17ROpBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17ROpRRBEd-0fNU76fYmlA" name="no_method" constrainedElement="_17ROoxRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17ROphRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
              <ownedComment xmi:id="_17ROpxRBEd-0fNU76fYmlA" annotatedElement="_17ROpRRBEd-0fNU76fYmlA">
                <body>A reception must not have an associated method.&amp;nbsp;</body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17ROqBRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.method->isEmpty()</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17ROqRRBEd-0fNU76fYmlA" name="not_abstract" constrainedElement="_17ROoxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROqhRBEd-0fNU76fYmlA" annotatedElement="_17ROqRRBEd-0fNU76fYmlA _17ROoxRBEd-0fNU76fYmlA">
                <body>A reception may not be abstract.</body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17ROqxRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>not self.isAbstract</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17ROrBRBEd-0fNU76fYmlA" general="_17RPCxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17ROrRRBEd-0fNU76fYmlA" name="signal" type="_17ROkRRBEd-0fNU76fYmlA" association="_17ROuhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17ROrhRBEd-0fNU76fYmlA" annotatedElement="_17ROrRRBEd-0fNU76fYmlA">
                <body>The signal that this reception handles.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROrxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROsBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17ROsRRBEd-0fNU76fYmlA" name="setSignal">
              <ownedComment xmi:id="_17ROshRBEd-0fNU76fYmlA">
                <body>this.signal = signal;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17ROsxRBEd-0fNU76fYmlA" name="signal" type="_17ROkRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17ROtBRBEd-0fNU76fYmlA" name="MessageEvent" isAbstract="true">
            <eAnnotations xmi:id="_17ROtRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17ROthRBEd-0fNU76fYmlA" general="_17ROtxRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17ROtxRBEd-0fNU76fYmlA" name="Event" isAbstract="true">
            <eAnnotations xmi:id="_17ROuBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17ROuRRBEd-0fNU76fYmlA" general="_17RQPxRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17ROuhRBEd-0fNU76fYmlA" name="A_reception_signal" memberEnd="_17ROvBRBEd-0fNU76fYmlA _17ROrRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROuxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROvBRBEd-0fNU76fYmlA" name="reception" type="_17ROoxRBEd-0fNU76fYmlA" association="_17ROuhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROvRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROvhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17ROvxRBEd-0fNU76fYmlA" name="A_signal_signalEvent" memberEnd="_17ROnhRBEd-0fNU76fYmlA _17ROwRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROwBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROwRRBEd-0fNU76fYmlA" name="signalEvent" type="_17ROmxRBEd-0fNU76fYmlA" association="_17ROvxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROwhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROwxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17ROxBRBEd-0fNU76fYmlA" name="A_ownedAttribute_owningSignal" memberEnd="_17ROlBRBEd-0fNU76fYmlA _17ROxhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROxRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROxhRBEd-0fNU76fYmlA" name="owningSignal" type="_17ROkRRBEd-0fNU76fYmlA" association="_17ROxBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17ROxxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17ROyBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17ROyRRBEd-0fNU76fYmlA" name="A_event_trigger" memberEnd="_17ROihRBEd-0fNU76fYmlA _17ROyxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROyhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17ROyxRBEd-0fNU76fYmlA" name="trigger" type="_17ROhxRBEd-0fNU76fYmlA" association="_17ROyRRBEd-0fNU76fYmlA"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17ROzBRBEd-0fNU76fYmlA" name="Classes">
        <packagedElement xmi:type="uml:Package" xmi:id="_17ROzRRBEd-0fNU76fYmlA" name="Kernel">
          <packageImport xmi:id="_17ROzhRBEd-0fNU76fYmlA" importedPackage="_17ROHRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17ROzxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RO0BRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RO0RRBEd-0fNU76fYmlA" name="ValueSpecification" isAbstract="true">
            <eAnnotations xmi:id="_17RO0hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RO0xRBEd-0fNU76fYmlA" general="_17RQtRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RO1BRBEd-0fNU76fYmlA" name="StructuralFeature" isAbstract="true">
            <eAnnotations xmi:id="_17RO1RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RO1hRBEd-0fNU76fYmlA" general="_17RRiRRBEd-0fNU76fYmlA"/>
            <generalization xmi:id="_17RO1xRBEd-0fNU76fYmlA" general="_17RQtRRBEd-0fNU76fYmlA"/>
            <generalization xmi:id="_17RO2BRBEd-0fNU76fYmlA" general="_17RPeRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RO2RRBEd-0fNU76fYmlA" name="isReadOnly">
              <ownedComment xmi:id="_17RO2hRBEd-0fNU76fYmlA" annotatedElement="_17RO2RRBEd-0fNU76fYmlA">
                <body>States whether the feature's value may be modified by a client.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RO2xRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RO3BRBEd-0fNU76fYmlA" name="setIsReadOnly">
              <ownedComment xmi:id="_17RO3RRBEd-0fNU76fYmlA">
                <body>this.isReadOnly = isReadOnly;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RO3hRBEd-0fNU76fYmlA" name="isReadOnly">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RO3xRBEd-0fNU76fYmlA" name="setIsOrdered">
              <ownedComment xmi:id="_17RO4BRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setIsOrdered(isOrdered);</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RO4RRBEd-0fNU76fYmlA" name="isOrdered">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RO4hRBEd-0fNU76fYmlA" name="setIsUnique">
              <ownedComment xmi:id="_17RO4xRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setIsUnique(isUnique);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RO5BRBEd-0fNU76fYmlA" name="isUnique">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RO5RRBEd-0fNU76fYmlA" name="setUpperValue">
              <ownedComment xmi:id="_17RO5hRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setUpperValue(upperValue);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RO5xRBEd-0fNU76fYmlA" name="upperValue" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RO6BRBEd-0fNU76fYmlA" name="setLowerValue">
              <ownedComment xmi:id="_17RO6RRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setLowerValue(lowerValue);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RO6hRBEd-0fNU76fYmlA" name="lowerValue" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RO6xRBEd-0fNU76fYmlA" name="setUpper">
              <ownedComment xmi:id="_17RO7BRBEd-0fNU76fYmlA">
                <body>//Note: This is a convenience operation that may be used _instead_ of setUpperValue, not in addition to it.&#xD;
&#xD;
this.multiplicityElement.setUpper(upper);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RO7RRBEd-0fNU76fYmlA" name="upper">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RO7hRBEd-0fNU76fYmlA" name="setLower">
              <ownedComment xmi:id="_17RO7xRBEd-0fNU76fYmlA">
                <body>//Note: This is a convenience operation that may be used _instead_ of setLowerValue, not in addition to it.&#xD;
&#xD;
this.multiplicityElement.setLower(lower);&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RO8BRBEd-0fNU76fYmlA" name="lower">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RO8RRBEd-0fNU76fYmlA" name="setType">
              <ownedComment xmi:id="_17RO8hRBEd-0fNU76fYmlA">
                <body>this.typedElement.setType(type);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RO8xRBEd-0fNU76fYmlA" name="type" type="_17RQrxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RO9BRBEd-0fNU76fYmlA" name="RedefinableElement" isAbstract="true">
            <eAnnotations xmi:id="_17RO9RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RO9hRBEd-0fNU76fYmlA" general="_17RPsBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RO9xRBEd-0fNU76fYmlA" name="isLeaf">
              <ownedComment xmi:id="_17RO-BRBEd-0fNU76fYmlA" annotatedElement="_17RO9xRBEd-0fNU76fYmlA">
                <body>Indicates whether it is possible to further specialize a RedefinableElement. If the value is true, then it is not possible to further specialize the RedefinableElement.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RO-RRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RO-hRBEd-0fNU76fYmlA" name="redefinedElement" type="_17RO9BRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_17RSWRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RO-xRBEd-0fNU76fYmlA" annotatedElement="_17RO-hRBEd-0fNU76fYmlA">
                <body>The redefinable element that is being redefined by this element.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RO_BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RO_RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RO_hRBEd-0fNU76fYmlA" name="redefinitionContext" type="_17RRHRRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_17RSVBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RO_xRBEd-0fNU76fYmlA" annotatedElement="_17RO_hRBEd-0fNU76fYmlA">
                <body>References the contexts that this element may be redefined from.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPABRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPARRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPAhRBEd-0fNU76fYmlA" name="setIsLeaf">
              <ownedComment xmi:id="_17RPAxRBEd-0fNU76fYmlA">
                <body>this.isLeaf = isLeaf;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPBBRBEd-0fNU76fYmlA" name="isLeaf">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPBRRBEd-0fNU76fYmlA" name="addRedefinedElement" visibility="protected">
              <ownedComment xmi:id="_17RPBhRBEd-0fNU76fYmlA">
                <body>this.redefinedElement.addValue(redefinedElement);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPBxRBEd-0fNU76fYmlA" name="redefinedElement" type="_17RO9BRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPCBRBEd-0fNU76fYmlA" name="addRedefinitionContext" visibility="protected">
              <ownedComment xmi:id="_17RPCRRBEd-0fNU76fYmlA">
                <body>this.redefinitionContext.addValue(redefinitionContext);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPChRBEd-0fNU76fYmlA" name="redefinitionContext" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPCxRBEd-0fNU76fYmlA" name="BehavioralFeature" isAbstract="true">
            <eAnnotations xmi:id="_17RPDBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RPDRRBEd-0fNU76fYmlA" name="sequentiality" constrainedElement="_17RPCxRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RPDhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RPDxRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RPEBRBEd-0fNU76fYmlA" annotatedElement="_17RPDRRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16674&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>concurrency must be sequential&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RPERRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.concurrency = CallConcurrencyKind::sequential</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RPEhRBEd-0fNU76fYmlA" general="_17RRiRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPExRBEd-0fNU76fYmlA" name="ownedParameter" type="_17RQQhRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RSTxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RPFBRBEd-0fNU76fYmlA" annotatedElement="_17RPExRBEd-0fNU76fYmlA">
                <body>Specifies the ordered set of formal parameters of this BehavioralFeature.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RPFRRBEd-0fNU76fYmlA" annotatedElement="_17RPExRBEd-0fNU76fYmlA">
                <body>Specifies the ordered set of formal parameters owned by this BehavioralFeature. The parameter direction can be 'in', 'inout', 'out', pr 'return' to specify input, output, or return parameters.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPFhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPFxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPGBRBEd-0fNU76fYmlA" name="isAbstract">
              <ownedComment xmi:id="_17RPGRRBEd-0fNU76fYmlA" annotatedElement="_17RPGBRBEd-0fNU76fYmlA">
                <body>If true, then the behavioral feature does not have an implementation, and one must be supplied by a more specific element. If false, the behavioral feature must have an implementation in the classifier or one must be inherited from a more general element.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RPGhRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPGxRBEd-0fNU76fYmlA" name="method" type="_17ROTBRBEd-0fNU76fYmlA" association="_17RSTRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RPHBRBEd-0fNU76fYmlA" annotatedElement="_17RPGxRBEd-0fNU76fYmlA">
                <body>A behavioral description that implements the behavioral feature. There may be at most one behavior for a particular pairing of a classifier (as owner of the behavior) and a behavioral feature (as specification of the behavior).</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPHRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPHhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPHxRBEd-0fNU76fYmlA" name="concurrency" visibility="public" type="_17ROMhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RPIBRBEd-0fNU76fYmlA" annotatedElement="_17RPHxRBEd-0fNU76fYmlA">
                <body>Specifies the semantics of concurrent calls to the same passive instance (i.e., an instance originating from a class with isActive being false). Active instances control access to their own behavioral features.</body>
              </ownedComment>
              <defaultValue xmi:type="uml:InstanceValue" xmi:id="_17RPIRRBEd-0fNU76fYmlA" name="sequential" type="_17ROMhRBEd-0fNU76fYmlA" instance="_17RONBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPIhRBEd-0fNU76fYmlA" name="setIsAbstract">
              <ownedComment xmi:id="_17RPIxRBEd-0fNU76fYmlA">
                <body>this.isAbstract = isAbstract;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPJBRBEd-0fNU76fYmlA" name="isAbstract">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPJRRBEd-0fNU76fYmlA" name="addOwnedParameter">
              <ownedComment xmi:id="_17RPJhRBEd-0fNU76fYmlA">
                <body>// this.addOwnedMember(ownedParameter);  [Note: BehavioralFeature is not a Namespace in fUML, to avoid multiple inheritance.]&#xD;
&#xD;
this.ownedParameter.addValue(ownedParameter);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPJxRBEd-0fNU76fYmlA" name="ownedParameter" type="_17RQQhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPKBRBEd-0fNU76fYmlA" name="addMethod">
              <ownedComment xmi:id="_17RPKRRBEd-0fNU76fYmlA">
                <body>method.specification = this;&#xD;
this.method.addValue(method);</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPKhRBEd-0fNU76fYmlA" name="method" type="_17ROTBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPKxRBEd-0fNU76fYmlA" name="InstanceSpecification">
            <eAnnotations xmi:id="_17RPLBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RPLRRBEd-0fNU76fYmlA" name="possible_classifiers" constrainedElement="_17RPKxRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RPLhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RPLxRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RPMBRBEd-0fNU76fYmlA" annotatedElement="_17RPLRRBEd-0fNU76fYmlA">
                <body>Either all the classifiers are classes, or there is one classifier that is a data type</body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RPMRRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.classifier->forAll(oclIsKindOf(Class)) or&#xD;&#xA;self.classifier->size() = 1 and self.classifier->forAll(oclIsKindOf(DataType))&#xD;&#xA;</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RPMhRBEd-0fNU76fYmlA" general="_17RPsBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPMxRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RSShRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RPNBRBEd-0fNU76fYmlA" annotatedElement="_17RPMxRBEd-0fNU76fYmlA">
                <body>The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPNRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPNhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPNxRBEd-0fNU76fYmlA" name="slot" type="_17RQmhRBEd-0fNU76fYmlA" aggregation="composite" subsettedProperty="_17RRZxRBEd-0fNU76fYmlA" association="_17RSSBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RPOBRBEd-0fNU76fYmlA" annotatedElement="_17RPNxRBEd-0fNU76fYmlA">
                <body>A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPORRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPOhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPOxRBEd-0fNU76fYmlA" name="addClassifier">
              <ownedComment xmi:id="_17RPPBRBEd-0fNU76fYmlA">
                <body>this.classifier.addValue(classifier);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPPRRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPPhRBEd-0fNU76fYmlA" name="addSlot">
              <ownedComment xmi:id="_17RPPxRBEd-0fNU76fYmlA">
                <body>this.addOwnedElement(slot);&#xD;
this.slot.addValue(slot);&#xD;
slot.owningInstance = this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPQBRBEd-0fNU76fYmlA" name="slot" type="_17RQmhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPQRRBEd-0fNU76fYmlA" name="InstanceValue">
            <eAnnotations xmi:id="_17RPQhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RPQxRBEd-0fNU76fYmlA" general="_17RO0RRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPRBRBEd-0fNU76fYmlA" name="instance" type="_17RPKxRBEd-0fNU76fYmlA" association="_17RSRRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RPRRRBEd-0fNU76fYmlA" annotatedElement="_17RPRBRBEd-0fNU76fYmlA">
                <body>The instance that is the specified value.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPRhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPRxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPSBRBEd-0fNU76fYmlA" name="setInstance">
              <ownedComment xmi:id="_17RPSRRBEd-0fNU76fYmlA">
                <body>this.instance = instance;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPShRBEd-0fNU76fYmlA" name="instance" type="_17RPKxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPSxRBEd-0fNU76fYmlA" name="LiteralBoolean">
            <eAnnotations xmi:id="_17RPTBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RPTRRBEd-0fNU76fYmlA" general="_17RPYBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPThRBEd-0fNU76fYmlA" name="value">
              <ownedComment xmi:id="_17RPTxRBEd-0fNU76fYmlA" annotatedElement="_17RPThRBEd-0fNU76fYmlA">
                <body>The specified Boolean value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RPUBRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPURRBEd-0fNU76fYmlA" name="setValue">
              <ownedComment xmi:id="_17RPUhRBEd-0fNU76fYmlA">
                <body>this.value = value;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPUxRBEd-0fNU76fYmlA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPVBRBEd-0fNU76fYmlA" name="LiteralInteger">
            <eAnnotations xmi:id="_17RPVRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RPVhRBEd-0fNU76fYmlA" general="_17RPYBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPVxRBEd-0fNU76fYmlA" name="value" visibility="public">
              <ownedComment xmi:id="_17RPWBRBEd-0fNU76fYmlA" annotatedElement="_17RPVxRBEd-0fNU76fYmlA">
                <body>The specified Integer value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_17RPWRRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </defaultValue>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPWhRBEd-0fNU76fYmlA" name="setValue">
              <ownedComment xmi:id="_17RPWxRBEd-0fNU76fYmlA">
                <body>this.value = value;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPXBRBEd-0fNU76fYmlA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPXRRBEd-0fNU76fYmlA" name="LiteralNull">
            <eAnnotations xmi:id="_17RPXhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RPXxRBEd-0fNU76fYmlA" general="_17RPYBRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPYBRBEd-0fNU76fYmlA" name="LiteralSpecification" isAbstract="true">
            <eAnnotations xmi:id="_17RPYRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RPYhRBEd-0fNU76fYmlA" general="_17RO0RRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPYxRBEd-0fNU76fYmlA" name="LiteralString">
            <eAnnotations xmi:id="_17RPZBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RPZRRBEd-0fNU76fYmlA" general="_17RPYBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPZhRBEd-0fNU76fYmlA" name="value">
              <ownedComment xmi:id="_17RPZxRBEd-0fNU76fYmlA" annotatedElement="_17RPZhRBEd-0fNU76fYmlA">
                <body>The specified String value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPaBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPaRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPahRBEd-0fNU76fYmlA" name="setValue">
              <ownedComment xmi:id="_17RPaxRBEd-0fNU76fYmlA">
                <body>this.value = value;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPbBRBEd-0fNU76fYmlA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPbRRBEd-0fNU76fYmlA" name="LiteralUnlimitedNatural">
            <eAnnotations xmi:id="_17RPbhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RPbxRBEd-0fNU76fYmlA" general="_17RPYBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPcBRBEd-0fNU76fYmlA" name="value">
              <ownedComment xmi:id="_17RPcRRBEd-0fNU76fYmlA" annotatedElement="_17RPcBRBEd-0fNU76fYmlA">
                <body>The specified UnlimitedNatural value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_17RPchRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <body>new UnlimitedNatural(0)</body>
              </defaultValue>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPcxRBEd-0fNU76fYmlA" name="setValue">
              <ownedComment xmi:id="_17RPdBRBEd-0fNU76fYmlA">
                <body>this.value = value;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPdRRBEd-0fNU76fYmlA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPdhRBEd-0fNU76fYmlA" name="setValue">
              <ownedComment xmi:id="_17RPdxRBEd-0fNU76fYmlA">
                <body>this.setValue(new UnlimitedNatural(value));&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPeBRBEd-0fNU76fYmlA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPeRRBEd-0fNU76fYmlA" name="MultiplicityElement">
            <eAnnotations xmi:id="_17RPehRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RPexRBEd-0fNU76fYmlA" name="required_lower_and_upper_for_fUML" constrainedElement="_17RPeRRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RPfBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RPfRRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RPfhRBEd-0fNU76fYmlA" annotatedElement="_17RPexRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16674&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>upperValue must be a LiteralUnlimitedNatural and lowerValue must be a LiteralInteger. Both are required.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RPfxRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.upperValue->notEmpty() and&#xD;&#xA;self.upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and&#xD;&#xA;self.lowerValue->notEmpty() and&#xD;&#xA;self.lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger) </body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RPgBRBEd-0fNU76fYmlA" general="_17RRZRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPgRRBEd-0fNU76fYmlA" name="isOrdered">
              <ownedComment xmi:id="_17RPghRBEd-0fNU76fYmlA" annotatedElement="_17RPgRRBEd-0fNU76fYmlA">
                <body>For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered..</body>
              </ownedComment>
              <ownedComment xmi:id="_17RPgxRBEd-0fNU76fYmlA" annotatedElement="_17RPgRRBEd-0fNU76fYmlA">
                <body>For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RPhBRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPhRRBEd-0fNU76fYmlA" name="isUnique">
              <ownedComment xmi:id="_17RPhhRBEd-0fNU76fYmlA" annotatedElement="_17RPhRRBEd-0fNU76fYmlA">
                <body>For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RPhxRBEd-0fNU76fYmlA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPiBRBEd-0fNU76fYmlA" name="upper" isDerived="true">
              <ownedComment xmi:id="_17RPiRRBEd-0fNU76fYmlA" annotatedElement="_17RPiBRBEd-0fNU76fYmlA">
                <body>Specifies the upper bound of the multiplicity interval.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RPihRBEd-0fNU76fYmlA" annotatedElement="_17RPiBRBEd-0fNU76fYmlA">
                <body>Specifies the upper bound of the multiplicity interval, if it is expressed as an unlimited natural.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPixRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPjBRBEd-0fNU76fYmlA"/>
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_17RPjRRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
                <body>new UnlimitedNatural(1)</body>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPjhRBEd-0fNU76fYmlA" name="lower" isDerived="true">
              <ownedComment xmi:id="_17RPjxRBEd-0fNU76fYmlA" annotatedElement="_17RPjhRBEd-0fNU76fYmlA">
                <body>Specifies the lower bound of the multiplicity interval.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RPkBRBEd-0fNU76fYmlA" annotatedElement="_17RPjhRBEd-0fNU76fYmlA">
                <body>Specifies the lower bound of the multiplicity interval, if it is expressed as an integer.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPkRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPkhRBEd-0fNU76fYmlA"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_17RPkxRBEd-0fNU76fYmlA" value="1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPlBRBEd-0fNU76fYmlA" name="upperValue" type="_17RO0RRBEd-0fNU76fYmlA" aggregation="composite" association="_17RSQBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RPlRRBEd-0fNU76fYmlA" annotatedElement="_17RPlBRBEd-0fNU76fYmlA">
                <body>The specification of the upper bound for this multiplicity.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPlhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPlxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPmBRBEd-0fNU76fYmlA" name="lowerValue" visibility="public" type="_17RO0RRBEd-0fNU76fYmlA" aggregation="composite" association="_17RSOxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RPmRRBEd-0fNU76fYmlA" annotatedElement="_17RPmBRBEd-0fNU76fYmlA">
                <body>The specification of the lower bound for this multiplicity.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPmhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPmxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPnBRBEd-0fNU76fYmlA" name="MultiplicityElement">
              <ownedComment xmi:id="_17RPnRRBEd-0fNU76fYmlA">
                <body>// This constructor sets upperValue and lowerValue consistently with the initializers for upper and lower.&#xD;
&#xD;
this.setUpper(1);&#xD;
this.setLower(1);&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPnhRBEd-0fNU76fYmlA" name="setIsOrdered">
              <ownedComment xmi:id="_17RPnxRBEd-0fNU76fYmlA">
                <body>this.isOrdered = isOrdered;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPoBRBEd-0fNU76fYmlA" name="isOrdered">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPoRRBEd-0fNU76fYmlA" name="setIsUnique">
              <ownedComment xmi:id="_17RPohRBEd-0fNU76fYmlA">
                <body>this.isUnique = isUnique;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPoxRBEd-0fNU76fYmlA" name="isUnique">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPpBRBEd-0fNU76fYmlA" name="setUpperValue">
              <ownedComment xmi:id="_17RPpRRBEd-0fNU76fYmlA">
                <body>this.upperValue = upperValue;&#xD;
&#xD;
if (upperValue instanceof LiteralUnlimitedNatural) {&#xD;
    this.upper = ((LiteralUnlimitedNatural)upperValue).value;&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPphRBEd-0fNU76fYmlA" name="upperValue" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPpxRBEd-0fNU76fYmlA" name="setLowerValue">
              <ownedComment xmi:id="_17RPqBRBEd-0fNU76fYmlA">
                <body>this.lowerValue = lowerValue;&#xD;
&#xD;
if (lowerValue instanceof LiteralInteger) {&#xD;
    this.lower = ((LiteralInteger)lowerValue).value;&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPqRRBEd-0fNU76fYmlA" name="lowerValue" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPqhRBEd-0fNU76fYmlA" name="setUpper">
              <ownedComment xmi:id="_17RPqxRBEd-0fNU76fYmlA">
                <body>//Note: This is a convenience operation that may be used _instead_ of setUpperValue, not in addition to it.&#xD;
&#xD;
this.upper = new UnlimitedNatural(upper);&#xD;
this.upperValue = new LiteralUnlimitedNatural();&#xD;
((LiteralUnlimitedNatural)this.upperValue).setValue(this.upper);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPrBRBEd-0fNU76fYmlA" name="upper">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPrRRBEd-0fNU76fYmlA" name="setLower">
              <ownedComment xmi:id="_17RPrhRBEd-0fNU76fYmlA">
                <body>//Note: This is a convenience operation that may be used _instead_ of setLowerValue, not in addition to it.&#xD;
&#xD;
this.lower = lower;&#xD;
this.lowerValue = new LiteralInteger();&#xD;
((LiteralInteger)this.lowerValue).setValue(this.lower);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPrxRBEd-0fNU76fYmlA" name="lower">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPsBRBEd-0fNU76fYmlA" name="NamedElement" isAbstract="true">
            <eAnnotations xmi:id="_17RPsRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RPshRBEd-0fNU76fYmlA" general="_17RRZRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPsxRBEd-0fNU76fYmlA" name="name">
              <ownedComment xmi:id="_17RPtBRBEd-0fNU76fYmlA" annotatedElement="_17RPsxRBEd-0fNU76fYmlA">
                <body>The name of the NamedElement.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPtRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPthRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPtxRBEd-0fNU76fYmlA" name="visibility" visibility="public" type="_17RQ0xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RPuBRBEd-0fNU76fYmlA" annotatedElement="_17RPtxRBEd-0fNU76fYmlA">
                <body>Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPuRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPuhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPuxRBEd-0fNU76fYmlA" name="qualifiedName" isReadOnly="true" isDerived="true">
              <ownedComment xmi:id="_17RPvBRBEd-0fNU76fYmlA" annotatedElement="_17RPuxRBEd-0fNU76fYmlA">
                <body>A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPvRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPvhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPvxRBEd-0fNU76fYmlA" name="namespace" type="_17RPyBRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_17RSORRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPwBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPwRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RPwhRBEd-0fNU76fYmlA" name="setName">
              <ownedComment xmi:id="_17RPwxRBEd-0fNU76fYmlA">
                <body>this.name = name;&#xD;
&#xD;
if (name != null) {&#xD;
    if (this.namespace == null) {&#xD;
        this.qualifiedName = name;&#xD;
    } else if (this.namespace.qualifiedName != null) {&#xD;
        this.qualifiedName = this.namespace.qualifiedName + &quot;::&quot; + name;&#xD;
    }&#xD;
}&#xD;
&#xD;
        </body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPxBRBEd-0fNU76fYmlA" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RPxRRBEd-0fNU76fYmlA" name="setVisibility">
              <ownedComment xmi:id="_17RPxhRBEd-0fNU76fYmlA">
                <body>this.visibility = visibility;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RPxxRBEd-0fNU76fYmlA" name="visibility" type="_17RQ0xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RPyBRBEd-0fNU76fYmlA" name="Namespace" isAbstract="true">
            <eAnnotations xmi:id="_17RPyRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RPyhRBEd-0fNU76fYmlA" general="_17RPsBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RPyxRBEd-0fNU76fYmlA" name="member" type="_17RPsBRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_17RSNBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPzBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RPzRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RPzhRBEd-0fNU76fYmlA" name="ownedMember" type="_17RPsBRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" association="_17RSORRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RPzxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RP0BRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RP0RRBEd-0fNU76fYmlA" name="elementImport" visibility="public" type="_17RScBRBEd-0fNU76fYmlA" aggregation="composite" association="_17RShRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RP0hRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RP0xRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RP1BRBEd-0fNU76fYmlA" name="packageImport" visibility="public" type="_17RSihRBEd-0fNU76fYmlA" aggregation="composite" association="_17RSmRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RP1RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RP1hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RP1xRBEd-0fNU76fYmlA" name="importedMember" visibility="public" type="_17RQPxRBEd-0fNU76fYmlA" isDerived="true" association="_17RSpBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RP2BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RP2RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RP2hRBEd-0fNU76fYmlA" name="addOwnedMember" visibility="protected">
              <ownedComment xmi:id="_17RP2xRBEd-0fNU76fYmlA">
                <body>this.addOwnedElement(ownedMember);&#xD;
&#xD;
this.ownedMember.addValue(ownedMember);&#xD;
ownedMember.namespace = this;&#xD;
&#xD;
this.addMember(ownedMember);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RP3BRBEd-0fNU76fYmlA" name="ownedMember" type="_17RPsBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RP3RRBEd-0fNU76fYmlA" name="addMember" visibility="protected">
              <ownedComment xmi:id="_17RP3hRBEd-0fNU76fYmlA">
                <body>// Note: This operation should not be used for owned members. The operation addOwnedMember should be used instead.&#xD;
&#xD;
// Debug.println(&quot;[addMember] member is a &quot; + member.getClass().getName() + &quot;; name = &quot; + member.name);&#xD;
&#xD;
this.member.addValue(member);&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RP3xRBEd-0fNU76fYmlA" name="member" type="_17RPsBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RP4BRBEd-0fNU76fYmlA" name="addElementImport">
              <ownedComment xmi:id="_17RP4RRBEd-0fNU76fYmlA">
                <body>this.addOwnedElement(elementImport);&#xD;
&#xD;
this.elementImport.addValue(elementImport);&#xD;
elementImport.importingNamespace = this;&#xD;
&#xD;
this.addImportedMember(elementImport.importedElement);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RP4hRBEd-0fNU76fYmlA" name="elementImport" type="_17RScBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RP4xRBEd-0fNU76fYmlA" name="addPackageImport">
              <ownedComment xmi:id="_17RP5BRBEd-0fNU76fYmlA">
                <body>this.addOwnedElement(packageImport);&#xD;
&#xD;
this.packageImport.addValue(packageImport);&#xD;
packageImport.importingNamespace = this;&#xD;
&#xD;
PackageableElementList importedElements = packageImport.importedPackage.visibleMembers();&#xD;
for (int i = 0; i &lt; importedElements.size(); i++) {&#xD;
  PackageableElement importedElement = importedElements.getValue(i);&#xD;
  this.addImportedMember(importedElement);&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RP5RRBEd-0fNU76fYmlA" name="packageImport" type="_17RSihRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RP5hRBEd-0fNU76fYmlA" name="addImportedMember" visibility="private">
              <ownedComment xmi:id="_17RP5xRBEd-0fNU76fYmlA">
                <body>this.addMember(importedMember);&#xD;
this.importedMember.addValue(importedMember);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RP6BRBEd-0fNU76fYmlA" name="importedMember" type="_17RQPxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RP6RRBEd-0fNU76fYmlA" name="Operation">
            <eAnnotations xmi:id="_17RP6hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RP6xRBEd-0fNU76fYmlA" name="zero_or_one_method" constrainedElement="_17RP6RRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RP7BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RP7RRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RP7hRBEd-0fNU76fYmlA" annotatedElement="_17RP6xRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>If an operation is abstract it must have no method. Otherwise it must have exactly one method.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RP7xRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>(self.isAbstract and self.method->isEmpty()) xor (not self.isAbstract and self.method->size() = 1)</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RP8BRBEd-0fNU76fYmlA" general="_17RPCxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RP8RRBEd-0fNU76fYmlA" name="isQuery">
              <ownedComment xmi:id="_17RP8hRBEd-0fNU76fYmlA" annotatedElement="_17RP8RRBEd-0fNU76fYmlA">
                <body>Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false).</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RP8xRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RP9BRBEd-0fNU76fYmlA" name="isOrdered" isDerived="true">
              <ownedComment xmi:id="_17RP9RRBEd-0fNU76fYmlA" annotatedElement="_17RP9BRBEd-0fNU76fYmlA">
                <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RP9hRBEd-0fNU76fYmlA" annotatedElement="_17RP9BRBEd-0fNU76fYmlA">
                <body>Specifies whether the return parameter is ordered or not, if present.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RP9xRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RP-BRBEd-0fNU76fYmlA" name="isUnique" isDerived="true">
              <ownedComment xmi:id="_17RP-RRBEd-0fNU76fYmlA" annotatedElement="_17RP-BRBEd-0fNU76fYmlA">
                <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RP-hRBEd-0fNU76fYmlA" annotatedElement="_17RP-BRBEd-0fNU76fYmlA">
                <body>Specifies whether the return parameter is unique or not, if present.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RP-xRBEd-0fNU76fYmlA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RP_BRBEd-0fNU76fYmlA" name="lower" visibility="public" isDerived="true">
              <ownedComment xmi:id="_17RP_RRBEd-0fNU76fYmlA" annotatedElement="_17RP_BRBEd-0fNU76fYmlA">
                <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RP_hRBEd-0fNU76fYmlA" annotatedElement="_17RP_BRBEd-0fNU76fYmlA">
                <body>Specifies the lower multiplicity of the return parameter, if present.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RP_xRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQABRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQARRBEd-0fNU76fYmlA" name="upper" visibility="public" isDerived="true">
              <ownedComment xmi:id="_17RQAhRBEd-0fNU76fYmlA" annotatedElement="_17RQARRBEd-0fNU76fYmlA">
                <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQAxRBEd-0fNU76fYmlA" annotatedElement="_17RQARRBEd-0fNU76fYmlA">
                <body>Specifies the upper multiplicity of the return parameter, if present.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQBBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQBRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQBhRBEd-0fNU76fYmlA" name="class" type="_17RQ2RRBEd-0fNU76fYmlA" association="_17RSLBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQBxRBEd-0fNU76fYmlA" annotatedElement="_17RQBhRBEd-0fNU76fYmlA">
                <body>The class that owns the operation.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQCBRBEd-0fNU76fYmlA" annotatedElement="_17RQBhRBEd-0fNU76fYmlA">
                <body>The class that owns this operation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQCRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQChRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQCxRBEd-0fNU76fYmlA" name="redefinedOperation" type="_17RP6RRBEd-0fNU76fYmlA" association="_17RSLhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQDBRBEd-0fNU76fYmlA" annotatedElement="_17RQCxRBEd-0fNU76fYmlA">
                <body>References the Operations that are redefined by this Operation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQDRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQDhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQDxRBEd-0fNU76fYmlA" name="type" type="_17RQrxRBEd-0fNU76fYmlA" isDerived="true" association="_17RSMRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQEBRBEd-0fNU76fYmlA" annotatedElement="_17RQDxRBEd-0fNU76fYmlA">
                <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQERRBEd-0fNU76fYmlA" annotatedElement="_17RQDxRBEd-0fNU76fYmlA">
                <body>Specifies the return result of the operation, if present.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQEhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQExRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQFBRBEd-0fNU76fYmlA" name="ownedParameter" type="_17RQQhRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" redefinedProperty="_17RPExRBEd-0fNU76fYmlA" association="_17RSJRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQFRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQFhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RQFxRBEd-0fNU76fYmlA" name="setIsQuery">
              <ownedComment xmi:id="_17RQGBRBEd-0fNU76fYmlA">
                <body>this.isQuery = isQuery;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQGRRBEd-0fNU76fYmlA" name="isQuery">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQGhRBEd-0fNU76fYmlA" name="addOwnedParameter">
              <ownedComment xmi:id="_17RQGxRBEd-0fNU76fYmlA">
                <body>super.addOwnedParameter(ownedParameter);&#xD;
this.ownedParameter.addValue(ownedParameter);&#xD;
ownedParameter.operation = this;&#xD;
&#xD;
if (ownedParameter.direction == ParameterDirectionKind.return_) {&#xD;
    this.isOrdered = ownedParameter.multiplicityElement.isOrdered;&#xD;
    this.isUnique = ownedParameter.multiplicityElement.isUnique;&#xD;
    this.lower = ownedParameter.multiplicityElement.lower;&#xD;
    this.upper = ownedParameter.multiplicityElement.upper;&#xD;
    this.type = ownedParameter.type;&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQHBRBEd-0fNU76fYmlA" name="ownedParameter" type="_17RQQhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQHRRBEd-0fNU76fYmlA" name="addRedefinedOperation">
              <ownedComment xmi:id="_17RQHhRBEd-0fNU76fYmlA">
                <body>super.addRedefinedElement(redefinedOperation);&#xD;
this.redefinedOperation.addValue(redefinedOperation);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQHxRBEd-0fNU76fYmlA" name="redefinedOperation" type="_17RP6RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQIBRBEd-0fNU76fYmlA" name="addMethod">
              <ownedComment xmi:id="_17RQIRRBEd-0fNU76fYmlA">
                <body>// Note: To have a method, an operation must be owned by a class. The method must be an owned behavior of the class.&#xD;
&#xD;
this.method.addValue(method);&#xD;
method.specification = this;&#xD;
&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQIhRBEd-0fNU76fYmlA" name="method" type="_17ROTBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RQIxRBEd-0fNU76fYmlA" name="Package">
            <eAnnotations xmi:id="_17RQJBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RQJRRBEd-0fNU76fYmlA" general="_17RPyBRBEd-0fNU76fYmlA"/>
            <generalization xmi:id="_17RQJhRBEd-0fNU76fYmlA" general="_17RQPxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RQJxRBEd-0fNU76fYmlA" name="packagedElement" visibility="public" type="_17RQPxRBEd-0fNU76fYmlA" aggregation="composite" association="_17RSJxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQKBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQKRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQKhRBEd-0fNU76fYmlA" name="ownedType" visibility="public" type="_17RQrxRBEd-0fNU76fYmlA" isDerived="true" aggregation="composite" association="_17RSohRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQKxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQLBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQLRRBEd-0fNU76fYmlA" name="nestedPackage" visibility="public" type="_17RQIxRBEd-0fNU76fYmlA" isDerived="true" aggregation="composite" association="_17RSoxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQLhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQLxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQMBRBEd-0fNU76fYmlA" name="nestingPackage" visibility="public" type="_17RQIxRBEd-0fNU76fYmlA" association="_17RSoxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQMRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQMhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RQMxRBEd-0fNU76fYmlA" name="addPackagedElement">
              <ownedComment xmi:id="_17RQNBRBEd-0fNU76fYmlA">
                <body>super.addOwnedMember(packagedElement);&#xD;
this.packagedElement.addValue(packagedElement);&#xD;
&#xD;
if (packagedElement instanceof Type) {&#xD;
  this.ownedType.addValue((Type)packagedElement);&#xD;
  ((Type)packagedElement).package_ = this;&#xD;
}&#xD;
&#xD;
if (packagedElement instanceof Package) {&#xD;
  this.nestedPackage.addValue((Package)packagedElement);&#xD;
  ((Package)packagedElement).nestingPackage = this;&#xD;
}&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQNRRBEd-0fNU76fYmlA" name="packagedElement" type="_17RQPxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQNhRBEd-0fNU76fYmlA" name="visibleMembers">
              <ownedComment xmi:id="_17RQNxRBEd-0fNU76fYmlA">
                <body>PackageableElementList visibleMembers = new PackageableElementList();&#xD;
&#xD;
for (int i = 0; i &lt; this.packagedElement.size(); i++) {&#xD;
  PackageableElement member = this.packagedElement.getValue(i);&#xD;
  if (this.makesVisible(member)) {&#xD;
    visibleMembers.addValue(member);&#xD;
  }&#xD;
}&#xD;
&#xD;
return visibleMembers;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQOBRBEd-0fNU76fYmlA" name="" type="_17RQPxRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQORRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQOhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQOxRBEd-0fNU76fYmlA" name="makesVisible">
              <ownedComment xmi:id="_17RQPBRBEd-0fNU76fYmlA">
                <body>for (int i = 0; i &lt; this.ownedMember.size(); i++) {&#xD;
  NamedElement member = this.ownedMember.getValue(i);&#xD;
  if (member == el) {&#xD;
    return member.visibility == null || member.visibility == VisibilityKind.public_;&#xD;
  }&#xD;
}&#xD;
&#xD;
for (int i=0; i &lt; this.elementImport.size(); i++) {&#xD;
  ElementImport elementImport = this.elementImport.getValue(i);&#xD;
  if (elementImport.importedElement == el) {&#xD;
    return true;&#xD;
  }&#xD;
}&#xD;
&#xD;
for (int i=0; i &lt; this.packageImport.size(); i++) {&#xD;
  PackageImport packageImport = this.packageImport.getValue(i);&#xD;
  if (packageImport.visibility == VisibilityKind.public_) {&#xD;
    // NOTE: This won't work unless the imported package members have already been loaded&#xD;
    NamedElementList packageMembers = packageImport.importedPackage.member;&#xD;
    for (int j=0; j &lt; packageMembers.size(); j++) {&#xD;
      if (packageMembers.getValue(j) == el) {&#xD;
        return true;&#xD;
      }&#xD;
    }&#xD;
  }&#xD;
}&#xD;
&#xD;
return false;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQPRRBEd-0fNU76fYmlA" name="el" type="_17RPsBRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RQPhRBEd-0fNU76fYmlA" name="" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RQPxRBEd-0fNU76fYmlA" name="PackageableElement" isAbstract="true">
            <eAnnotations xmi:id="_17RQQBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RQQRRBEd-0fNU76fYmlA" general="_17RPsBRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RQQhRBEd-0fNU76fYmlA" name="Parameter">
            <eAnnotations xmi:id="_17RQQxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RQRBRBEd-0fNU76fYmlA" general="_17RQtRRBEd-0fNU76fYmlA"/>
            <generalization xmi:id="_17RQRRRBEd-0fNU76fYmlA" general="_17RPeRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RQRhRBEd-0fNU76fYmlA" name="direction" visibility="public" type="_17RQyBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQRxRBEd-0fNU76fYmlA" annotatedElement="_17RQRhRBEd-0fNU76fYmlA">
                <body>Indicates whether a parameter is being sent into or out of a behavioral element.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQSBRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA" association="_17RSJRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQSRRBEd-0fNU76fYmlA" annotatedElement="_17RQSBRBEd-0fNU76fYmlA">
                <body>References the Operation for which this is a formal parameter.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQShRBEd-0fNU76fYmlA" annotatedElement="_17RQSBRBEd-0fNU76fYmlA">
                <body>References the Operation owning this parameter.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQSxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQTBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RQTRRBEd-0fNU76fYmlA" name="setDirection">
              <ownedComment xmi:id="_17RQThRBEd-0fNU76fYmlA">
                <body>this.direction = direction;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQTxRBEd-0fNU76fYmlA" name="direction" type="_17RQyBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQUBRBEd-0fNU76fYmlA" name="setIsOrdered">
              <ownedComment xmi:id="_17RQURRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setIsOrdered(isOrdered);</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQUhRBEd-0fNU76fYmlA" name="isOrdered">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQUxRBEd-0fNU76fYmlA" name="setIsUnique">
              <ownedComment xmi:id="_17RQVBRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setIsUnique(isUnique);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQVRRBEd-0fNU76fYmlA" name="isUnique">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQVhRBEd-0fNU76fYmlA" name="setUpperValue">
              <ownedComment xmi:id="_17RQVxRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setUpperValue(upperValue);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQWBRBEd-0fNU76fYmlA" name="upperValue" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQWRRBEd-0fNU76fYmlA" name="setLowerValue">
              <ownedComment xmi:id="_17RQWhRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setLowerValue(lowerValue);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQWxRBEd-0fNU76fYmlA" name="lowerValue" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQXBRBEd-0fNU76fYmlA" name="setUpper">
              <ownedComment xmi:id="_17RQXRRBEd-0fNU76fYmlA">
                <body>//Note: This is a convenience operation that may be used _instead_ of setUpperValue, not in addition to it.&#xD;
&#xD;
this.multiplicityElement.setUpper(upper);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQXhRBEd-0fNU76fYmlA" name="upper">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQXxRBEd-0fNU76fYmlA" name="setLower">
              <ownedComment xmi:id="_17RQYBRBEd-0fNU76fYmlA">
                <body>//Note: This is a convenience operation that may be used _instead_ of setLowerValue, not in addition to it.&#xD;
&#xD;
this.multiplicityElement.setLower(lower);&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQYRRBEd-0fNU76fYmlA" name="lower">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RQYhRBEd-0fNU76fYmlA" name="PrimitiveType">
            <eAnnotations xmi:id="_17RQYxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RQZBRBEd-0fNU76fYmlA" general="_17RRWxRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RQZRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            </generalization>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RQZhRBEd-0fNU76fYmlA" name="Property">
            <eAnnotations xmi:id="_17RQZxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RQaBRBEd-0fNU76fYmlA" name="no_derivation" constrainedElement="_17RQZhRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RQaRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RQahRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RQaxRBEd-0fNU76fYmlA" annotatedElement="_17RQaBRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>isDerived and isDerivedUnion must be false&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RQbBRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>not self.isDerived and not self.isDerivedUnion</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RQbRRBEd-0fNU76fYmlA" general="_17RO1BRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RQbhRBEd-0fNU76fYmlA" name="isDerived">
              <ownedComment xmi:id="_17RQbxRBEd-0fNU76fYmlA" annotatedElement="_17RQbhRBEd-0fNU76fYmlA">
                <body>If isDerived is true, the value of the attribute is derived from information elsewhere.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQcBRBEd-0fNU76fYmlA" annotatedElement="_17RQbhRBEd-0fNU76fYmlA">
                <body>Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RQcRRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQchRBEd-0fNU76fYmlA" name="isReadOnly" redefinedProperty="_17RO2RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQcxRBEd-0fNU76fYmlA" annotatedElement="_17RQchRBEd-0fNU76fYmlA">
                <body>This redefines the corresponding attribute in Basic::Property and Abstractions::StructuralFeature.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQdBRBEd-0fNU76fYmlA" annotatedElement="_17RQchRBEd-0fNU76fYmlA">
                <body>If true, the attribute may only be read, and not written.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RQdRRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQdhRBEd-0fNU76fYmlA" name="isDerivedUnion">
              <ownedComment xmi:id="_17RQdxRBEd-0fNU76fYmlA" annotatedElement="_17RQdhRBEd-0fNU76fYmlA">
                <body>Specifies whether the property is derived as the union of all of the properties that are constrained to subset it.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RQeBRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQeRRBEd-0fNU76fYmlA" name="aggregation" visibility="public" type="_17RQwBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQehRBEd-0fNU76fYmlA" annotatedElement="_17RQeRRBEd-0fNU76fYmlA">
                <body>Specifies the kind of aggregation that applies to the Property.</body>
              </ownedComment>
              <defaultValue xmi:type="uml:InstanceValue" xmi:id="_17RQexRBEd-0fNU76fYmlA" name="none" type="_17RQwBRBEd-0fNU76fYmlA" instance="_17RQwhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQfBRBEd-0fNU76fYmlA" name="isComposite" isDerived="true">
              <ownedComment xmi:id="_17RQfRRBEd-0fNU76fYmlA" annotatedElement="_17RQfBRBEd-0fNU76fYmlA">
                <body>If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQfhRBEd-0fNU76fYmlA" annotatedElement="_17RQfBRBEd-0fNU76fYmlA">
                <body>This is a derived value, indicating whether the aggregation of the Property is composite or not.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RQfxRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQgBRBEd-0fNU76fYmlA" name="owningAssociation" type="_17RRrhRBEd-0fNU76fYmlA" association="_17RR4hRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQgRRBEd-0fNU76fYmlA" annotatedElement="_17RQgBRBEd-0fNU76fYmlA">
                <body>References the owning association of this property, if any.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQghRBEd-0fNU76fYmlA" annotatedElement="_17RQgBRBEd-0fNU76fYmlA">
                <body>References the owning association of this property.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQgxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQhBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQhRRBEd-0fNU76fYmlA" name="datatype" type="_17RRWxRBEd-0fNU76fYmlA" association="_17RSIxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQhhRBEd-0fNU76fYmlA" annotatedElement="_17RQhRRBEd-0fNU76fYmlA">
                <body>The DataType that owns this Operation.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQhxRBEd-0fNU76fYmlA" annotatedElement="_17RQhRRBEd-0fNU76fYmlA">
                <body>The DataType that owns this Property.

</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQiBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQiRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQihRBEd-0fNU76fYmlA" name="association" type="_17RRrhRBEd-0fNU76fYmlA" association="_17RR4BRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQixRBEd-0fNU76fYmlA" annotatedElement="_17RQihRBEd-0fNU76fYmlA">
                <body>References the association of which this property is a member, if any.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQjBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQjRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQjhRBEd-0fNU76fYmlA" name="class" type="_17RQ2RRBEd-0fNU76fYmlA" association="_17RSAhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQjxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQkBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQkRRBEd-0fNU76fYmlA" name="opposite" type="_17RQZhRBEd-0fNU76fYmlA" isDerived="true" association="_17RSHRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQkhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQkxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RQlBRBEd-0fNU76fYmlA" name="setIsReadOnly">
              <ownedComment xmi:id="_17RQlRRBEd-0fNU76fYmlA">
                <body>this.isReadOnly = isReadOnly;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQlhRBEd-0fNU76fYmlA" name="isReadOnly">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQlxRBEd-0fNU76fYmlA" name="setAggregation">
              <ownedComment xmi:id="_17RQmBRBEd-0fNU76fYmlA">
                <body>this.aggregation = aggregation;&#xD;
this.isComposite = (aggregation == AggregationKind.composite);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQmRRBEd-0fNU76fYmlA" name="aggregation" type="_17RQwBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RQmhRBEd-0fNU76fYmlA" name="Slot">
            <eAnnotations xmi:id="_17RQmxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RQnBRBEd-0fNU76fYmlA" general="_17RRZRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RQnRRBEd-0fNU76fYmlA" name="owningInstance" type="_17RPKxRBEd-0fNU76fYmlA" association="_17RSSBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQnhRBEd-0fNU76fYmlA" annotatedElement="_17RQnRRBEd-0fNU76fYmlA">
                <body>The instance specification that owns this slot.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQnxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQoBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQoRRBEd-0fNU76fYmlA" name="definingFeature" type="_17RO1BRBEd-0fNU76fYmlA" association="_17RSGBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQohRBEd-0fNU76fYmlA" annotatedElement="_17RQoRRBEd-0fNU76fYmlA">
                <body>The structural feature that specifies the values that may be held by the slot.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQoxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQpBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQpRRBEd-0fNU76fYmlA" name="value" type="_17RO0RRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RSExRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQphRBEd-0fNU76fYmlA" annotatedElement="_17RQpRRBEd-0fNU76fYmlA">
                <body>The value or values corresponding to the defining feature for the owning instance specification.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQpxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQqBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RQqRRBEd-0fNU76fYmlA" name="setDefiningFeature">
              <ownedComment xmi:id="_17RQqhRBEd-0fNU76fYmlA">
                <body>this.definingFeature = definingFeature;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQqxRBEd-0fNU76fYmlA" name="definingFeature" type="_17RO1BRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RQrBRBEd-0fNU76fYmlA" name="addValue">
              <ownedComment xmi:id="_17RQrRRBEd-0fNU76fYmlA">
                <body>this.addOwnedElement(value);&#xD;
this.value.addValue(value);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQrhRBEd-0fNU76fYmlA" name="value" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RQrxRBEd-0fNU76fYmlA" name="Type" isAbstract="true">
            <eAnnotations xmi:id="_17RQsBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RQsRRBEd-0fNU76fYmlA" general="_17RQPxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RQshRBEd-0fNU76fYmlA" name="package" visibility="public" type="_17RQIxRBEd-0fNU76fYmlA" association="_17RSohRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQsxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQtBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RQtRRBEd-0fNU76fYmlA" name="TypedElement">
            <eAnnotations xmi:id="_17RQthRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RQtxRBEd-0fNU76fYmlA" general="_17RPsBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RQuBRBEd-0fNU76fYmlA" name="type" type="_17RQrxRBEd-0fNU76fYmlA" association="_17RSDhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQuRRBEd-0fNU76fYmlA" annotatedElement="_17RQuBRBEd-0fNU76fYmlA">
                <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQuhRBEd-0fNU76fYmlA" annotatedElement="_17RQuBRBEd-0fNU76fYmlA">
                <body>The type of the TypedElement.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQuxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQvBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RQvRRBEd-0fNU76fYmlA" name="setType">
              <ownedComment xmi:id="_17RQvhRBEd-0fNU76fYmlA">
                <body>this.type = type;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RQvxRBEd-0fNU76fYmlA" name="type" type="_17RQrxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_17RQwBRBEd-0fNU76fYmlA" name="AggregationKind">
            <eAnnotations xmi:id="_17RQwRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedLiteral xmi:id="_17RQwhRBEd-0fNU76fYmlA" name="none">
              <ownedComment xmi:id="_17RQwxRBEd-0fNU76fYmlA" annotatedElement="_17RQwhRBEd-0fNU76fYmlA">
                <body>Indicates that the property has no aggregation.</body>
              </ownedComment>
            </ownedLiteral>
            <ownedLiteral xmi:id="_17RQxBRBEd-0fNU76fYmlA" name="shared">
              <ownedComment xmi:id="_17RQxRRBEd-0fNU76fYmlA" annotatedElement="_17RQxBRBEd-0fNU76fYmlA">
                <body>Indicates that the property has a shared aggregation.</body>
              </ownedComment>
            </ownedLiteral>
            <ownedLiteral xmi:id="_17RQxhRBEd-0fNU76fYmlA" name="composite">
              <ownedComment xmi:id="_17RQxxRBEd-0fNU76fYmlA" annotatedElement="_17RQxhRBEd-0fNU76fYmlA">
                <body>Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts).</body>
              </ownedComment>
            </ownedLiteral>
          </packagedElement>
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_17RQyBRBEd-0fNU76fYmlA" name="ParameterDirectionKind">
            <eAnnotations xmi:id="_17RQyRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedLiteral xmi:id="_17RQyhRBEd-0fNU76fYmlA" name="in">
              <ownedComment xmi:id="_17RQyxRBEd-0fNU76fYmlA" annotatedElement="_17RQyhRBEd-0fNU76fYmlA">
                <body>Indicates that parameter values are passed into the behavioral element by the caller.</body>
              </ownedComment>
            </ownedLiteral>
            <ownedLiteral xmi:id="_17RQzBRBEd-0fNU76fYmlA" name="inout">
              <ownedComment xmi:id="_17RQzRRBEd-0fNU76fYmlA" annotatedElement="_17RQzBRBEd-0fNU76fYmlA">
                <body>Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.</body>
              </ownedComment>
            </ownedLiteral>
            <ownedLiteral xmi:id="_17RQzhRBEd-0fNU76fYmlA" name="out">
              <ownedComment xmi:id="_17RQzxRBEd-0fNU76fYmlA" annotatedElement="_17RQzhRBEd-0fNU76fYmlA">
                <body>Indicates that parameter values are passed from a behavioral element out to the caller.</body>
              </ownedComment>
            </ownedLiteral>
            <ownedLiteral xmi:id="_17RQ0BRBEd-0fNU76fYmlA" name="return">
              <ownedComment xmi:id="_17RQ0RRBEd-0fNU76fYmlA" annotatedElement="_17RQ0BRBEd-0fNU76fYmlA">
                <body>Indicates that parameter values are passed as return values from a behavioral element back to the caller.</body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RQ0hRBEd-0fNU76fYmlA"/>
            </ownedLiteral>
          </packagedElement>
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_17RQ0xRBEd-0fNU76fYmlA" name="VisibilityKind">
            <eAnnotations xmi:id="_17RQ1BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedLiteral xmi:id="_17RQ1RRBEd-0fNU76fYmlA" name="public"/>
            <ownedLiteral xmi:id="_17RQ1hRBEd-0fNU76fYmlA" name="private"/>
            <ownedLiteral xmi:id="_17RQ1xRBEd-0fNU76fYmlA" name="protected"/>
            <ownedLiteral xmi:id="_17RQ2BRBEd-0fNU76fYmlA" name="package"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RQ2RRBEd-0fNU76fYmlA" name="Class">
            <eAnnotations xmi:id="_17RQ2hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RQ2xRBEd-0fNU76fYmlA" name="active_class_classifier_behavior" constrainedElement="_17RQ2RRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RQ3BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RQ3RRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RQ3hRBEd-0fNU76fYmlA" annotatedElement="_17RQ2xRBEd-0fNU76fYmlA">
                <body>Only active classes may have classifier behaviors.</body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RQ3xRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.classifierBehavior->notEmpty() implies self.isActive&#xD;&#xA;</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17RQ4BRBEd-0fNU76fYmlA" name="active_class_specialization" constrainedElement="_17RQ2RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQ4RRBEd-0fNU76fYmlA" annotatedElement="_17RQ4BRBEd-0fNU76fYmlA _17RQ2RRBEd-0fNU76fYmlA">
                <body>Only an active class may specialize an active class.</body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RQ4hRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.parents()->exist(isActive) implies self.isActive</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17RQ4xRBEd-0fNU76fYmlA" name="abstract_class" constrainedElement="_17RQ2RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQ5BRBEd-0fNU76fYmlA" annotatedElement="_17RQ4xRBEd-0fNU76fYmlA _17RQ2RRBEd-0fNU76fYmlA">
                <body>Only an abstract class may have abstract behavioral features.</body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RQ5RRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.member->select(oclIsKindOf(BehavioralFeature))->exists(isAbstract) implies self.isAbstract</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RQ5hRBEd-0fNU76fYmlA" general="_17ROOBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RQ5xRBEd-0fNU76fYmlA" name="isAbstract" redefinedProperty="_17RRIRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQ6BRBEd-0fNU76fYmlA" annotatedElement="_17RQ5xRBEd-0fNU76fYmlA">
                <body>True when a class is abstract.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RQ6RRBEd-0fNU76fYmlA" annotatedElement="_17RQ5xRBEd-0fNU76fYmlA">
                <body>If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RQ6hRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQ6xRBEd-0fNU76fYmlA" name="ownedOperation" type="_17RP6RRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RSLBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQ7BRBEd-0fNU76fYmlA" annotatedElement="_17RQ6xRBEd-0fNU76fYmlA">
                <body>The operations owned by the class.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQ7RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQ7hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQ7xRBEd-0fNU76fYmlA" name="superClass" type="_17RQ2RRBEd-0fNU76fYmlA" isDerived="true" association="_17RSCRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQ8BRBEd-0fNU76fYmlA" annotatedElement="_17RQ7xRBEd-0fNU76fYmlA">
                <body>This gives the superclasses of a class.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQ8RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQ8hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQ8xRBEd-0fNU76fYmlA" name="isActive">
              <ownedComment xmi:id="_17RQ9BRBEd-0fNU76fYmlA" annotatedElement="_17RQ8xRBEd-0fNU76fYmlA">
                <body>Determines whether an object specified by this class is active or not. If true, then the owning class is referred to as an active class. If false, then such a class is referred to as a passive class.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RQ9RRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQ9hRBEd-0fNU76fYmlA" name="ownedReception" type="_17ROoxRBEd-0fNU76fYmlA" aggregation="composite" association="_17RSBBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RQ9xRBEd-0fNU76fYmlA" annotatedElement="_17RQ9hRBEd-0fNU76fYmlA">
                <body>Receptions that objects of this class are willing to accept.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQ-BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQ-RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQ-hRBEd-0fNU76fYmlA" name="ownedAttribute" type="_17RQZhRBEd-0fNU76fYmlA" aggregation="composite" association="_17RSAhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQ-xRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQ_BRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RQ_RRBEd-0fNU76fYmlA" name="nestedClassifier" visibility="public" type="_17RRHRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RSnhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RQ_hRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RQ_xRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RRABRBEd-0fNU76fYmlA" name="setIsAbstract">
              <ownedComment xmi:id="_17RRARRBEd-0fNU76fYmlA">
                <body>this.isAbstract = isAbstract;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRAhRBEd-0fNU76fYmlA" name="isAbstract">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRAxRBEd-0fNU76fYmlA" name="setIsActive">
              <ownedComment xmi:id="_17RRBBRBEd-0fNU76fYmlA">
                <body>this.isActive = isActive;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRBRRBEd-0fNU76fYmlA" name="isActive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRBhRBEd-0fNU76fYmlA" name="addGeneralization">
              <ownedComment xmi:id="_17RRBxRBEd-0fNU76fYmlA">
                <body>super.addGeneralization(generalization);&#xD;
&#xD;
if (generalization.general instanceof Class_) {&#xD;
    this.superClass.addValue((Class_)generalization.general);&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRCBRBEd-0fNU76fYmlA" name="generalization" type="_17RRmRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRCRRBEd-0fNU76fYmlA" name="addOwnedAttribute">
              <ownedComment xmi:id="_17RRChRBEd-0fNU76fYmlA">
                <body>super.addAttribute(ownedAttribute);&#xD;
super.addOwnedMember(ownedAttribute);&#xD;
&#xD;
this.ownedAttribute.addValue(ownedAttribute);&#xD;
ownedAttribute.class_ = this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRCxRBEd-0fNU76fYmlA" name="ownedAttribute" type="_17RQZhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRDBRBEd-0fNU76fYmlA" name="addOwnedOperation">
              <ownedComment xmi:id="_17RRDRRBEd-0fNU76fYmlA">
                <body>super.addFeature(ownedOperation);&#xD;
super.addOwnedMember(ownedOperation);&#xD;
&#xD;
this.ownedOperation.addValue(ownedOperation);&#xD;
ownedOperation.class_ = this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRDhRBEd-0fNU76fYmlA" name="ownedOperation" type="_17RP6RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRDxRBEd-0fNU76fYmlA" name="addOwnedReception">
              <ownedComment xmi:id="_17RREBRBEd-0fNU76fYmlA">
                <body>super.addOwnedMember(ownedReception);&#xD;
super.addFeature(ownedReception);&#xD;
&#xD;
this.ownedReception.addValue(ownedReception);</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRERRBEd-0fNU76fYmlA" name="ownedReception" type="_17ROoxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RREhRBEd-0fNU76fYmlA" name="inherit" visibility="public">
              <ownedComment xmi:id="_17RRExRBEd-0fNU76fYmlA">
                <body>// &quot;The inherit operation is overridden to exclude redefined properties.&quot;&#xD;
&#xD;
RedefinableElementList redefinableMembers = new RedefinableElementList();&#xD;
&#xD;
for (int i = 0; i &lt; this.ownedMember.size(); i++) {&#xD;
    if (this.ownedMember.getValue(i) instanceof RedefinableElement) {&#xD;
        redefinableMembers.addValue((RedefinableElement)this.ownedMember.getValue(i));&#xD;
    }&#xD;
}&#xD;
&#xD;
NamedElementList inherited = new NamedElementList();&#xD;
&#xD;
for (int i = 0; i &lt;inhs.size(); i++) {&#xD;
    NamedElement inh = inhs.getValue(i);&#xD;
    boolean exclude = false;&#xD;
    for (int j = 0; j &lt; redefinableMembers.size(); j++) {&#xD;
        RedefinableElementList redefinedElements = redefinableMembers.getValue(j).redefinedElement;&#xD;
        for (int k = 0; k &lt; redefinedElements.size(); k++) {&#xD;
            if (redefinedElements.getValue(k) == inh) {&#xD;
                exclude = true;&#xD;
                break;&#xD;
            }&#xD;
        }&#xD;
        if (exclude) break;&#xD;
    }&#xD;
&#xD;
    if (!exclude) {&#xD;
        inherited.addValue(inh);&#xD;
    }&#xD;
}&#xD;
&#xD;
return inherited;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRFBRBEd-0fNU76fYmlA" name="inhs" type="_17RPsBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRFRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRFhRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RRFxRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RPsBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRGBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRGRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRGhRBEd-0fNU76fYmlA" name="addNestedClassifier">
              <ownedComment xmi:id="_17RRGxRBEd-0fNU76fYmlA">
                <body>this.addOwnedMember(nestedClassifier);&#xD;
this.nestedClassifier.addValue(nestedClassifier);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRHBRBEd-0fNU76fYmlA" name="nestedClassifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RRHRRBEd-0fNU76fYmlA" name="Classifier" isAbstract="true">
            <eAnnotations xmi:id="_17RRHhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RRHxRBEd-0fNU76fYmlA" general="_17RQrxRBEd-0fNU76fYmlA"/>
            <generalization xmi:id="_17RRIBRBEd-0fNU76fYmlA" general="_17RPyBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RRIRRBEd-0fNU76fYmlA" name="isAbstract">
              <ownedComment xmi:id="_17RRIhRBEd-0fNU76fYmlA" annotatedElement="_17RRIRRBEd-0fNU76fYmlA">
                <body>If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.

</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RRIxRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRJBRBEd-0fNU76fYmlA" name="generalization" type="_17RRmRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RR9BRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRJRRBEd-0fNU76fYmlA" annotatedElement="_17RRJBRBEd-0fNU76fYmlA">
                <body>Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRJhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRJxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRKBRBEd-0fNU76fYmlA" name="feature" type="_17RRiRRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_17RR6RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRKRRBEd-0fNU76fYmlA" annotatedElement="_17RRKBRBEd-0fNU76fYmlA">
                <body>Redefines the corresponding association in Abstractions.  Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RRKhRBEd-0fNU76fYmlA" annotatedElement="_17RRKBRBEd-0fNU76fYmlA">
                <body>Specifies each feature defined in the classifier.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRKxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRLBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRLRRBEd-0fNU76fYmlA" name="inheritedMember" type="_17RPsBRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" association="_17RR_RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRLhRBEd-0fNU76fYmlA" annotatedElement="_17RRLRRBEd-0fNU76fYmlA">
                <body>Specifies all elements inherited by this classifier from the general classifiers.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRLxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRMBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRMRRBEd-0fNU76fYmlA" name="attribute" type="_17RQZhRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_17RR7xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRMhRBEd-0fNU76fYmlA" annotatedElement="_17RRMRRBEd-0fNU76fYmlA">
                <body>Refers to all of the Properties that are direct (i.e. not inherited or import fUML.Syntax.d) attributes of the classifier.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRMxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRNBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRNRRBEd-0fNU76fYmlA" name="general" type="_17RRHRRBEd-0fNU76fYmlA" isDerived="true" association="_17RR9hRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRNhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRNxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RROBRBEd-0fNU76fYmlA" name="isFinalSpecialization" visibility="public">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RRORRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RROhRBEd-0fNU76fYmlA" name="addFeature" visibility="protected">
              <ownedComment xmi:id="_17RROxRBEd-0fNU76fYmlA">
                <body>// Note: This operation should not be used directly to add Properties. The addAttribute operation should be used instead.&#xD;
&#xD;
this.feature.addValue(feature);&#xD;
feature.featuringClassifier.add(this);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRPBRBEd-0fNU76fYmlA" name="feature" type="_17RRiRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRPRRBEd-0fNU76fYmlA" name="addAttribute" visibility="protected">
              <ownedComment xmi:id="_17RRPhRBEd-0fNU76fYmlA">
                <body>this.addFeature(attribute);&#xD;
this.attribute.addValue(attribute);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRPxRBEd-0fNU76fYmlA" name="attribute" type="_17RQZhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRQBRBEd-0fNU76fYmlA" name="addGeneralization">
              <ownedComment xmi:id="_17RRQRRBEd-0fNU76fYmlA">
                <body>this.addOwnedElement(generalization);&#xD;
this.generalization.addValue(generalization);&#xD;
generalization.specific = this;&#xD;
this.general.addValue(generalization.general);&#xD;
&#xD;
NamedElementList inheritedMembers = this.inherit(generalization.general.inheritableMembers(this));&#xD;
&#xD;
for (int i = 0; i &lt; inheritedMembers.size(); i++) {&#xD;
    NamedElement inheritedMember = inheritedMembers.getValue(i);&#xD;
    this.addMember(inheritedMember);&#xD;
    this.inheritedMember.addValue(inheritedMember);&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRQhRBEd-0fNU76fYmlA" name="generalization" type="_17RRmRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRQxRBEd-0fNU76fYmlA" name="setIsAbstract">
              <ownedComment xmi:id="_17RRRBRBEd-0fNU76fYmlA">
                <body>this.isAbstract = isAbstract;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRRRRBEd-0fNU76fYmlA" name="isAbstract">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRRhRBEd-0fNU76fYmlA" name="inherit">
              <ownedComment xmi:id="_17RRRxRBEd-0fNU76fYmlA">
                <body>NamedElementList inheritedElements = new NamedElementList();&#xD;
&#xD;
for (int i = 0; i &lt; inhs.size(); i++) {&#xD;
    inheritedElements.addValue(inhs.getValue(i));&#xD;
}&#xD;
&#xD;
return inheritedElements;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRSBRBEd-0fNU76fYmlA" name="inhs" type="_17RPsBRBEd-0fNU76fYmlA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRSRRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRShRBEd-0fNU76fYmlA"/>
              </ownedParameter>
              <ownedParameter xmi:id="_17RRSxRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RPsBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRTBRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRTRRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRThRBEd-0fNU76fYmlA" name="inheritableMembers">
              <ownedComment xmi:id="_17RRTxRBEd-0fNU76fYmlA">
                <body>NamedElementList inheritable = new NamedElementList();&#xD;
&#xD;
for (int i = 0; i &lt; this.member.size(); i++) {&#xD;
    NamedElement m = this.member.getValue(i);&#xD;
    if (c.hasVisibilityOf(m)) {&#xD;
        inheritable.addValue(m);&#xD;
    }&#xD;
}&#xD;
&#xD;
return inheritable;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRUBRBEd-0fNU76fYmlA" name="c" type="_17RRHRRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RRURRBEd-0fNU76fYmlA" name="OwnedParameter" type="_17RPsBRBEd-0fNU76fYmlA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRUhRBEd-0fNU76fYmlA" value="*"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRUxRBEd-0fNU76fYmlA"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRVBRBEd-0fNU76fYmlA" name="hasVisibilityOf">
              <ownedComment xmi:id="_17RRVRRBEd-0fNU76fYmlA">
                <body>for (int i = 0; i &lt; this.inheritedMember.size(); i++) {&#xD;
    if (this.inheritedMember.getValue(i) == n) {&#xD;
        return n.visibility != VisibilityKind.private_;&#xD;
    }&#xD;
}&#xD;
&#xD;
return true;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRVhRBEd-0fNU76fYmlA" name="n" type="_17RPsBRBEd-0fNU76fYmlA"/>
              <ownedParameter xmi:id="_17RRVxRBEd-0fNU76fYmlA" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRWBRBEd-0fNU76fYmlA" name="setIsFinalSpecialization">
              <ownedComment xmi:id="_17RRWRRBEd-0fNU76fYmlA">
                <body>this.isFinalSpecialization = isFinalSpecialization;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRWhRBEd-0fNU76fYmlA" name="isFinalSpecialization">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RRWxRBEd-0fNU76fYmlA" name="DataType">
            <eAnnotations xmi:id="_17RRXBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RRXRRBEd-0fNU76fYmlA" general="_17RRHRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RRXhRBEd-0fNU76fYmlA" name="ownedAttribute" type="_17RQZhRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RSIxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRXxRBEd-0fNU76fYmlA" annotatedElement="_17RRXhRBEd-0fNU76fYmlA">
                <body>The Attributes owned by the DataType.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRYBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRYRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RRYhRBEd-0fNU76fYmlA" name="addOwnedAttribute">
              <ownedComment xmi:id="_17RRYxRBEd-0fNU76fYmlA">
                <body>super.addAttribute(ownedAttribute);&#xD;
super.addOwnedMember(ownedAttribute);&#xD;
&#xD;
this.ownedAttribute.addValue(ownedAttribute);&#xD;
ownedAttribute.datatype = this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRZBRBEd-0fNU76fYmlA" name="ownedAttribute" type="_17RQZhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RRZRRBEd-0fNU76fYmlA" name="Element" isAbstract="true">
            <eAnnotations xmi:id="_17RRZhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedAttribute xmi:id="_17RRZxRBEd-0fNU76fYmlA" name="ownedElement" type="_17RRZRRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" association="_17RR7RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRaBRBEd-0fNU76fYmlA" annotatedElement="_17RRZxRBEd-0fNU76fYmlA">
                <body>The Elements owned by this element.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRaRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRahRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRaxRBEd-0fNU76fYmlA" name="owner" type="_17RRZRRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_17RR7RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRbBRBEd-0fNU76fYmlA" annotatedElement="_17RRaxRBEd-0fNU76fYmlA">
                <body>The Element that owns this element.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRbRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRbhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRbxRBEd-0fNU76fYmlA" name="ownedComment" visibility="public" type="_17RSXhRBEd-0fNU76fYmlA" aggregation="composite" association="_17RSZhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRcBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRcRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RRchRBEd-0fNU76fYmlA" name="addOwnedElement" visibility="protected">
              <ownedComment xmi:id="_17RRcxRBEd-0fNU76fYmlA">
                <body>this.ownedElement.add(ownedElement);&#xD;
ownedElement.owner = this;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRdBRBEd-0fNU76fYmlA" name="ownedElement" type="_17RRZRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RRdRRBEd-0fNU76fYmlA" name="Enumeration">
            <eAnnotations xmi:id="_17RRdhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RRdxRBEd-0fNU76fYmlA" general="_17RRWxRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RReBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            </generalization>
            <ownedAttribute xmi:id="_17RReRRBEd-0fNU76fYmlA" name="ownedLiteral" type="_17RRgRRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RR6xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRehRBEd-0fNU76fYmlA" annotatedElement="_17RReRRBEd-0fNU76fYmlA">
                <body>The ordered collection of literals for the enumeration.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RRexRBEd-0fNU76fYmlA" annotatedElement="_17RReRRBEd-0fNU76fYmlA">
                <body>The ordered set of literals for this Enumeration.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRfBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRfRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RRfhRBEd-0fNU76fYmlA" name="addOwnedLiteral">
              <ownedComment xmi:id="_17RRfxRBEd-0fNU76fYmlA">
                <body>super.addOwnedMember(ownedLiteral);&#xD;
&#xD;
this.ownedLiteral.addValue(ownedLiteral);&#xD;
ownedLiteral.enumeration = this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRgBRBEd-0fNU76fYmlA" name="ownedLiteral" type="_17RRgRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RRgRRBEd-0fNU76fYmlA" name="EnumerationLiteral">
            <eAnnotations xmi:id="_17RRghRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RRgxRBEd-0fNU76fYmlA" general="_17RPKxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RRhBRBEd-0fNU76fYmlA" name="enumeration" type="_17RRdRRBEd-0fNU76fYmlA" association="_17RR6xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRhRRBEd-0fNU76fYmlA" annotatedElement="_17RRhBRBEd-0fNU76fYmlA">
                <body>The enumeration that this literal belongs to.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RRhhRBEd-0fNU76fYmlA" annotatedElement="_17RRhBRBEd-0fNU76fYmlA">
                <body>The Enumeration that this EnumerationLiteral is a member of.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRhxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRiBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RRiRRBEd-0fNU76fYmlA" name="Feature" isAbstract="true">
            <eAnnotations xmi:id="_17RRihRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RRixRBEd-0fNU76fYmlA" name="non_static" constrainedElement="_17RRiRRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RRjBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RRjRRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RRjhRBEd-0fNU76fYmlA" annotatedElement="_17RRixRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16674&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>isStatic must be false&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RRjxRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>not self.isStatic</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RRkBRBEd-0fNU76fYmlA" general="_17RO9BRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RRkRRBEd-0fNU76fYmlA" name="isStatic">
              <ownedComment xmi:id="_17RRkhRBEd-0fNU76fYmlA" annotatedElement="_17RRkRRBEd-0fNU76fYmlA">
                <body>Specifies whether this feature characterizes individual instances classified by the classifier (false) or the classifier itself (true).</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RRkxRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRlBRBEd-0fNU76fYmlA" name="featuringClassifier" type="_17RRHRRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_17RR6RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRlRRBEd-0fNU76fYmlA" annotatedElement="_17RRlBRBEd-0fNU76fYmlA">
                <body>Redefines the corresponding association in Abstractions.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RRlhRBEd-0fNU76fYmlA" annotatedElement="_17RRlBRBEd-0fNU76fYmlA">
                <body>The Classifiers that have this Feature as a feature.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRlxRBEd-0fNU76fYmlA" name="" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRmBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RRmRRBEd-0fNU76fYmlA" name="Generalization">
            <eAnnotations xmi:id="_17RRmhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RRmxRBEd-0fNU76fYmlA" general="_17RRZRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RRnBRBEd-0fNU76fYmlA" name="isSubstitutable">
              <ownedComment xmi:id="_17RRnRRBEd-0fNU76fYmlA" annotatedElement="_17RRnBRBEd-0fNU76fYmlA">
                <body>Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRnhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRnxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRoBRBEd-0fNU76fYmlA" name="specific" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RR9BRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRoRRBEd-0fNU76fYmlA" annotatedElement="_17RRoBRBEd-0fNU76fYmlA">
                <body>References the specializing classifier in the Generalization relationship.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRohRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRoxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRpBRBEd-0fNU76fYmlA" name="general" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RR5BRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRpRRBEd-0fNU76fYmlA" annotatedElement="_17RRpBRBEd-0fNU76fYmlA">
                <body>References the general classifier in the Generalization relationship.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRphRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRpxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RRqBRBEd-0fNU76fYmlA" name="setIsSubstitutable">
              <ownedComment xmi:id="_17RRqRRBEd-0fNU76fYmlA">
                <body>this.isSubstitutable = isSubstitutable;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRqhRBEd-0fNU76fYmlA" name="isSubstitutable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RRqxRBEd-0fNU76fYmlA" name="setGeneral">
              <ownedComment xmi:id="_17RRrBRBEd-0fNU76fYmlA">
                <body>this.general = general;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RRrRRBEd-0fNU76fYmlA" name="general" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RRrhRBEd-0fNU76fYmlA" name="Association">
            <eAnnotations xmi:id="_17RRrxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RRsBRBEd-0fNU76fYmlA" name="owns_memberEnds" constrainedElement="_17RRrhRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RRsRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RRshRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RRsxRBEd-0fNU76fYmlA" annotatedElement="_17RRsBRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>An association must own all its memberEnds.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RRtBRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.memberEnd->symmetricDifference(self.ownedEnd)->isEmpty()</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17RRtRRBEd-0fNU76fYmlA" name="no_derivation" constrainedElement="_17RRrhRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RRthRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RRtxRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RRuBRBEd-0fNU76fYmlA" annotatedElement="_17RRtRRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>isDerived must be false&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RRuRRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>not self.isDerived</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RRuhRBEd-0fNU76fYmlA" general="_17RRHRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RRuxRBEd-0fNU76fYmlA" name="isDerived">
              <ownedComment xmi:id="_17RRvBRBEd-0fNU76fYmlA" annotatedElement="_17RRuxRBEd-0fNU76fYmlA">
                <body>Specifies whether the association is derived from other model elements such as other associations or constraints.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RRvRRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRvhRBEd-0fNU76fYmlA" name="ownedEnd" type="_17RQZhRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RR4hRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRvxRBEd-0fNU76fYmlA" annotatedElement="_17RRvhRBEd-0fNU76fYmlA">
                <body>The ends that are owned by the association itself. This is an ordered association.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RRwBRBEd-0fNU76fYmlA" annotatedElement="_17RRvhRBEd-0fNU76fYmlA">
                <body>The ends that are owned by the association itself.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRwRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRwhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRwxRBEd-0fNU76fYmlA" name="endType" type="_17RQrxRBEd-0fNU76fYmlA" isOrdered="true" isReadOnly="true" isDerived="true" association="_17RR2xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRxBRBEd-0fNU76fYmlA" annotatedElement="_17RRwxRBEd-0fNU76fYmlA">
                <body>References the classifiers that are used as types of the ends of the association.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRxRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRxhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRxxRBEd-0fNU76fYmlA" name="memberEnd" type="_17RQZhRBEd-0fNU76fYmlA" isOrdered="true" association="_17RR4BRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRyBRBEd-0fNU76fYmlA" annotatedElement="_17RRxxRBEd-0fNU76fYmlA">
                <body>Each end represents participation of instances of the classifier connected to the end in links of the association. This is an ordered association.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RRyRRBEd-0fNU76fYmlA" annotatedElement="_17RRxxRBEd-0fNU76fYmlA">
                <body>Each end represents participation of instances of the classifier connected to the end in links of the association.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRyhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRyxRBEd-0fNU76fYmlA" value="2"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RRzBRBEd-0fNU76fYmlA" name="navigableOwnedEnd" type="_17RQZhRBEd-0fNU76fYmlA" association="_17RR1hRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RRzRRBEd-0fNU76fYmlA" annotatedElement="_17RRzBRBEd-0fNU76fYmlA">
                <body>The navigable ends that are owned by the association itself.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RRzhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RRzxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RR0BRBEd-0fNU76fYmlA" name="addOwnedEnd">
              <ownedComment xmi:id="_17RR0RRBEd-0fNU76fYmlA">
                <body>super.addFeature(ownedEnd);&#xD;
super.addOwnedMember(ownedEnd);&#xD;
&#xD;
this.ownedEnd.addValue(ownedEnd);&#xD;
ownedEnd.owningAssociation = this;&#xD;
&#xD;
this.memberEnd.addValue(ownedEnd);&#xD;
ownedEnd.association = this;&#xD;
&#xD;
this.endType.addValue(ownedEnd.typedElement.type);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RR0hRBEd-0fNU76fYmlA" name="ownedEnd" type="_17RQZhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RR0xRBEd-0fNU76fYmlA" name="addNavigableOwnedEnd">
              <ownedComment xmi:id="_17RR1BRBEd-0fNU76fYmlA">
                <body>// Note: A navigable end must also be set as an owned end using setOwnedEnd.&#xD;
&#xD;
this.navigableOwnedEnd.addValue(navigableOwnedEnd);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RR1RRBEd-0fNU76fYmlA" name="navigableOwnedEnd" type="_17RQZhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR1hRBEd-0fNU76fYmlA" name="A_navigableOwnedEnd_association" memberEnd="_17RRzBRBEd-0fNU76fYmlA _17RR2BRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR1xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RR2BRBEd-0fNU76fYmlA" name="association" type="_17RRrhRBEd-0fNU76fYmlA" association="_17RR1hRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RR2RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RR2hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR2xRBEd-0fNU76fYmlA" name="A_endType_association" memberEnd="_17RRwxRBEd-0fNU76fYmlA _17RR3RRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR3BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RR3RRBEd-0fNU76fYmlA" name="association" type="_17RRrhRBEd-0fNU76fYmlA" association="_17RR2xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RR3hRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RR3xRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR4BRBEd-0fNU76fYmlA" name="A_memberEnd_association" memberEnd="_17RRxxRBEd-0fNU76fYmlA _17RQihRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR4RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR4hRBEd-0fNU76fYmlA" name="A_ownedEnd_owningAssociation" memberEnd="_17RRvhRBEd-0fNU76fYmlA _17RQgBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR4xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR5BRBEd-0fNU76fYmlA" name="A_general_generalization" memberEnd="_17RRpBRBEd-0fNU76fYmlA _17RR5hRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR5RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RR5hRBEd-0fNU76fYmlA" name="generalization" type="_17RRmRRBEd-0fNU76fYmlA" association="_17RR5BRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RR5xRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RR6BRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR6RRBEd-0fNU76fYmlA" name="A_feature_featuringClassifier" memberEnd="_17RRKBRBEd-0fNU76fYmlA _17RRlBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR6hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR6xRBEd-0fNU76fYmlA" name="A_ownedLiteral_enumeration" memberEnd="_17RReRRBEd-0fNU76fYmlA _17RRhBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR7BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR7RRBEd-0fNU76fYmlA" name="A_ownedElement_owner" memberEnd="_17RRZxRBEd-0fNU76fYmlA _17RRaxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR7hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR7xRBEd-0fNU76fYmlA" name="A_attribute_classifier" memberEnd="_17RRMRRBEd-0fNU76fYmlA _17RR8RRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR8BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RR8RRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RR7xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RR8hRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RR8xRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR9BRBEd-0fNU76fYmlA" name="A_generalization_specific" memberEnd="_17RRJBRBEd-0fNU76fYmlA _17RRoBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR9RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR9hRBEd-0fNU76fYmlA" name="A_general_classifier" memberEnd="_17RRNRRBEd-0fNU76fYmlA _17RR-BRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR9xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RR-BRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RR9hRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RR-RRBEd-0fNU76fYmlA" annotatedElement="_17RR-BRBEd-0fNU76fYmlA">
                <body>References the general classifier in the Generalization relationship.</body>
              </ownedComment>
              <ownedComment xmi:id="_17RR-hRBEd-0fNU76fYmlA" annotatedElement="_17RR-BRBEd-0fNU76fYmlA">
                <body>Specifies the general Classifiers for this Classifier.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RR-xRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RR_BRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RR_RRBEd-0fNU76fYmlA" name="A_inheritedMember_classifier" memberEnd="_17RRLRRBEd-0fNU76fYmlA _17RR_xRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RR_hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RR_xRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RR_RRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSABRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSARRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSAhRBEd-0fNU76fYmlA" name="A_ownedAttribute_class" memberEnd="_17RQ-hRBEd-0fNU76fYmlA _17RQjhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSAxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSBBRBEd-0fNU76fYmlA" name="A_ownedReception_class" memberEnd="_17RQ9hRBEd-0fNU76fYmlA _17RSBhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSBRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSBhRBEd-0fNU76fYmlA" name="class" type="_17RQ2RRBEd-0fNU76fYmlA" association="_17RSBBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSBxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSCBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSCRRBEd-0fNU76fYmlA" name="A_superClass_class" memberEnd="_17RQ7xRBEd-0fNU76fYmlA _17RSCxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSChRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSCxRBEd-0fNU76fYmlA" name="class" type="_17RQ2RRBEd-0fNU76fYmlA" association="_17RSCRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSDBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSDRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSDhRBEd-0fNU76fYmlA" name="A_type_typedElement" memberEnd="_17RQuBRBEd-0fNU76fYmlA _17RSEBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSDxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSEBRBEd-0fNU76fYmlA" name="typedElement" type="_17RQtRRBEd-0fNU76fYmlA" association="_17RSDhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSERRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSEhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSExRBEd-0fNU76fYmlA" name="A_value_owningSlot" memberEnd="_17RQpRRBEd-0fNU76fYmlA _17RSFRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSFBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSFRRBEd-0fNU76fYmlA" name="owningSlot" type="_17RQmhRBEd-0fNU76fYmlA" association="_17RSExRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSFhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSFxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSGBRBEd-0fNU76fYmlA" name="A_definingFeature_slot" memberEnd="_17RQoRRBEd-0fNU76fYmlA _17RSGhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSGRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSGhRBEd-0fNU76fYmlA" name="slot" type="_17RQmhRBEd-0fNU76fYmlA" association="_17RSGBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSGxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSHBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSHRRBEd-0fNU76fYmlA" name="A_opposite_property" memberEnd="_17RQkRRBEd-0fNU76fYmlA _17RSHxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSHhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSHxRBEd-0fNU76fYmlA" name="property" type="_17RQZhRBEd-0fNU76fYmlA" association="_17RSHRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RSIBRBEd-0fNU76fYmlA" annotatedElement="_17RSHxRBEd-0fNU76fYmlA">
                <body>In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSIRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSIhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSIxRBEd-0fNU76fYmlA" name="A_ownedAttribute_datatype" memberEnd="_17RRXhRBEd-0fNU76fYmlA _17RQhRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSJBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSJRRBEd-0fNU76fYmlA" name="A_ownedParameter_operation" memberEnd="_17RQFBRBEd-0fNU76fYmlA _17RQSBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSJhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSJxRBEd-0fNU76fYmlA" name="A_packageElement_owningPackage" memberEnd="_17RQJxRBEd-0fNU76fYmlA _17RSKRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSKBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSKRRBEd-0fNU76fYmlA" name="owningPackage" type="_17RQIxRBEd-0fNU76fYmlA" association="_17RSJxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSKhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSKxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSLBRBEd-0fNU76fYmlA" name="A_ownedOperation_class" memberEnd="_17RQ6xRBEd-0fNU76fYmlA _17RQBhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSLRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSLhRBEd-0fNU76fYmlA" name="A_redefinedOperation_operation" memberEnd="_17RQCxRBEd-0fNU76fYmlA _17RSMBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSLxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSMBRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA" association="_17RSLhRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSMRRBEd-0fNU76fYmlA" name="A_type_operation" memberEnd="_17RQDxRBEd-0fNU76fYmlA _17RSMxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSMhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSMxRBEd-0fNU76fYmlA" name="operation" visibility="public" type="_17RP6RRBEd-0fNU76fYmlA" association="_17RSMRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSNBRBEd-0fNU76fYmlA" name="A_member_namespace" memberEnd="_17RPyxRBEd-0fNU76fYmlA _17RSNhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSNRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSNhRBEd-0fNU76fYmlA" name="namespace" visibility="public" type="_17RPyBRBEd-0fNU76fYmlA" association="_17RSNBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSNxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSOBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSORRBEd-0fNU76fYmlA" name="A_ownedMember_namespace" memberEnd="_17RPzhRBEd-0fNU76fYmlA _17RPvxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSOhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSOxRBEd-0fNU76fYmlA" name="A_lowerValue_owningLower" memberEnd="_17RPmBRBEd-0fNU76fYmlA _17RSPRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSPBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSPRRBEd-0fNU76fYmlA" name="owningLower" visibility="public" type="_17RPeRRBEd-0fNU76fYmlA" association="_17RSOxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSPhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSPxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSQBRBEd-0fNU76fYmlA" name="A_upperValue_owningUpper" memberEnd="_17RPlBRBEd-0fNU76fYmlA _17RSQhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSQRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSQhRBEd-0fNU76fYmlA" name="owningUpper" type="_17RPeRRBEd-0fNU76fYmlA" association="_17RSQBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSQxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSRBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSRRRBEd-0fNU76fYmlA" name="A_instance_instanceValue" memberEnd="_17RPRBRBEd-0fNU76fYmlA _17RSRxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSRhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSRxRBEd-0fNU76fYmlA" name="instanceValue" type="_17RPQRRBEd-0fNU76fYmlA" association="_17RSRRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSSBRBEd-0fNU76fYmlA" name="A_slot_owningInstance" memberEnd="_17RPNxRBEd-0fNU76fYmlA _17RQnRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSSRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSShRBEd-0fNU76fYmlA" name="A_classifier_instanceSpecification" memberEnd="_17RPMxRBEd-0fNU76fYmlA _17RSTBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSSxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSTBRBEd-0fNU76fYmlA" name="instanceSpecification" type="_17RPKxRBEd-0fNU76fYmlA" association="_17RSShRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSTRRBEd-0fNU76fYmlA" name="A_method_specification" memberEnd="_17RPGxRBEd-0fNU76fYmlA _17ROVRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSThRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSTxRBEd-0fNU76fYmlA" name="A_ownedParameter_ownerFormalParam" memberEnd="_17RPExRBEd-0fNU76fYmlA _17RSURRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSUBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSURRBEd-0fNU76fYmlA" name="ownerFormalParam" type="_17RPCxRBEd-0fNU76fYmlA" association="_17RSTxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSUhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSUxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSVBRBEd-0fNU76fYmlA" name="A_redefinitionContext_redefinableElement" memberEnd="_17RO_hRBEd-0fNU76fYmlA _17RSVhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSVRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSVhRBEd-0fNU76fYmlA" name="redefinableElement" type="_17RO9BRBEd-0fNU76fYmlA" association="_17RSVBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSVxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSWBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSWRRBEd-0fNU76fYmlA" name="A_redefinedElement_redefinableElement" memberEnd="_17RO-hRBEd-0fNU76fYmlA _17RSWxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSWhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSWxRBEd-0fNU76fYmlA" name="redefinableElement" type="_17RO9BRBEd-0fNU76fYmlA" association="_17RSWRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSXBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSXRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSXhRBEd-0fNU76fYmlA" name="Comment">
            <eAnnotations xmi:id="_17RSXxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedAttribute xmi:id="_17RSYBRBEd-0fNU76fYmlA" name="annotatedElement" visibility="public" type="_17RRZRRBEd-0fNU76fYmlA" association="_17RSaxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSYRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSYhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RSYxRBEd-0fNU76fYmlA" name="body" visibility="public">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSZBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSZRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSZhRBEd-0fNU76fYmlA" name="A_ownedComment_owningElement" memberEnd="_17RRbxRBEd-0fNU76fYmlA _17RSaBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSZxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSaBRBEd-0fNU76fYmlA" name="owningElement" visibility="public" type="_17RRZRRBEd-0fNU76fYmlA" association="_17RSZhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSaRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSahRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSaxRBEd-0fNU76fYmlA" name="A_annotatedElement_comment" memberEnd="_17RSYBRBEd-0fNU76fYmlA _17RSbRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSbBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RSbRRBEd-0fNU76fYmlA" name="comment" visibility="public" type="_17RSXhRBEd-0fNU76fYmlA" association="_17RSaxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSbhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSbxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RScBRBEd-0fNU76fYmlA" name="ElementImport">
            <generalization xmi:id="_17RScRRBEd-0fNU76fYmlA" general="_17RRZRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RSchRBEd-0fNU76fYmlA" name="visibility" visibility="public" type="_17RQ0xRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RScxRBEd-0fNU76fYmlA" name="alias" visibility="public">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSdBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSdRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RSdhRBEd-0fNU76fYmlA" name="importedElement" visibility="public" type="_17RQPxRBEd-0fNU76fYmlA" association="_17RShhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSdxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSeBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RSeRRBEd-0fNU76fYmlA" name="importingNamespace" visibility="public" type="_17RPyBRBEd-0fNU76fYmlA" association="_17RShRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSehRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSexRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RSfBRBEd-0fNU76fYmlA" name="setAlias">
              <ownedComment xmi:id="_17RSfRRBEd-0fNU76fYmlA">
                <body>this.alias = alias;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RSfhRBEd-0fNU76fYmlA" name="alias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RSfxRBEd-0fNU76fYmlA" name="setVisibility">
              <ownedComment xmi:id="_17RSgBRBEd-0fNU76fYmlA">
                <body>this.visibility = visibility;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RSgRRBEd-0fNU76fYmlA" name="visibility" type="_17RQ0xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RSghRBEd-0fNU76fYmlA" name="setImportedElement">
              <ownedComment xmi:id="_17RSgxRBEd-0fNU76fYmlA">
                <body>this.importedElement = importedElement;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RShBRBEd-0fNU76fYmlA" name="importedElement" type="_17RQPxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RShRRBEd-0fNU76fYmlA" name="A_elementImport_importingNamespace" memberEnd="_17RP0RRBEd-0fNU76fYmlA _17RSeRRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RShhRBEd-0fNU76fYmlA" name="A_importedElement_elementImport" memberEnd="_17RSdhRBEd-0fNU76fYmlA _17RShxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RShxRBEd-0fNU76fYmlA" name="elementImport" visibility="public" type="_17RScBRBEd-0fNU76fYmlA" association="_17RShhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSiBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSiRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSihRBEd-0fNU76fYmlA" name="PackageImport">
            <generalization xmi:id="_17RSixRBEd-0fNU76fYmlA" general="_17RRZRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RSjBRBEd-0fNU76fYmlA" name="visibility" visibility="public" type="_17RQ0xRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RSjRRBEd-0fNU76fYmlA" name="importingNamespace" visibility="public" type="_17RPyBRBEd-0fNU76fYmlA" association="_17RSmRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSjhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSjxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RSkBRBEd-0fNU76fYmlA" name="importedPackage" visibility="public" type="_17RQIxRBEd-0fNU76fYmlA" association="_17RSmhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSkRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSkhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RSkxRBEd-0fNU76fYmlA" name="setVisibility">
              <ownedComment xmi:id="_17RSlBRBEd-0fNU76fYmlA">
                <body>this.visibility = visibility;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RSlRRBEd-0fNU76fYmlA" name="visibility" type="_17RQ0xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RSlhRBEd-0fNU76fYmlA" name="setImportedPackage">
              <ownedComment xmi:id="_17RSlxRBEd-0fNU76fYmlA">
                <body>this.importedPackage = importedPackage;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RSmBRBEd-0fNU76fYmlA" name="importedPackage" type="_17RQIxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSmRRBEd-0fNU76fYmlA" name="A_packageImport_importingNamespace" memberEnd="_17RP1BRBEd-0fNU76fYmlA _17RSjRRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSmhRBEd-0fNU76fYmlA" name="A_importedPackage_packageImport" memberEnd="_17RSkBRBEd-0fNU76fYmlA _17RSmxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RSmxRBEd-0fNU76fYmlA" name="packageImport" visibility="public" type="_17RSihRBEd-0fNU76fYmlA" association="_17RSmhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSnBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSnRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSnhRBEd-0fNU76fYmlA" name="A_nestedClassifier_class" memberEnd="_17RQ_RRBEd-0fNU76fYmlA _17RSnxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RSnxRBEd-0fNU76fYmlA" name="class" visibility="public" type="_17RQ2RRBEd-0fNU76fYmlA" association="_17RSnhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSoBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSoRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSohRBEd-0fNU76fYmlA" name="A_type_package" memberEnd="_17RQKhRBEd-0fNU76fYmlA _17RQshRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSoxRBEd-0fNU76fYmlA" name="A_nestedPackage_nestingPackage" memberEnd="_17RQLRRBEd-0fNU76fYmlA _17RQMBRBEd-0fNU76fYmlA"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RSpBRBEd-0fNU76fYmlA" name="A_importedMember_namespace" memberEnd="_17RP1xRBEd-0fNU76fYmlA _17RSpRRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RSpRRBEd-0fNU76fYmlA" name="namespace" visibility="public" type="_17RPyBRBEd-0fNU76fYmlA" association="_17RSpBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RSphRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RSpxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RSqBRBEd-0fNU76fYmlA" name="Activities">
        <packagedElement xmi:type="uml:Package" xmi:id="_17RSqRRBEd-0fNU76fYmlA" name="IntermediateActivities">
          <packageImport xmi:id="_17RSqhRBEd-0fNU76fYmlA" importedPackage="_17ROHRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RSqxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RSrBRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSrRRBEd-0fNU76fYmlA" name="ObjectFlow">
            <eAnnotations xmi:id="_17RSrhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSrxRBEd-0fNU76fYmlA" general="_17RS_BRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSsBRBEd-0fNU76fYmlA" name="ObjectNode" isAbstract="true">
            <eAnnotations xmi:id="_17RSsRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSshRBEd-0fNU76fYmlA" general="_17RS3xRBEd-0fNU76fYmlA"/>
            <generalization xmi:id="_17RSsxRBEd-0fNU76fYmlA" general="_17RQtRRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RStBRBEd-0fNU76fYmlA" name="setType">
              <ownedComment xmi:id="_17RStRRBEd-0fNU76fYmlA">
                <body>this.typedElement.type = type;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RSthRBEd-0fNU76fYmlA" name="type" type="_17RQrxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RStxRBEd-0fNU76fYmlA" name="MergeNode">
            <eAnnotations xmi:id="_17RSuBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSuRRBEd-0fNU76fYmlA" general="_17RSyRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSuhRBEd-0fNU76fYmlA" name="JoinNode">
            <eAnnotations xmi:id="_17RSuxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSvBRBEd-0fNU76fYmlA" general="_17RSyRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSvRRBEd-0fNU76fYmlA" name="InitialNode">
            <eAnnotations xmi:id="_17RSvhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSvxRBEd-0fNU76fYmlA" general="_17RSyRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSwBRBEd-0fNU76fYmlA" name="FinalNode" isAbstract="true">
            <eAnnotations xmi:id="_17RSwRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSwhRBEd-0fNU76fYmlA" general="_17RSyRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSwxRBEd-0fNU76fYmlA" name="ForkNode">
            <eAnnotations xmi:id="_17RSxBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSxRRBEd-0fNU76fYmlA" general="_17RSyRRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSxhRBEd-0fNU76fYmlA" name="ControlFlow">
            <eAnnotations xmi:id="_17RSxxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSyBRBEd-0fNU76fYmlA" general="_17RS_BRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSyRRBEd-0fNU76fYmlA" name="ControlNode" isAbstract="true">
            <eAnnotations xmi:id="_17RSyhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSyxRBEd-0fNU76fYmlA" general="_17RS3xRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RSzBRBEd-0fNU76fYmlA" name="DecisionNode">
            <eAnnotations xmi:id="_17RSzRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RSzhRBEd-0fNU76fYmlA" general="_17RSyRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RSzxRBEd-0fNU76fYmlA" name="decisionInput" type="_17ROTBRBEd-0fNU76fYmlA" association="_17RTVRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RS0BRBEd-0fNU76fYmlA" annotatedElement="_17RSzxRBEd-0fNU76fYmlA">
                <body>Provides input to guard specifications on edges outgoing from the decision node.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RS0RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RS0hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RS0xRBEd-0fNU76fYmlA" name="decisionInputFlow" type="_17RSrRRBEd-0fNU76fYmlA" association="_17RTUBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RS1BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RS1RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RS1hRBEd-0fNU76fYmlA" name="setDecisionInput">
              <ownedComment xmi:id="_17RS1xRBEd-0fNU76fYmlA">
                <body>this.decisionInput = decisionInput;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RS2BRBEd-0fNU76fYmlA" name="decisionInput" type="_17ROTBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RS2RRBEd-0fNU76fYmlA" name="setDecisionInputFlow">
              <ownedComment xmi:id="_17RS2hRBEd-0fNU76fYmlA">
                <body>this.decisionInputFlow = decisionInputFlow;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RS2xRBEd-0fNU76fYmlA" name="decisionInputFlow" type="_17RSrRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RS3BRBEd-0fNU76fYmlA" name="ActivityFinalNode">
            <eAnnotations xmi:id="_17RS3RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RS3hRBEd-0fNU76fYmlA" general="_17RSwBRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RS3xRBEd-0fNU76fYmlA" name="ActivityNode" isAbstract="true">
            <eAnnotations xmi:id="_17RS4BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RS4RRBEd-0fNU76fYmlA" general="_17RO9BRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RS4hRBEd-0fNU76fYmlA" name="inStructuredNode" type="_17RTXhRBEd-0fNU76fYmlA" association="_17RUQhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RS4xRBEd-0fNU76fYmlA" annotatedElement="_17RS4hRBEd-0fNU76fYmlA">
                <body>Structured activity node containing the node.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RS5BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RS5RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RS5hRBEd-0fNU76fYmlA" name="activity" type="_17RTIBRBEd-0fNU76fYmlA" association="_17RTTBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RS5xRBEd-0fNU76fYmlA" annotatedElement="_17RS5hRBEd-0fNU76fYmlA">
                <body>Activity containing the node.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RS6BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RS6RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RS6hRBEd-0fNU76fYmlA" name="outgoing" type="_17RS_BRBEd-0fNU76fYmlA" association="_17RTShRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RS6xRBEd-0fNU76fYmlA" annotatedElement="_17RS6hRBEd-0fNU76fYmlA">
                <body>Edges that have the node as source.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RS7BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RS7RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RS7hRBEd-0fNU76fYmlA" name="incoming" type="_17RS_BRBEd-0fNU76fYmlA" association="_17RTThRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RS7xRBEd-0fNU76fYmlA" annotatedElement="_17RS7hRBEd-0fNU76fYmlA">
                <body>Edges that have the node as target.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RS8BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RS8RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RS8hRBEd-0fNU76fYmlA" name="ActivityParameterNode">
            <eAnnotations xmi:id="_17RS8xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RS9BRBEd-0fNU76fYmlA" general="_17RSsBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RS9RRBEd-0fNU76fYmlA" name="parameter" type="_17RQQhRBEd-0fNU76fYmlA" association="_17RTRxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RS9hRBEd-0fNU76fYmlA" annotatedElement="_17RS9RRBEd-0fNU76fYmlA">
                <body>The parameter the object node will be accepting or providing values for.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RS9xRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RS-BRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RS-RRBEd-0fNU76fYmlA" name="setParameter">
              <ownedComment xmi:id="_17RS-hRBEd-0fNU76fYmlA">
                <body>this.parameter = parameter;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RS-xRBEd-0fNU76fYmlA" name="parameter" type="_17RQQhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RS_BRBEd-0fNU76fYmlA" name="ActivityEdge" isAbstract="true">
            <eAnnotations xmi:id="_17RS_RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RS_hRBEd-0fNU76fYmlA" name="fUML_allowed_guards" constrainedElement="_17RS_BRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RS_xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
              <ownedComment xmi:id="_17RTABRBEd-0fNU76fYmlA" annotatedElement="_17RS_hRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>A guard is only allowed if the source of the edge is a DecisionNode.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RTARRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.guard->notEmpty() implies self.source.oclIsKindOf(DecisionNode)</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RTAhRBEd-0fNU76fYmlA" general="_17RO9BRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RTAxRBEd-0fNU76fYmlA" name="activity" type="_17RTIBRBEd-0fNU76fYmlA" association="_17RTQhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTBBRBEd-0fNU76fYmlA" annotatedElement="_17RTAxRBEd-0fNU76fYmlA">
                <body>Activity containing the edge.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTBRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTBhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTBxRBEd-0fNU76fYmlA" name="source" type="_17RS3xRBEd-0fNU76fYmlA" association="_17RTShRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTCBRBEd-0fNU76fYmlA" annotatedElement="_17RTBxRBEd-0fNU76fYmlA">
                <body>Node from which tokens are taken when they traverse the edge.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTCRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTChRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTCxRBEd-0fNU76fYmlA" name="target" type="_17RS3xRBEd-0fNU76fYmlA" association="_17RTThRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTDBRBEd-0fNU76fYmlA" annotatedElement="_17RTCxRBEd-0fNU76fYmlA">
                <body>Node to which tokens are put when they traverse the edge.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTDRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTDhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTDxRBEd-0fNU76fYmlA" name="guard" type="_17RO0RRBEd-0fNU76fYmlA" aggregation="composite" association="_17RTRBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTEBRBEd-0fNU76fYmlA" annotatedElement="_17RTDxRBEd-0fNU76fYmlA">
                <body>Specification evaluated at runtime to determine if the edge can be traversed.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTERRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTEhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTExRBEd-0fNU76fYmlA" name="inStructuredNode" type="_17RTXhRBEd-0fNU76fYmlA" association="_17RURBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTFBRBEd-0fNU76fYmlA" annotatedElement="_17RTExRBEd-0fNU76fYmlA">
                <body>Structured activity node containing the edge.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTFRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTFhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RTFxRBEd-0fNU76fYmlA" name="setTarget">
              <ownedComment xmi:id="_17RTGBRBEd-0fNU76fYmlA">
                <body>this.target = target;&#xD;
target.incoming.addValue(this);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTGRRBEd-0fNU76fYmlA" name="target" type="_17RS3xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTGhRBEd-0fNU76fYmlA" name="setSource">
              <ownedComment xmi:id="_17RTGxRBEd-0fNU76fYmlA">
                <body>this.source = source;&#xD;
source.outgoing.addValue(this);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTHBRBEd-0fNU76fYmlA" name="source" type="_17RS3xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTHRRBEd-0fNU76fYmlA" name="setGuard">
              <ownedComment xmi:id="_17RTHhRBEd-0fNU76fYmlA">
                <body>if (guard != null) {&#xD;
    super.addOwnedElement(guard);&#xD;
}&#xD;
&#xD;
this.guard = guard;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTHxRBEd-0fNU76fYmlA" name="guard" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RTIBRBEd-0fNU76fYmlA" name="Activity">
            <eAnnotations xmi:id="_17RTIRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RTIhRBEd-0fNU76fYmlA" name="fUML_no_classifier_behavior" constrainedElement="_17RTIBRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RTIxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
              <ownedComment xmi:id="_17RTJBRBEd-0fNU76fYmlA" annotatedElement="_17RTIhRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16674&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>An activity may be active, but cannot have a classifier behavior.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RTJRRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.classifierBehavior->isEmpty()</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RTJhRBEd-0fNU76fYmlA" general="_17ROTBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RTJxRBEd-0fNU76fYmlA" name="structuredNode" type="_17RTXhRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" aggregation="composite" association="_17RURhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTKBRBEd-0fNU76fYmlA" annotatedElement="_17RTJxRBEd-0fNU76fYmlA">
                <body>Top-level structured nodes in the activity.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTKRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTKhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTKxRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA" aggregation="composite" association="_17RTTBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTLBRBEd-0fNU76fYmlA" annotatedElement="_17RTKxRBEd-0fNU76fYmlA">
                <body>Nodes coordinated by the activity.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTLRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTLhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTLxRBEd-0fNU76fYmlA" name="isReadOnly">
              <ownedComment xmi:id="_17RTMBRBEd-0fNU76fYmlA" annotatedElement="_17RTLxRBEd-0fNU76fYmlA">
                <body>If true, this activity must not make any changes to variables outside the activity or to objects. (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the action, then the model is ill-formed.) The default is false (an activity may make nonlocal changes).</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RTMRRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTMhRBEd-0fNU76fYmlA" name="edge" type="_17RS_BRBEd-0fNU76fYmlA" aggregation="composite" association="_17RTQhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTMxRBEd-0fNU76fYmlA" annotatedElement="_17RTMhRBEd-0fNU76fYmlA">
                <body>Edges expressing flow between nodes of the activity.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTNBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTNRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RTNhRBEd-0fNU76fYmlA" name="setIsReadOnly">
              <ownedComment xmi:id="_17RTNxRBEd-0fNU76fYmlA">
                <body>this.isReadOnly = isReadOnly;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTOBRBEd-0fNU76fYmlA" name="isReadOnly">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTORRBEd-0fNU76fYmlA" name="addNode">
              <ownedComment xmi:id="_17RTOhRBEd-0fNU76fYmlA">
                <body>super.addOwnedElement(node);&#xD;
&#xD;
this.node.addValue(node);&#xD;
node.activity = this;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTOxRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTPBRBEd-0fNU76fYmlA" name="addEdge">
              <ownedComment xmi:id="_17RTPRRBEd-0fNU76fYmlA">
                <body>super.addOwnedElement(edge);&#xD;
&#xD;
this.edge.addValue(edge);&#xD;
edge.activity = this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTPhRBEd-0fNU76fYmlA" name="edge" type="_17RS_BRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTPxRBEd-0fNU76fYmlA" name="_setContext">
              <ownedComment xmi:id="_17RTQBRBEd-0fNU76fYmlA">
                <body>// Note: The context of an activity should be set only _after_ all nodes have been added to the activity.&#xD;
&#xD;
super._setContext(context);&#xD;
&#xD;
for (int i = 0; i &lt; this.node.size(); i++) {&#xD;
    ActivityNode node = this.node.getValue(i);&#xD;
    if (node instanceof fUML.Syntax.Actions.BasicActions.Action) {&#xD;
        ((fUML.Syntax.Actions.BasicActions.Action)node).context = context;&#xD;
    }&#xD;
}&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTQRRBEd-0fNU76fYmlA" name="context" type="_17ROOBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RTQhRBEd-0fNU76fYmlA" name="A_activity_edge" memberEnd="_17RTAxRBEd-0fNU76fYmlA _17RTMhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RTQxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RTRBRBEd-0fNU76fYmlA" name="A_activityEdge_guard" memberEnd="_17RTRhRBEd-0fNU76fYmlA _17RTDxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RTRRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RTRhRBEd-0fNU76fYmlA" name="activityEdge" type="_17RS_BRBEd-0fNU76fYmlA" association="_17RTRBRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RTRxRBEd-0fNU76fYmlA" name="A_parameter_activityParameterNode" memberEnd="_17RS9RRBEd-0fNU76fYmlA _17RTSRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RTSBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RTSRRBEd-0fNU76fYmlA" name="activityParameterNode" type="_17RS8hRBEd-0fNU76fYmlA" association="_17RTRxRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RTShRBEd-0fNU76fYmlA" name="A_outgoing_source" memberEnd="_17RS6hRBEd-0fNU76fYmlA _17RTBxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RTSxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RTTBRBEd-0fNU76fYmlA" name="A_node_activity" memberEnd="_17RTKxRBEd-0fNU76fYmlA _17RS5hRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RTTRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RTThRBEd-0fNU76fYmlA" name="A_target_incoming" memberEnd="_17RTCxRBEd-0fNU76fYmlA _17RS7hRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RTTxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RTUBRBEd-0fNU76fYmlA" name="A_decisionNode_decisionInputFlow" memberEnd="_17RTUhRBEd-0fNU76fYmlA _17RS0xRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RTURRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RTUhRBEd-0fNU76fYmlA" name="decisionNode" visibility="public" type="_17RSzBRBEd-0fNU76fYmlA" association="_17RTUBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTUxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTVBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RTVRRBEd-0fNU76fYmlA" name="A_decisionInput_decisionNode" memberEnd="_17RSzxRBEd-0fNU76fYmlA _17RTVxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RTVhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RTVxRBEd-0fNU76fYmlA" name="decisionNode" type="_17RSzBRBEd-0fNU76fYmlA" association="_17RTVRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTWBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTWRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17RTWhRBEd-0fNU76fYmlA" name="CompleteStructuredActivities">
          <packageImport xmi:id="_17RTWxRBEd-0fNU76fYmlA" importedPackage="_17RUoBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RTXBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RTXRRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RTXhRBEd-0fNU76fYmlA" name="StructuredActivityNode">
            <eAnnotations xmi:id="_17RTXxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RTYBRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RTYRRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA" aggregation="composite" association="_17RUQhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTYhRBEd-0fNU76fYmlA" annotatedElement="_17RTYRRBEd-0fNU76fYmlA">
                <body>Nodes immediately contained in the group.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTYxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTZBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTZRRBEd-0fNU76fYmlA" name="activity" type="_17RTIBRBEd-0fNU76fYmlA" association="_17RURhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTZhRBEd-0fNU76fYmlA" annotatedElement="_17RTZRRBEd-0fNU76fYmlA">
                <body>Activity immediately containing the node.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTZxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTaBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTaRRBEd-0fNU76fYmlA" name="mustIsolate">
              <ownedComment xmi:id="_17RTahRBEd-0fNU76fYmlA" annotatedElement="_17RTaRRBEd-0fNU76fYmlA">
                <body>If true, then the actions in the node execute in isolation from actions outside the node.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RTaxRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTbBRBEd-0fNU76fYmlA" name="edge" type="_17RS_BRBEd-0fNU76fYmlA" aggregation="composite" association="_17RURBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTbRRBEd-0fNU76fYmlA" annotatedElement="_17RTbBRBEd-0fNU76fYmlA">
                <body>Edges immediately contained in the structured node.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTbhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTbxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTcBRBEd-0fNU76fYmlA" name="structuredNodeOutput" visibility="public" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" subsettedProperty="_17RVIRRBEd-0fNU76fYmlA" association="_17RUXBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTcRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTchRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTcxRBEd-0fNU76fYmlA" name="structuredNodeInput" visibility="public" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" subsettedProperty="_17RVKRRBEd-0fNU76fYmlA" association="_17RUYBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTdBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTdRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RTdhRBEd-0fNU76fYmlA" name="setMustIsolate">
              <ownedComment xmi:id="_17RTdxRBEd-0fNU76fYmlA">
                <body>this.mustIsolate = mustIsolate;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTeBRBEd-0fNU76fYmlA" name="mustIsolate">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTeRRBEd-0fNU76fYmlA" name="addNode">
              <ownedComment xmi:id="_17RTehRBEd-0fNU76fYmlA">
                <body>this.node.addValue(node);&#xD;
node.inStructuredNode = this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTexRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTfBRBEd-0fNU76fYmlA" name="addEdge">
              <ownedComment xmi:id="_17RTfRRBEd-0fNU76fYmlA">
                <body>this.edge.addValue(edge);&#xD;
edge.inStructuredNode = this;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTfhRBEd-0fNU76fYmlA" name="edge" type="_17RS_BRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTfxRBEd-0fNU76fYmlA" name="addStructuredNodeOutput">
              <ownedComment xmi:id="_17RTgBRBEd-0fNU76fYmlA">
                <body>this.addOutput(structuredNodeOutput);&#xD;
this.structuredNodeOutput.addValue(structuredNodeOutput);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTgRRBEd-0fNU76fYmlA" name="structuredNodeOutput" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTghRBEd-0fNU76fYmlA" name="addStructuredNodeInput">
              <ownedComment xmi:id="_17RTgxRBEd-0fNU76fYmlA">
                <body>this.addInput(structuredNodeInput);&#xD;
this.structuredNodeInput.addValue(structuredNodeInput);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RThBRBEd-0fNU76fYmlA" name="structuredNodeInput" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RThRRBEd-0fNU76fYmlA" name="LoopNode">
            <eAnnotations xmi:id="_17RThhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RThxRBEd-0fNU76fYmlA" name="noSetupParts_in_fUML" constrainedElement="_17RThRRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RTiBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RTiRRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RTihRBEd-0fNU76fYmlA" annotatedElement="_17RThxRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16674&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>no setupParts in fUML&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RTixRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.setupPart->isEmpty()</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RTjBRBEd-0fNU76fYmlA" general="_17RTXhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RTjRRBEd-0fNU76fYmlA" name="isTestedFirst">
              <ownedComment xmi:id="_17RTjhRBEd-0fNU76fYmlA" annotatedElement="_17RTjRRBEd-0fNU76fYmlA">
                <body>If true, the test is performed before the first execution of the body.
If false, the body is executed once before the test is performed.
</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RTjxRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTkBRBEd-0fNU76fYmlA" name="decider" type="_17RUvRRBEd-0fNU76fYmlA" association="_17RUPRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTkRRBEd-0fNU76fYmlA" annotatedElement="_17RTkBRBEd-0fNU76fYmlA">
                <body>An output pin within the test fragment the value of which is examined after execution of the test to determine whether to execute the loop body.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTkhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTkxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTlBRBEd-0fNU76fYmlA" name="test" type="_17RTxBRBEd-0fNU76fYmlA" association="_17RULhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTlRRBEd-0fNU76fYmlA" annotatedElement="_17RTlBRBEd-0fNU76fYmlA">
                <body>The set of nodes, edges, and designated value that compute a Boolean value to determine if another execution of the body will be performed.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTlhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTlxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTmBRBEd-0fNU76fYmlA" name="bodyOutput" type="_17RUvRRBEd-0fNU76fYmlA" isOrdered="true" association="_17RUOBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTmRRBEd-0fNU76fYmlA" annotatedElement="_17RTmBRBEd-0fNU76fYmlA">
                <body>A list of output pins within the body fragment the values of which are moved to the loop variable pins after completion of execution of the body, before the next iteration of the loop begins or before the loop exits.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTmhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTmxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTnBRBEd-0fNU76fYmlA" name="loopVariableInput" type="_17RU1hRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" redefinedProperty="_17RTcxRBEd-0fNU76fYmlA" association="_17RUMxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTnRRBEd-0fNU76fYmlA" annotatedElement="_17RTnBRBEd-0fNU76fYmlA">
                <body>A list of values that are moved into the loop variable pins before the first iteration of the loop.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTnhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTnxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RToBRBEd-0fNU76fYmlA" name="bodyPart" visibility="public" type="_17RTxBRBEd-0fNU76fYmlA" association="_17RUSBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RToRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTohRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RToxRBEd-0fNU76fYmlA" name="result" visibility="public" type="_17RUvRRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" redefinedProperty="_17RTcBRBEd-0fNU76fYmlA" association="_17RUTRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTpBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTpRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTphRBEd-0fNU76fYmlA" name="loopVariable" visibility="public" type="_17RUvRRBEd-0fNU76fYmlA" isOrdered="true" association="_17RUUhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTpxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTqBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTqRRBEd-0fNU76fYmlA" name="setupPart" visibility="public" type="_17RTxBRBEd-0fNU76fYmlA" association="_17RUVxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTqhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTqxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RTrBRBEd-0fNU76fYmlA" name="setIsTestedFirst">
              <ownedComment xmi:id="_17RTrRRBEd-0fNU76fYmlA">
                <body>this.isTestedFirst = isTestedFirst;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTrhRBEd-0fNU76fYmlA" name="isTestedFirst">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTrxRBEd-0fNU76fYmlA" name="addTest">
              <ownedComment xmi:id="_17RTsBRBEd-0fNU76fYmlA">
                <body>this.test.addValue(test);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTsRRBEd-0fNU76fYmlA" name="test" type="_17RTxBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTshRBEd-0fNU76fYmlA" name="addBodyPart">
              <ownedComment xmi:id="_17RTsxRBEd-0fNU76fYmlA">
                <body>this.bodyPart.addValue(bodyPart);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTtBRBEd-0fNU76fYmlA" name="bodyPart" type="_17RTxBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTtRRBEd-0fNU76fYmlA" name="addLoopVariableInput">
              <ownedComment xmi:id="_17RTthRBEd-0fNU76fYmlA">
                <body>super.addStructuredNodeInput(loopVariableInput);&#xD;
this.loopVariableInput.addValue(loopVariableInput);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTtxRBEd-0fNU76fYmlA" name="loopVariableInput" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTuBRBEd-0fNU76fYmlA" name="addLoopVariable">
              <ownedComment xmi:id="_17RTuRRBEd-0fNU76fYmlA">
                <body>this.loopVariable.addValue(loopVariable);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTuhRBEd-0fNU76fYmlA" name="loopVariable" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTuxRBEd-0fNU76fYmlA" name="setDecider">
              <ownedComment xmi:id="_17RTvBRBEd-0fNU76fYmlA">
                <body>this.decider = decider;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTvRRBEd-0fNU76fYmlA" name="decider" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTvhRBEd-0fNU76fYmlA" name="addBodyOutput">
              <ownedComment xmi:id="_17RTvxRBEd-0fNU76fYmlA">
                <body>this.bodyOutput.addValue(bodyOutput);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTwBRBEd-0fNU76fYmlA" name="bodyOutput" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RTwRRBEd-0fNU76fYmlA" name="addResult">
              <ownedComment xmi:id="_17RTwhRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result.addValue(result);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RTwxRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RTxBRBEd-0fNU76fYmlA" name="ExecutableNode" isAbstract="true">
            <eAnnotations xmi:id="_17RTxRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RTxhRBEd-0fNU76fYmlA" general="_17RS3xRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RTxxRBEd-0fNU76fYmlA" name="Clause">
            <eAnnotations xmi:id="_17RTyBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RTyRRBEd-0fNU76fYmlA" general="_17RRZRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RTyhRBEd-0fNU76fYmlA" name="test" type="_17RTxBRBEd-0fNU76fYmlA" association="_17RUGBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTyxRBEd-0fNU76fYmlA" annotatedElement="_17RTyhRBEd-0fNU76fYmlA">
                <body>A nested activity fragment with a designated output pin that specifies the result of the test.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RTzBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RTzRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RTzhRBEd-0fNU76fYmlA" name="body" type="_17RTxBRBEd-0fNU76fYmlA" association="_17RUJBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RTzxRBEd-0fNU76fYmlA" annotatedElement="_17RTzhRBEd-0fNU76fYmlA">
                <body>A nested activity fragment that is executed if the test evaluates to true and the clause is chosen over any concurrent clauses that also evaluate to true.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RT0BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RT0RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RT0hRBEd-0fNU76fYmlA" name="predecessorClause" type="_17RTxxRBEd-0fNU76fYmlA" association="_17RUHRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RT0xRBEd-0fNU76fYmlA" annotatedElement="_17RT0hRBEd-0fNU76fYmlA">
                <body>A set of clauses whose tests must all evaluate false before the current clause can be tested.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RT1BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RT1RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RT1hRBEd-0fNU76fYmlA" name="successorClause" type="_17RTxxRBEd-0fNU76fYmlA" association="_17RUHRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RT1xRBEd-0fNU76fYmlA" annotatedElement="_17RT1hRBEd-0fNU76fYmlA">
                <body>A set of clauses which may not be tested unless the current clause tests false.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RT2BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RT2RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RT2hRBEd-0fNU76fYmlA" name="decider" type="_17RUvRRBEd-0fNU76fYmlA" association="_17RUKRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RT2xRBEd-0fNU76fYmlA" annotatedElement="_17RT2hRBEd-0fNU76fYmlA">
                <body>An output pin within the test fragment the value of which is examined after execution of the test to determine whether the body should be executed.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RT3BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RT3RRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RT3hRBEd-0fNU76fYmlA" name="bodyOutput" type="_17RUvRRBEd-0fNU76fYmlA" isOrdered="true" association="_17RUHxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RT3xRBEd-0fNU76fYmlA" annotatedElement="_17RT3hRBEd-0fNU76fYmlA">
                <body>A list of output pins within the body fragment whose values are moved to the result pins of the containing conditional node after execution of the clause body.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RT4BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RT4RRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RT4hRBEd-0fNU76fYmlA" name="addPredecessorClause">
              <ownedComment xmi:id="_17RT4xRBEd-0fNU76fYmlA">
                <body>this.predecessorClause.addValue(predecessorClause);&#xD;
predecessorClause.successorClause.addValue(this);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RT5BRBEd-0fNU76fYmlA" name="predecessorClause" type="_17RTxxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RT5RRBEd-0fNU76fYmlA" name="addTest">
              <ownedComment xmi:id="_17RT5hRBEd-0fNU76fYmlA">
                <body>this.test.addValue(test);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RT5xRBEd-0fNU76fYmlA" name="test" type="_17RTxBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RT6BRBEd-0fNU76fYmlA" name="addBody">
              <ownedComment xmi:id="_17RT6RRBEd-0fNU76fYmlA">
                <body>this.body.addValue(body);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RT6hRBEd-0fNU76fYmlA" name="body" type="_17RTxBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RT6xRBEd-0fNU76fYmlA" name="setDecider">
              <ownedComment xmi:id="_17RT7BRBEd-0fNU76fYmlA">
                <body>this.decider = decider;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RT7RRBEd-0fNU76fYmlA" name="decider" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RT7hRBEd-0fNU76fYmlA" name="addBodyOutput">
              <ownedComment xmi:id="_17RT7xRBEd-0fNU76fYmlA">
                <body>this.bodyOutput.addValue(bodyOutput);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RT8BRBEd-0fNU76fYmlA" name="bodyOutput" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RT8RRBEd-0fNU76fYmlA" name="ConditionalNode">
            <eAnnotations xmi:id="_17RT8hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RT8xRBEd-0fNU76fYmlA" general="_17RTXhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RT9BRBEd-0fNU76fYmlA" name="isDeterminate">
              <ownedComment xmi:id="_17RT9RRBEd-0fNU76fYmlA" annotatedElement="_17RT9BRBEd-0fNU76fYmlA">
                <body>If true, the modeler asserts that at most one test will succeed.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RT9hRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RT9xRBEd-0fNU76fYmlA" name="isAssured">
              <ownedComment xmi:id="_17RT-BRBEd-0fNU76fYmlA" annotatedElement="_17RT9xRBEd-0fNU76fYmlA">
                <body>If true, the modeler asserts that at least one test will succeed.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RT-RRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RT-hRBEd-0fNU76fYmlA" name="clause" type="_17RTxxRBEd-0fNU76fYmlA" aggregation="composite" association="_17RUExRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RT-xRBEd-0fNU76fYmlA" annotatedElement="_17RT-hRBEd-0fNU76fYmlA">
                <body>Set of clauses composing the conditional.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RT_BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RT_RRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RT_hRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" redefinedProperty="_17RTcBRBEd-0fNU76fYmlA" association="_17RUDhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RT_xRBEd-0fNU76fYmlA" annotatedElement="_17RT_hRBEd-0fNU76fYmlA">
                <body>A list of output pins that constitute the data flow outputs of the conditional.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUABRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUARRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RUAhRBEd-0fNU76fYmlA" name="setIsDeterminate">
              <ownedComment xmi:id="_17RUAxRBEd-0fNU76fYmlA">
                <body>this.isDeterminate = isDeterminate;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUBBRBEd-0fNU76fYmlA" name="isDeterminate">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RUBRRBEd-0fNU76fYmlA" name="setIsAssured">
              <ownedComment xmi:id="_17RUBhRBEd-0fNU76fYmlA">
                <body>this.isAssured = isAssured;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUBxRBEd-0fNU76fYmlA" name="isAssured">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RUCBRBEd-0fNU76fYmlA" name="addClause">
              <ownedComment xmi:id="_17RUCRRBEd-0fNU76fYmlA">
                <body>super.addOwnedElement(clause);&#xD;
this.clause.addValue(clause);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUChRBEd-0fNU76fYmlA" name="clause" type="_17RTxxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RUCxRBEd-0fNU76fYmlA" name="addResult">
              <ownedComment xmi:id="_17RUDBRBEd-0fNU76fYmlA">
                <body>super.addStructuredNodeOutput(result);&#xD;
this.result.addValue(result);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUDRRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUDhRBEd-0fNU76fYmlA" name="A_result_conditionalNode" memberEnd="_17RT_hRBEd-0fNU76fYmlA _17RUEBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUDxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUEBRBEd-0fNU76fYmlA" name="conditionalNode" type="_17RT8RRBEd-0fNU76fYmlA" association="_17RUDhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUERRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUEhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUExRBEd-0fNU76fYmlA" name="A_clause_conditionalNode" memberEnd="_17RT-hRBEd-0fNU76fYmlA _17RUFRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUFBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUFRRBEd-0fNU76fYmlA" name="conditionalNode" type="_17RT8RRBEd-0fNU76fYmlA" association="_17RUExRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUFhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUFxRBEd-0fNU76fYmlA" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUGBRBEd-0fNU76fYmlA" name="A_clause_test" memberEnd="_17RUGhRBEd-0fNU76fYmlA _17RTyhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUGRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUGhRBEd-0fNU76fYmlA" name="clause" type="_17RTxxRBEd-0fNU76fYmlA" association="_17RUGBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUGxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUHBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUHRRBEd-0fNU76fYmlA" name="A_predecessorClause_successorClause" memberEnd="_17RT0hRBEd-0fNU76fYmlA _17RT1hRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUHhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUHxRBEd-0fNU76fYmlA" name="A_bodyOutput_clause" memberEnd="_17RT3hRBEd-0fNU76fYmlA _17RUIRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUIBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUIRRBEd-0fNU76fYmlA" name="clause" type="_17RTxxRBEd-0fNU76fYmlA" association="_17RUHxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUIhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUIxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUJBRBEd-0fNU76fYmlA" name="A_clause_body" memberEnd="_17RUJhRBEd-0fNU76fYmlA _17RTzhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUJRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUJhRBEd-0fNU76fYmlA" name="clause" type="_17RTxxRBEd-0fNU76fYmlA" association="_17RUJBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUJxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUKBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUKRRBEd-0fNU76fYmlA" name="A_decider_clause" memberEnd="_17RT2hRBEd-0fNU76fYmlA _17RUKxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUKhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUKxRBEd-0fNU76fYmlA" name="clause" visibility="public" type="_17RTxxRBEd-0fNU76fYmlA" association="_17RUKRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RULBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RULRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RULhRBEd-0fNU76fYmlA" name="A_test_loopNode" memberEnd="_17RTlBRBEd-0fNU76fYmlA _17RUMBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RULxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUMBRBEd-0fNU76fYmlA" name="loopNode" type="_17RThRRBEd-0fNU76fYmlA" association="_17RULhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUMRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUMhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUMxRBEd-0fNU76fYmlA" name="A_loopVariableInput_loopNode" memberEnd="_17RTnBRBEd-0fNU76fYmlA _17RUNRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUNBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUNRRBEd-0fNU76fYmlA" name="loopNode" type="_17RThRRBEd-0fNU76fYmlA" association="_17RUMxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUNhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUNxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUOBRBEd-0fNU76fYmlA" name="A_bodyOutput_loopNode" memberEnd="_17RTmBRBEd-0fNU76fYmlA _17RUOhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUORRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUOhRBEd-0fNU76fYmlA" name="loopNode" type="_17RThRRBEd-0fNU76fYmlA" association="_17RUOBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUOxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUPBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUPRRBEd-0fNU76fYmlA" name="A_decider_loopNode" memberEnd="_17RTkBRBEd-0fNU76fYmlA _17RUPxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUPhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUPxRBEd-0fNU76fYmlA" name="loopNode" type="_17RThRRBEd-0fNU76fYmlA" association="_17RUPRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUQBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUQRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUQhRBEd-0fNU76fYmlA" name="A_node_inStructuredNode" memberEnd="_17RTYRRBEd-0fNU76fYmlA _17RS4hRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUQxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RURBRBEd-0fNU76fYmlA" name="A_edge_inStructuredNode" memberEnd="_17RTbBRBEd-0fNU76fYmlA _17RTExRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RURRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RURhRBEd-0fNU76fYmlA" name="A_activity_structuredNode" memberEnd="_17RTZRRBEd-0fNU76fYmlA _17RTJxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RURxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUSBRBEd-0fNU76fYmlA" name="A_loopNode_bodyPart" memberEnd="_17RUShRBEd-0fNU76fYmlA _17RToBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUSRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUShRBEd-0fNU76fYmlA" name="loopNode" visibility="public" type="_17RThRRBEd-0fNU76fYmlA" association="_17RUSBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUSxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUTBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUTRRBEd-0fNU76fYmlA" name="A_result_loopNode" memberEnd="_17RToxRBEd-0fNU76fYmlA _17RUTxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUThRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUTxRBEd-0fNU76fYmlA" name="loopNode" visibility="public" type="_17RThRRBEd-0fNU76fYmlA" association="_17RUTRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUUBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUURRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUUhRBEd-0fNU76fYmlA" name="A_loopVariable_loopNode" memberEnd="_17RTphRBEd-0fNU76fYmlA _17RUVBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUUxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUVBRBEd-0fNU76fYmlA" name="loopNode" visibility="public" type="_17RThRRBEd-0fNU76fYmlA" association="_17RUUhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUVRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUVhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUVxRBEd-0fNU76fYmlA" name="A_loopNode_setupPart" memberEnd="_17RUWRRBEd-0fNU76fYmlA _17RTqRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUWBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RUWRRBEd-0fNU76fYmlA" name="loopNode" visibility="public" type="_17RThRRBEd-0fNU76fYmlA" association="_17RUVxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUWhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUWxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUXBRBEd-0fNU76fYmlA" name="A_structuredNodeOutput_structuredActivityNode" memberEnd="_17RTcBRBEd-0fNU76fYmlA _17RUXRRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RUXRRBEd-0fNU76fYmlA" name="structuredActivityNode" visibility="public" type="_17RTXhRBEd-0fNU76fYmlA" association="_17RUXBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUXhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUXxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUYBRBEd-0fNU76fYmlA" name="A_structuredNodeInput_structuredActivityNode" memberEnd="_17RTcxRBEd-0fNU76fYmlA _17RUYRRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RUYRRBEd-0fNU76fYmlA" name="structuredActivityNode" visibility="public" type="_17RTXhRBEd-0fNU76fYmlA" association="_17RUYBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUYhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUYxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17RUZBRBEd-0fNU76fYmlA" name="ExtraStructuredActivities">
          <packageImport xmi:id="_17RUZRRBEd-0fNU76fYmlA" importedPackage="_17RTWhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUZhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RUZxRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_17RUaBRBEd-0fNU76fYmlA" name="ExpansionKind">
            <eAnnotations xmi:id="_17RUaRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedLiteral xmi:id="_17RUahRBEd-0fNU76fYmlA" name="parallel">
              <ownedComment xmi:id="_17RUaxRBEd-0fNU76fYmlA" annotatedElement="_17RUahRBEd-0fNU76fYmlA">
                <body>The executions are independent. They may be executed concurrently.</body>
              </ownedComment>
            </ownedLiteral>
            <ownedLiteral xmi:id="_17RUbBRBEd-0fNU76fYmlA" name="iterative">
              <ownedComment xmi:id="_17RUbRRBEd-0fNU76fYmlA" annotatedElement="_17RUbBRBEd-0fNU76fYmlA">
                <body>The executions are dependent and must be executed one at a time, in order of the collection elements.</body>
              </ownedComment>
            </ownedLiteral>
            <ownedLiteral xmi:id="_17RUbhRBEd-0fNU76fYmlA" name="stream">
              <ownedComment xmi:id="_17RUbxRBEd-0fNU76fYmlA" annotatedElement="_17RUbhRBEd-0fNU76fYmlA">
                <body>A stream of collection elements flows into a single execution, in order of the collection elements.</body>
              </ownedComment>
            </ownedLiteral>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RUcBRBEd-0fNU76fYmlA" name="ExpansionNode">
            <eAnnotations xmi:id="_17RUcRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RUchRBEd-0fNU76fYmlA" general="_17RSsBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RUcxRBEd-0fNU76fYmlA" name="regionAsOutput" type="_17RUexRBEd-0fNU76fYmlA" association="_17RUmxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUdBRBEd-0fNU76fYmlA" annotatedElement="_17RUcxRBEd-0fNU76fYmlA">
                <body>The expansion region for which the node is an output.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUdRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUdhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RUdxRBEd-0fNU76fYmlA" name="regionAsInput" type="_17RUexRBEd-0fNU76fYmlA" association="_17RUnRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUeBRBEd-0fNU76fYmlA" annotatedElement="_17RUdxRBEd-0fNU76fYmlA">
                <body>The expansion region for which the node is an input.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUeRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUehRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RUexRBEd-0fNU76fYmlA" name="ExpansionRegion">
            <eAnnotations xmi:id="_17RUfBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RUfRRBEd-0fNU76fYmlA" name="fUML_no_crossing_edges" constrainedElement="_17RUexRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUfhRBEd-0fNU76fYmlA" annotatedElement="_17RUfRRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>Edges may not cross into or out of an expansion region.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RUfxRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.edge->forAll(self.node->includes(source) and self.node->includes(target))</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17RUgBRBEd-0fNU76fYmlA" name="fUML_mode_cannot_be_stream" constrainedElement="_17RUexRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUgRRBEd-0fNU76fYmlA" annotatedElement="_17RUgBRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>mode cannot be stream&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RUghRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.mode != ExpansionKind::stream</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17RUgxRBEd-0fNU76fYmlA" name="fUML_no_output_pins" constrainedElement="_17RUexRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUhBRBEd-0fNU76fYmlA" annotatedElement="_17RUgxRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>An expansion region may not have output pins.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RUhRRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.output->isEmpty()</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RUhhRBEd-0fNU76fYmlA" general="_17RTXhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RUhxRBEd-0fNU76fYmlA" name="mode" visibility="public" type="_17RUaBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUiBRBEd-0fNU76fYmlA" annotatedElement="_17RUhxRBEd-0fNU76fYmlA">
                <body>The way in which the executions interact:

parallel: all interactions are independent

iterative: the interactions occur in order of the elements

stream: a stream of values flows into a single execution

</body>
              </ownedComment>
              <defaultValue xmi:type="uml:InstanceValue" xmi:id="_17RUiRRBEd-0fNU76fYmlA" name="iterative" type="_17RUaBRBEd-0fNU76fYmlA" instance="_17RUbBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RUihRBEd-0fNU76fYmlA" name="outputElement" type="_17RUcBRBEd-0fNU76fYmlA" association="_17RUmxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUixRBEd-0fNU76fYmlA" annotatedElement="_17RUihRBEd-0fNU76fYmlA">
                <body>An object node that accepts a separate element of the output collection during each of the multiple executions of the region. The values are formed into a collection that is available when the execution of the region is complete.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUjBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUjRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RUjhRBEd-0fNU76fYmlA" name="inputElement" type="_17RUcBRBEd-0fNU76fYmlA" association="_17RUnRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUjxRBEd-0fNU76fYmlA" annotatedElement="_17RUjhRBEd-0fNU76fYmlA">
                <body>An object node that holds a separate element of the input collection during each of the multiple executions of the region.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUkBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUkRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RUkhRBEd-0fNU76fYmlA" name="setMode">
              <ownedComment xmi:id="_17RUkxRBEd-0fNU76fYmlA">
                <body>this.mode = mode;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUlBRBEd-0fNU76fYmlA" name="mode" type="_17RUaBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RUlRRBEd-0fNU76fYmlA" name="addInputElement">
              <ownedComment xmi:id="_17RUlhRBEd-0fNU76fYmlA">
                <body>this.inputElement.addValue(inputElement);&#xD;
inputElement.regionAsInput = this;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUlxRBEd-0fNU76fYmlA" name="inputElement" type="_17RUcBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RUmBRBEd-0fNU76fYmlA" name="addOutputElement">
              <ownedComment xmi:id="_17RUmRRBEd-0fNU76fYmlA">
                <body>this.outputElement.addValue(outputElement);&#xD;
outputElement.regionAsOutput = this;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUmhRBEd-0fNU76fYmlA" name="outputElement" type="_17RUcBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUmxRBEd-0fNU76fYmlA" name="A_outputElement_regionAsOutput" memberEnd="_17RUihRBEd-0fNU76fYmlA _17RUcxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUnBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RUnRRBEd-0fNU76fYmlA" name="A_inputElement_regionAsInput" memberEnd="_17RUjhRBEd-0fNU76fYmlA _17RUdxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUnhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RUnxRBEd-0fNU76fYmlA" name="Actions">
        <packagedElement xmi:type="uml:Package" xmi:id="_17RUoBRBEd-0fNU76fYmlA" name="BasicActions">
          <packageImport xmi:id="_17RUoRRBEd-0fNU76fYmlA" importedPackage="_17ROgxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUohRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RUoxRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packageImport xmi:id="_17RUpBRBEd-0fNU76fYmlA" importedPackage="_17RSqRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RUpRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RUphRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RUpxRBEd-0fNU76fYmlA" name="SendSignalAction">
            <eAnnotations xmi:id="_17RUqBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RUqRRBEd-0fNU76fYmlA" name="target_signal_reception" constrainedElement="_17RUpxRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RUqhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RUqxRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RUrBRBEd-0fNU76fYmlA" annotatedElement="_17RUqRRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>The target input pin must have a type that has a reception for the signal.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RUrRRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.target.type.oclAsType(Classifier).allFeatures()->select(oclIsKindOf(Reception))->exists(f:Feature|self.signal.conformsTo(f.oclAsType(Reception).signal))&#xD;&#xA;</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RUrhRBEd-0fNU76fYmlA" general="_17RU2RRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RUrxRBEd-0fNU76fYmlA" name="target" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RVWBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUsBRBEd-0fNU76fYmlA" annotatedElement="_17RUrxRBEd-0fNU76fYmlA">
                <body>The target object to which the signal is sent.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUsRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUshRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RUsxRBEd-0fNU76fYmlA" name="signal" type="_17ROkRRBEd-0fNU76fYmlA" association="_17RVUxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RUtBRBEd-0fNU76fYmlA" annotatedElement="_17RUsxRBEd-0fNU76fYmlA">
                <body>The type of signal transmitted to the target object.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RUtRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RUthRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RUtxRBEd-0fNU76fYmlA" name="setTarget">
              <ownedComment xmi:id="_17RUuBRBEd-0fNU76fYmlA">
                <body>super.addInput(target);&#xD;
this.target = target;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUuRRBEd-0fNU76fYmlA" name="target" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RUuhRBEd-0fNU76fYmlA" name="setSignal">
              <ownedComment xmi:id="_17RUuxRBEd-0fNU76fYmlA">
                <body>this.signal = signal;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUvBRBEd-0fNU76fYmlA" name="signal" type="_17ROkRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RUvRRBEd-0fNU76fYmlA" name="OutputPin">
            <eAnnotations xmi:id="_17RUvhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RUvxRBEd-0fNU76fYmlA" general="_17RUwBRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RUwBRBEd-0fNU76fYmlA" name="Pin" isAbstract="true">
            <eAnnotations xmi:id="_17RUwRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RUwhRBEd-0fNU76fYmlA" general="_17RSsBRBEd-0fNU76fYmlA"/>
            <generalization xmi:id="_17RUwxRBEd-0fNU76fYmlA" general="_17RPeRRBEd-0fNU76fYmlA"/>
            <ownedOperation xmi:id="_17RUxBRBEd-0fNU76fYmlA" name="setIsOrdered">
              <ownedComment xmi:id="_17RUxRRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setIsOrdered(isOrdered);</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUxhRBEd-0fNU76fYmlA" name="isOrdered">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RUxxRBEd-0fNU76fYmlA" name="setIsUnique">
              <ownedComment xmi:id="_17RUyBRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setIsUnique(isUnique);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUyRRBEd-0fNU76fYmlA" name="isUnique">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RUyhRBEd-0fNU76fYmlA" name="setUpperValue">
              <ownedComment xmi:id="_17RUyxRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setUpperValue(upperValue);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUzBRBEd-0fNU76fYmlA" name="upperValue" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RUzRRBEd-0fNU76fYmlA" name="setLowerValue">
              <ownedComment xmi:id="_17RUzhRBEd-0fNU76fYmlA">
                <body>this.multiplicityElement.setLowerValue(lowerValue);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RUzxRBEd-0fNU76fYmlA" name="lowerValue" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RU0BRBEd-0fNU76fYmlA" name="setUpper">
              <ownedComment xmi:id="_17RU0RRBEd-0fNU76fYmlA">
                <body>//Note: This is a convenience operation that may be used _instead_ of setUpperValue, not in addition to it.&#xD;
&#xD;
this.multiplicityElement.setUpper(upper);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RU0hRBEd-0fNU76fYmlA" name="upper">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RU0xRBEd-0fNU76fYmlA" name="setLower">
              <ownedComment xmi:id="_17RU1BRBEd-0fNU76fYmlA">
                <body>//Note: This is a convenience operation that may be used _instead_ of setLowerValue, not in addition to it.&#xD;
&#xD;
this.multiplicityElement.setLower(lower);&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RU1RRBEd-0fNU76fYmlA" name="lower">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RU1hRBEd-0fNU76fYmlA" name="InputPin">
            <eAnnotations xmi:id="_17RU1xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RU2BRBEd-0fNU76fYmlA" general="_17RUwBRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RU2RRBEd-0fNU76fYmlA" name="InvocationAction" isAbstract="true">
            <eAnnotations xmi:id="_17RU2hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RU2xRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RU3BRBEd-0fNU76fYmlA" name="argument" visibility="public" type="_17RU1hRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RVYhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RU3RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RU3hRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RU3xRBEd-0fNU76fYmlA" name="addArgument">
              <ownedComment xmi:id="_17RU4BRBEd-0fNU76fYmlA">
                <body>super.addInput(argument);&#xD;
this.argument.addValue(argument);</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RU4RRBEd-0fNU76fYmlA" name="argument" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RU4hRBEd-0fNU76fYmlA" name="CallAction" isAbstract="true">
            <eAnnotations xmi:id="_17RU4xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RU5BRBEd-0fNU76fYmlA" general="_17RU2RRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RU5RRBEd-0fNU76fYmlA" name="isSynchronous">
              <ownedComment xmi:id="_17RU5hRBEd-0fNU76fYmlA" annotatedElement="_17RU5RRBEd-0fNU76fYmlA">
                <body>If true, the call is synchronous and the caller waits for completion of the invoked behavior.

If false, the call is asynchronous and the caller proceeds immediately and does not expect a return values.

</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RU5xRBEd-0fNU76fYmlA" value="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RU6BRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" isOrdered="true" aggregation="composite" association="_17RVThRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RU6RRBEd-0fNU76fYmlA" annotatedElement="_17RU6BRBEd-0fNU76fYmlA">
                <body>A list of output pins where the results of performing the invocation are placed.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RU6hRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RU6xRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RU7BRBEd-0fNU76fYmlA" name="addResult">
              <ownedComment xmi:id="_17RU7RRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result.addValue(result);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RU7hRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RU7xRBEd-0fNU76fYmlA" name="CallBehaviorAction">
            <eAnnotations xmi:id="_17RU8BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RU8RRBEd-0fNU76fYmlA" name="is_synchronous" constrainedElement="_17RU7xRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RU8hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RU8xRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RU9BRBEd-0fNU76fYmlA" annotatedElement="_17RU8RRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>isSynchronous must be true&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RU9RRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.isSynchronous</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17RU9hRBEd-0fNU76fYmlA" name="inactive_behavior" constrainedElement="_17RU7xRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RU9xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RU-BRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RU-RRBEd-0fNU76fYmlA" annotatedElement="_17RU9hRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>The behavior may not be active. &lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RU-hRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>not self.behavior.isActive</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17RU-xRBEd-0fNU76fYmlA" name="proper_context" constrainedElement="_17RU7xRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RU_BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RU_RRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RU_hRBEd-0fNU76fYmlA" annotatedElement="_17RU-xRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>If the behavior has a context, it must be the same as the context of the enclosing activity or a (direct or indirect) superclass of it.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RU_xRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.behavior.context->notEmpty() implies&#xD;&#xA;  union(self.context.allParents())->includes(self.behavior.context)&#xD;&#xA;</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RVABRBEd-0fNU76fYmlA" general="_17RU4hRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RVARRBEd-0fNU76fYmlA" name="behavior" type="_17ROTBRBEd-0fNU76fYmlA" association="_17RVSRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVAhRBEd-0fNU76fYmlA" annotatedElement="_17RVARRBEd-0fNU76fYmlA">
                <body>The invoked behavior. It must be capable of accepting and returning control.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVAxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVBBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RVBRRBEd-0fNU76fYmlA" name="setBehavior">
              <ownedComment xmi:id="_17RVBhRBEd-0fNU76fYmlA">
                <body>this.behavior = behavior;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVBxRBEd-0fNU76fYmlA" name="behavior" type="_17ROTBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RVCBRBEd-0fNU76fYmlA" name="CallOperationAction">
            <eAnnotations xmi:id="_17RVCRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RVChRBEd-0fNU76fYmlA" name="is_synchronous" constrainedElement="_17RVCBRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RVCxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_17RVDBRBEd-0fNU76fYmlA" key="fUML"/>
              </eAnnotations>
              <ownedComment xmi:id="_17RVDRRBEd-0fNU76fYmlA" annotatedElement="_17RVChRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>isSynchronous must be true&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RVDhRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.isSynchronous</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RVDxRBEd-0fNU76fYmlA" general="_17RU4hRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RVEBRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA" association="_17RVPxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVERRBEd-0fNU76fYmlA" annotatedElement="_17RVEBRBEd-0fNU76fYmlA">
                <body>The operation to be invoked by the action execution.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVEhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVExRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RVFBRBEd-0fNU76fYmlA" name="target" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RVRBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVFRRBEd-0fNU76fYmlA" annotatedElement="_17RVFBRBEd-0fNU76fYmlA">
                <body>The target object to which the request is sent. The classifier of the target object is used to dynamically determine a behavior to invoke. This object constitutes the context of the execution of the operation.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVFhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVFxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RVGBRBEd-0fNU76fYmlA" name="setTarget">
              <ownedComment xmi:id="_17RVGRRBEd-0fNU76fYmlA">
                <body>super.addInput(target);&#xD;
this.target = target;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVGhRBEd-0fNU76fYmlA" name="target" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RVGxRBEd-0fNU76fYmlA" name="setOperation">
              <ownedComment xmi:id="_17RVHBRBEd-0fNU76fYmlA">
                <body>this.operation = operation;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVHRRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RVHhRBEd-0fNU76fYmlA" name="Action" isAbstract="true">
            <eAnnotations xmi:id="_17RVHxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RVIBRBEd-0fNU76fYmlA" general="_17RTxBRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RVIRRBEd-0fNU76fYmlA" name="output" type="_17RUvRRBEd-0fNU76fYmlA" isOrdered="true" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" subsettedProperty="_17RRZxRBEd-0fNU76fYmlA" association="_17RVNxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVIhRBEd-0fNU76fYmlA" annotatedElement="_17RVIRRBEd-0fNU76fYmlA">
                <body>The ordered set of output pins connected to the Action. The action places its results onto pins in this set.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVIxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVJBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RVJRRBEd-0fNU76fYmlA" name="context" type="_17RRHRRBEd-0fNU76fYmlA" isReadOnly="true" isDerived="true" association="_17RVPBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVJhRBEd-0fNU76fYmlA" annotatedElement="_17RVJRRBEd-0fNU76fYmlA">
                <body>The classifier that owns the behavior of which this action is a part.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVJxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVKBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RVKRRBEd-0fNU76fYmlA" name="input" visibility="public" type="_17RU1hRBEd-0fNU76fYmlA" isOrdered="true" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" subsettedProperty="_17RRZxRBEd-0fNU76fYmlA" association="_17RVXRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVKhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVKxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RVLBRBEd-0fNU76fYmlA" name="isLocallyReentrant" visibility="public">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RVLRRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RVLhRBEd-0fNU76fYmlA" name="addInput" visibility="protected">
              <ownedComment xmi:id="_17RVLxRBEd-0fNU76fYmlA">
                <body>super.addOwnedElement(input);&#xD;
this.input.addValue(input);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVMBRBEd-0fNU76fYmlA" name="input" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RVMRRBEd-0fNU76fYmlA" name="addOutput" visibility="protected">
              <ownedComment xmi:id="_17RVMhRBEd-0fNU76fYmlA">
                <body>super.addOwnedElement(output);&#xD;
this.output.addValue(output);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVMxRBEd-0fNU76fYmlA" name="output" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RVNBRBEd-0fNU76fYmlA" name="setIsLocallyReentrant">
              <ownedComment xmi:id="_17RVNRRBEd-0fNU76fYmlA">
                <body>this.isLocallyReentrant = isLocallyReentrant;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVNhRBEd-0fNU76fYmlA" name="isLocallyReentrant">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVNxRBEd-0fNU76fYmlA" name="A_action_output" memberEnd="_17RVORRBEd-0fNU76fYmlA _17RVIRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVOBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVORRBEd-0fNU76fYmlA" name="action" type="_17RVHhRBEd-0fNU76fYmlA" association="_17RVNxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVOhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVOxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVPBRBEd-0fNU76fYmlA" name="A_context_action" memberEnd="_17RVJRRBEd-0fNU76fYmlA _17RVPhRBEd-0fNU76fYmlA" isDerived="true">
            <eAnnotations xmi:id="_17RVPRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVPhRBEd-0fNU76fYmlA" name="action" type="_17RVHhRBEd-0fNU76fYmlA" association="_17RVPBRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVPxRBEd-0fNU76fYmlA" name="A_operation_callOperationAction" memberEnd="_17RVEBRBEd-0fNU76fYmlA _17RVQRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVQBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVQRRBEd-0fNU76fYmlA" name="callOperationAction" type="_17RVCBRBEd-0fNU76fYmlA" association="_17RVPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVQhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVQxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVRBRBEd-0fNU76fYmlA" name="A_target_callOperationAction" memberEnd="_17RVFBRBEd-0fNU76fYmlA _17RVRhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVRRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVRhRBEd-0fNU76fYmlA" name="callOperationAction" type="_17RVCBRBEd-0fNU76fYmlA" association="_17RVRBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVRxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVSBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVSRRBEd-0fNU76fYmlA" name="A_behavior_callBehaviorAction" memberEnd="_17RVARRBEd-0fNU76fYmlA _17RVSxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVShRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVSxRBEd-0fNU76fYmlA" name="callBehaviorAction" type="_17RU7xRBEd-0fNU76fYmlA" association="_17RVSRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVTBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVTRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVThRBEd-0fNU76fYmlA" name="A_result_callAction" memberEnd="_17RU6BRBEd-0fNU76fYmlA _17RVUBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVTxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVUBRBEd-0fNU76fYmlA" name="callAction" type="_17RU4hRBEd-0fNU76fYmlA" association="_17RVThRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVURRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVUhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVUxRBEd-0fNU76fYmlA" name="A_signal_sendSignalAction" memberEnd="_17RUsxRBEd-0fNU76fYmlA _17RVVRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVVBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVVRRBEd-0fNU76fYmlA" name="sendSignalAction" type="_17RUpxRBEd-0fNU76fYmlA" association="_17RVUxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVVhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVVxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVWBRBEd-0fNU76fYmlA" name="A_target_sendSignalAction" memberEnd="_17RUrxRBEd-0fNU76fYmlA _17RVWhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVWRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVWhRBEd-0fNU76fYmlA" name="sendSignalAction" type="_17RUpxRBEd-0fNU76fYmlA" association="_17RVWBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVWxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVXBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVXRRBEd-0fNU76fYmlA" name="A_action_input" memberEnd="_17RVXxRBEd-0fNU76fYmlA _17RVKRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVXhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVXxRBEd-0fNU76fYmlA" name="action" visibility="public" type="_17RVHhRBEd-0fNU76fYmlA" association="_17RVXRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVYBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVYRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RVYhRBEd-0fNU76fYmlA" name="A_argument_invocationAction" memberEnd="_17RU3BRBEd-0fNU76fYmlA _17RVZBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVYxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RVZBRBEd-0fNU76fYmlA" name="invocationAction" visibility="public" type="_17RU2RRBEd-0fNU76fYmlA" association="_17RVYhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVZRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVZhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17RVZxRBEd-0fNU76fYmlA" name="IntermediateActions">
          <packageImport xmi:id="_17RVaBRBEd-0fNU76fYmlA" importedPackage="_17RUoBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RVaRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RVahRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RVaxRBEd-0fNU76fYmlA" name="StructuralFeatureAction" isAbstract="true">
            <eAnnotations xmi:id="_17RVbBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedComment xmi:id="_17RVbRRBEd-0fNU76fYmlA" annotatedElement="_17RVaxRBEd-0fNU76fYmlA">
              <body>This abstract action class statically specifies the structural feature being accessed. The object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified structural feature, and the value's multiplicity is 1..1.</body>
            </ownedComment>
            <generalization xmi:id="_17RVbhRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RVbxRBEd-0fNU76fYmlA" name="structuralFeature" type="_17RO1BRBEd-0fNU76fYmlA" association="_17RW8xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVcBRBEd-0fNU76fYmlA" annotatedElement="_17RVbxRBEd-0fNU76fYmlA">
                <body>Structural feature to be read.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVcRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVchRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RVcxRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW7xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVdBRBEd-0fNU76fYmlA" annotatedElement="_17RVcxRBEd-0fNU76fYmlA">
                <body>Gives the input pin from which the object whose structural feature is to be read or written is obtained.

</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVdRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVdhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RVdxRBEd-0fNU76fYmlA" name="setStructuralFeature">
              <ownedComment xmi:id="_17RVeBRBEd-0fNU76fYmlA">
                <body>this.structuralFeature = structuralFeature;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVeRRBEd-0fNU76fYmlA" name="structuralFeature" type="_17RO1BRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RVehRBEd-0fNU76fYmlA" name="setObject">
              <ownedComment xmi:id="_17RVexRBEd-0fNU76fYmlA">
                <body>super.addInput(object);&#xD;
this.object = object;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVfBRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RVfRRBEd-0fNU76fYmlA" name="TestIdentityAction">
            <eAnnotations xmi:id="_17RVfhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RVfxRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RVgBRBEd-0fNU76fYmlA" name="second" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW6xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVgRRBEd-0fNU76fYmlA" annotatedElement="_17RVgBRBEd-0fNU76fYmlA">
                <body>Gives the pin on which an object is placed.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVghRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVgxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RVhBRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW5xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVhRRBEd-0fNU76fYmlA" annotatedElement="_17RVhBRBEd-0fNU76fYmlA">
                <body>Tells whether the two input objects are identical.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVhhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVhxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RViBRBEd-0fNU76fYmlA" name="first" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW4xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RViRRBEd-0fNU76fYmlA" annotatedElement="_17RViBRBEd-0fNU76fYmlA">
                <body>Gives the pin on which an object is placed.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVihRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVixRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RVjBRBEd-0fNU76fYmlA" name="setFirst">
              <ownedComment xmi:id="_17RVjRRBEd-0fNU76fYmlA">
                <body>super.addInput(first);&#xD;
this.first = first;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVjhRBEd-0fNU76fYmlA" name="first" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RVjxRBEd-0fNU76fYmlA" name="setSecond">
              <ownedComment xmi:id="_17RVkBRBEd-0fNU76fYmlA">
                <body>super.addInput(second);&#xD;
this.second = second;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVkRRBEd-0fNU76fYmlA" name="second" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RVkhRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RVkxRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVlBRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RVlRRBEd-0fNU76fYmlA" name="ValueSpecificationAction">
            <eAnnotations xmi:id="_17RVlhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RVlxRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RVmBRBEd-0fNU76fYmlA" name="value" type="_17RO0RRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW2xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVmRRBEd-0fNU76fYmlA" annotatedElement="_17RVmBRBEd-0fNU76fYmlA">
                <body>Value specification to be evaluated.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVmhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVmxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RVnBRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW3xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVnRRBEd-0fNU76fYmlA" annotatedElement="_17RVnBRBEd-0fNU76fYmlA">
                <body>Gives the output pin on which the result is put.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVnhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVnxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RVoBRBEd-0fNU76fYmlA" name="setValue">
              <ownedComment xmi:id="_17RVoRRBEd-0fNU76fYmlA">
                <body>this.value = value;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVohRBEd-0fNU76fYmlA" name="value" type="_17RO0RRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RVoxRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RVpBRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVpRRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RVphRBEd-0fNU76fYmlA" name="WriteLinkAction" isAbstract="true">
            <eAnnotations xmi:id="_17RVpxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RVqBRBEd-0fNU76fYmlA" general="_17RV5xRBEd-0fNU76fYmlA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RVqRRBEd-0fNU76fYmlA" name="WriteStructuralFeatureAction" isAbstract="true">
            <eAnnotations xmi:id="_17RVqhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RVqxRBEd-0fNU76fYmlA" general="_17RVaxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RVrBRBEd-0fNU76fYmlA" name="value" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW1xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVrRRBEd-0fNU76fYmlA" annotatedElement="_17RVrBRBEd-0fNU76fYmlA">
                <body>Value to be added or removed from the structural feature.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVrhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVrxRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RVsBRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW0xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVsRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVshRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RVsxRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RVtBRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVtRRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RVthRBEd-0fNU76fYmlA" name="setValue">
              <ownedComment xmi:id="_17RVtxRBEd-0fNU76fYmlA">
                <body>super.addInput(value);&#xD;
this.value = value;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVuBRBEd-0fNU76fYmlA" name="value" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RVuRRBEd-0fNU76fYmlA" name="RemoveStructuralFeatureValueAction">
            <eAnnotations xmi:id="_17RVuhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RVuxRBEd-0fNU76fYmlA" general="_17RVqRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RVvBRBEd-0fNU76fYmlA" name="isRemoveDuplicates">
              <ownedComment xmi:id="_17RVvRRBEd-0fNU76fYmlA" annotatedElement="_17RVvBRBEd-0fNU76fYmlA">
                <body>Specifies whether to remove duplicates of the value in nonunique structural features.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RVvhRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RVvxRBEd-0fNU76fYmlA" name="removeAt" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWzxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVwBRBEd-0fNU76fYmlA" annotatedElement="_17RVvxRBEd-0fNU76fYmlA">
                <body>Specifies the position of an existing value to remove in ordered nonunique structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVwRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVwhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RVwxRBEd-0fNU76fYmlA" name="setIsRemoveDuplicates">
              <ownedComment xmi:id="_17RVxBRBEd-0fNU76fYmlA">
                <body>this.isRemoveDuplicates = isRemoveDuplicates;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVxRRBEd-0fNU76fYmlA" name="isRemoveDuplicates">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RVxhRBEd-0fNU76fYmlA" name="setRemoveAt">
              <ownedComment xmi:id="_17RVxxRBEd-0fNU76fYmlA">
                <body>if (removeAt != null) {&#xD;
    super.addInput(removeAt);&#xD;
}&#xD;
&#xD;
this.removeAt = removeAt;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RVyBRBEd-0fNU76fYmlA" name="removeAt" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RVyRRBEd-0fNU76fYmlA" name="ReadLinkAction">
            <eAnnotations xmi:id="_17RVyhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RVyxRBEd-0fNU76fYmlA" general="_17RV5xRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RVzBRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWyxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RVzRRBEd-0fNU76fYmlA" annotatedElement="_17RVzBRBEd-0fNU76fYmlA">
                <body>The pin on which are put the objects participating in the association at the end not specified by the inputs.

</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RVzhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RVzxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RV0BRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RV0RRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RV0hRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RV0xRBEd-0fNU76fYmlA" name="ReadSelfAction">
            <eAnnotations xmi:id="_17RV1BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RV1RRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RV1hRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWxxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RV1xRBEd-0fNU76fYmlA" annotatedElement="_17RV1hRBEd-0fNU76fYmlA">
                <body>Gives the output pin on which the hosting object is placed.

</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RV2BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RV2RRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RV2hRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RV2xRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RV3BRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RV3RRBEd-0fNU76fYmlA" name="ReadStructuralFeatureAction">
            <eAnnotations xmi:id="_17RV3hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RV3xRBEd-0fNU76fYmlA" general="_17RVaxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RV4BRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWwxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RV4RRBEd-0fNU76fYmlA" annotatedElement="_17RV4BRBEd-0fNU76fYmlA">
                <body>Gives the output pin on which the result is put.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RV4hRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RV4xRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RV5BRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RV5RRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RV5hRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RV5xRBEd-0fNU76fYmlA" name="LinkAction" isAbstract="true">
            <eAnnotations xmi:id="_17RV6BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RV6RRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RV6hRBEd-0fNU76fYmlA" name="endData" type="_17RWBxRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWvxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RV6xRBEd-0fNU76fYmlA" annotatedElement="_17RV6hRBEd-0fNU76fYmlA">
                <body>Data identifying one end of a link by the objects on its ends and qualifiers.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RV7BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RV7RRBEd-0fNU76fYmlA" value="2"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RV7hRBEd-0fNU76fYmlA" name="inputValue" visibility="public" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW-xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RV7xRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RV8BRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RV8RRBEd-0fNU76fYmlA" name="addEndData">
              <ownedComment xmi:id="_17RV8hRBEd-0fNU76fYmlA">
                <body>this.endData.addValue(endData);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RV8xRBEd-0fNU76fYmlA" name="endData" type="_17RWBxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RV9BRBEd-0fNU76fYmlA" name="addInputValue">
              <ownedComment xmi:id="_17RV9RRBEd-0fNU76fYmlA">
                <body>super.addInput(inputValue);&#xD;
this.inputValue.addValue(inputValue);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RV9hRBEd-0fNU76fYmlA" name="inputValue" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RV9xRBEd-0fNU76fYmlA" name="LinkEndCreationData">
            <eAnnotations xmi:id="_17RV-BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RV-RRBEd-0fNU76fYmlA" general="_17RWBxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RV-hRBEd-0fNU76fYmlA" name="isReplaceAll">
              <ownedComment xmi:id="_17RV-xRBEd-0fNU76fYmlA" annotatedElement="_17RV-hRBEd-0fNU76fYmlA">
                <body>Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RV_BRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RV_RRBEd-0fNU76fYmlA" name="insertAt" type="_17RU1hRBEd-0fNU76fYmlA" association="_17RWuxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RV_hRBEd-0fNU76fYmlA" annotatedElement="_17RV_RRBEd-0fNU76fYmlA">
                <body>Specifies where the new link should be inserted for ordered association ends, or where an existing link should be moved to. The type of the input is UnlimitedNatural, but the input cannot be zero. This pin is omitted for association ends that are not ordered.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RV_xRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWABRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWARRBEd-0fNU76fYmlA" name="setIsReplaceAll">
              <ownedComment xmi:id="_17RWAhRBEd-0fNU76fYmlA">
                <body>this.isReplaceAll = isReplaceAll;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWAxRBEd-0fNU76fYmlA" name="isReplaceAll">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RWBBRBEd-0fNU76fYmlA" name="setInsertAt">
              <ownedComment xmi:id="_17RWBRRBEd-0fNU76fYmlA">
                <body>this.insertAt = insertAt;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWBhRBEd-0fNU76fYmlA" name="insertAt" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RWBxRBEd-0fNU76fYmlA" name="LinkEndData">
            <eAnnotations xmi:id="_17RWCBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RWCRRBEd-0fNU76fYmlA" general="_17RRZRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RWChRBEd-0fNU76fYmlA" name="value" type="_17RU1hRBEd-0fNU76fYmlA" association="_17RWsxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWCxRBEd-0fNU76fYmlA" annotatedElement="_17RWChRBEd-0fNU76fYmlA">
                <body>Input pin that provides the specified object for the given end. This pin is omitted if the link-end data specifies an 'open' end for reading.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWDBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWDRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RWDhRBEd-0fNU76fYmlA" name="end" type="_17RQZhRBEd-0fNU76fYmlA" association="_17RWtxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWDxRBEd-0fNU76fYmlA" annotatedElement="_17RWDhRBEd-0fNU76fYmlA">
                <body>Association end for which this link-end data specifies values.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWEBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWERRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWEhRBEd-0fNU76fYmlA" name="setEnd">
              <ownedComment xmi:id="_17RWExRBEd-0fNU76fYmlA">
                <body>this.end = end;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWFBRBEd-0fNU76fYmlA" name="end" type="_17RQZhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RWFRRBEd-0fNU76fYmlA" name="setValue">
              <ownedComment xmi:id="_17RWFhRBEd-0fNU76fYmlA">
                <body>this.value = value;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWFxRBEd-0fNU76fYmlA" name="value" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RWGBRBEd-0fNU76fYmlA" name="LinkEndDestructionData">
            <eAnnotations xmi:id="_17RWGRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RWGhRBEd-0fNU76fYmlA" general="_17RWBxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RWGxRBEd-0fNU76fYmlA" name="isDestroyDuplicates">
              <ownedComment xmi:id="_17RWHBRBEd-0fNU76fYmlA" annotatedElement="_17RWGxRBEd-0fNU76fYmlA">
                <body>Specifies whether to destroy duplicates of the value in nonunique association ends.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RWHRRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RWHhRBEd-0fNU76fYmlA" name="destroyAt" type="_17RU1hRBEd-0fNU76fYmlA" association="_17RWrxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWHxRBEd-0fNU76fYmlA" annotatedElement="_17RWHhRBEd-0fNU76fYmlA">
                <body>Specifies the position of an existing link to be destroyed in ordered nonunique association ends. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWIBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWIRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWIhRBEd-0fNU76fYmlA" name="setIsDestroyDuplicates">
              <ownedComment xmi:id="_17RWIxRBEd-0fNU76fYmlA">
                <body>this.isDestroyDuplicates = isDestroyDuplicates;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWJBRBEd-0fNU76fYmlA" name="isDestroyDuplicates">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RWJRRBEd-0fNU76fYmlA" name="setDestroyAt">
              <ownedComment xmi:id="_17RWJhRBEd-0fNU76fYmlA">
                <body>this.destroyAt = destroyAt;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWJxRBEd-0fNU76fYmlA" name="destroyAt" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RWKBRBEd-0fNU76fYmlA" name="ClearAssociationAction">
            <eAnnotations xmi:id="_17RWKRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RWKhRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RWKxRBEd-0fNU76fYmlA" name="association" type="_17RRrhRBEd-0fNU76fYmlA" association="_17RWqxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWLBRBEd-0fNU76fYmlA" annotatedElement="_17RWKxRBEd-0fNU76fYmlA">
                <body>Association to be cleared.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWLRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWLhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RWLxRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWpxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWMBRBEd-0fNU76fYmlA" annotatedElement="_17RWLxRBEd-0fNU76fYmlA">
                <body>Gives the input pin from which is obtained the object whose participation in the association is to be cleared.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWMRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWMhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWMxRBEd-0fNU76fYmlA" name="setAssociation">
              <ownedComment xmi:id="_17RWNBRBEd-0fNU76fYmlA">
                <body>this.association = association;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWNRRBEd-0fNU76fYmlA" name="association" type="_17RRrhRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RWNhRBEd-0fNU76fYmlA" name="setObject">
              <ownedComment xmi:id="_17RWNxRBEd-0fNU76fYmlA">
                <body>super.addInput(object);&#xD;
this.object = object;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWOBRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RWORRBEd-0fNU76fYmlA" name="ClearStructuralFeatureAction">
            <eAnnotations xmi:id="_17RWOhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RWOxRBEd-0fNU76fYmlA" general="_17RVaxRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RWPBRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWoxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWPRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWPhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWPxRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RWQBRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWQRRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RWQhRBEd-0fNU76fYmlA" name="CreateLinkAction">
            <eAnnotations xmi:id="_17RWQxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RWRBRBEd-0fNU76fYmlA" general="_17RVphRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RWRRRBEd-0fNU76fYmlA" name="endData" type="_17RV9xRBEd-0fNU76fYmlA" aggregation="composite" redefinedProperty="_17RV6hRBEd-0fNU76fYmlA" association="_17RWnxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWRhRBEd-0fNU76fYmlA" annotatedElement="_17RWRRRBEd-0fNU76fYmlA">
                <body>Specifies ends of association and inputs.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWRxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWSBRBEd-0fNU76fYmlA" value="2"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWSRRBEd-0fNU76fYmlA" name="addEndData">
              <ownedComment xmi:id="_17RWShRBEd-0fNU76fYmlA">
                <body>super.addEndData(endData);&#xD;
this.endData.addValue(endData);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWSxRBEd-0fNU76fYmlA" name="endData" type="_17RV9xRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RWTBRBEd-0fNU76fYmlA" name="CreateObjectAction">
            <eAnnotations xmi:id="_17RWTRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RWThRBEd-0fNU76fYmlA" name="fUML_is_class" constrainedElement="_17RWTBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWTxRBEd-0fNU76fYmlA" annotatedElement="_17RWThRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>The given classifier must be a class.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RWUBRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.classifier.oclIsKindOf(Class)</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RWURRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RWUhRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWlxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWUxRBEd-0fNU76fYmlA" annotatedElement="_17RWUhRBEd-0fNU76fYmlA">
                <body>Gives the output pin on which the result is put.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWVBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWVRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RWVhRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RWmxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWVxRBEd-0fNU76fYmlA" annotatedElement="_17RWVhRBEd-0fNU76fYmlA">
                <body>Classifier to be instantiated.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWWBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWWRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWWhRBEd-0fNU76fYmlA" name="setClassifier">
              <ownedComment xmi:id="_17RWWxRBEd-0fNU76fYmlA">
                <body>this.classifier = classifier;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWXBRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RWXRRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RWXhRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWXxRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RWYBRBEd-0fNU76fYmlA" name="DestroyLinkAction">
            <eAnnotations xmi:id="_17RWYRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RWYhRBEd-0fNU76fYmlA" general="_17RVphRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RWYxRBEd-0fNU76fYmlA" name="endData" type="_17RWGBRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWkxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWZBRBEd-0fNU76fYmlA" annotatedElement="_17RWYxRBEd-0fNU76fYmlA">
                <body>Specifies ends of association and inputs.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWZRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWZhRBEd-0fNU76fYmlA" value="2"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWZxRBEd-0fNU76fYmlA" name="addEndData">
              <ownedComment xmi:id="_17RWaBRBEd-0fNU76fYmlA">
                <body>super.addEndData(endData);&#xD;
this.endData.addValue((LinkEndDestructionData)endData);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWaRRBEd-0fNU76fYmlA" name="endData" type="_17RWBxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RWahRBEd-0fNU76fYmlA" name="DestroyObjectAction">
            <eAnnotations xmi:id="_17RWaxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RWbBRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RWbRRBEd-0fNU76fYmlA" name="isDestroyLinks">
              <ownedComment xmi:id="_17RWbhRBEd-0fNU76fYmlA" annotatedElement="_17RWbRRBEd-0fNU76fYmlA">
                <body>Specifies whether links in which the object participates are destroyed along with the object.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RWbxRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RWcBRBEd-0fNU76fYmlA" name="isDestroyOwnedObjects">
              <ownedComment xmi:id="_17RWcRRBEd-0fNU76fYmlA" annotatedElement="_17RWcBRBEd-0fNU76fYmlA">
                <body>Specifies whether objects owned by the object are destroyed along with the object.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RWchRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RWcxRBEd-0fNU76fYmlA" name="target" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RWjxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RWdBRBEd-0fNU76fYmlA" annotatedElement="_17RWcxRBEd-0fNU76fYmlA">
                <body>The input pin providing the object to be destroyed.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWdRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWdhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWdxRBEd-0fNU76fYmlA" name="setIsDestroyLinks">
              <ownedComment xmi:id="_17RWeBRBEd-0fNU76fYmlA">
                <body>this.isDestroyLinks = isDestroyLinks;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWeRRBEd-0fNU76fYmlA" name="isDestroyLinks">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RWehRBEd-0fNU76fYmlA" name="setIsDestroyOwnedObjects">
              <ownedComment xmi:id="_17RWexRBEd-0fNU76fYmlA">
                <body>this.isDestroyOwnedObjects = isDestroyOwnedObjects;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWfBRBEd-0fNU76fYmlA" name="isDestroyOwnedObjects">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RWfRRBEd-0fNU76fYmlA" name="setTarget">
              <ownedComment xmi:id="_17RWfhRBEd-0fNU76fYmlA">
                <body>super.addInput(target);&#xD;
this.target = target;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWfxRBEd-0fNU76fYmlA" name="target" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RWgBRBEd-0fNU76fYmlA" name="AddStructuralFeatureValueAction">
            <eAnnotations xmi:id="_17RWgRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RWghRBEd-0fNU76fYmlA" general="_17RVqRRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RWgxRBEd-0fNU76fYmlA" name="isReplaceAll">
              <ownedComment xmi:id="_17RWhBRBEd-0fNU76fYmlA" annotatedElement="_17RWgxRBEd-0fNU76fYmlA">
                <body>Specifies whether existing values of the structural feature of the object should be removed before adding the new value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RWhRRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RWhhRBEd-0fNU76fYmlA" name="insertAt" visibility="public" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RW9xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWhxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWiBRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RWiRRBEd-0fNU76fYmlA" name="setIsReplaceAll">
              <ownedComment xmi:id="_17RWihRBEd-0fNU76fYmlA">
                <body>this.isReplaceAll = isReplaceAll;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWixRBEd-0fNU76fYmlA" name="isReplaceAll">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RWjBRBEd-0fNU76fYmlA" name="setInsertAt">
              <ownedComment xmi:id="_17RWjRRBEd-0fNU76fYmlA">
                <body>if (insertAt != null) {&#xD;
    super.addInput(insertAt);&#xD;
}&#xD;
&#xD;
this.insertAt = insertAt;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RWjhRBEd-0fNU76fYmlA" name="insertAt" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWjxRBEd-0fNU76fYmlA" name="A_target_destroyObjectAction" memberEnd="_17RWcxRBEd-0fNU76fYmlA _17RWkBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWkBRBEd-0fNU76fYmlA" name="destroyObjectAction" type="_17RWahRBEd-0fNU76fYmlA" association="_17RWjxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWkRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWkhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWkxRBEd-0fNU76fYmlA" name="A_endData_destroyLinkAction" memberEnd="_17RWYxRBEd-0fNU76fYmlA _17RWlBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWlBRBEd-0fNU76fYmlA" name="destroyLinkAction" type="_17RWYBRBEd-0fNU76fYmlA" association="_17RWkxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWlRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWlhRBEd-0fNU76fYmlA" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWlxRBEd-0fNU76fYmlA" name="A_result_createObjectAction" memberEnd="_17RWUhRBEd-0fNU76fYmlA _17RWmBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWmBRBEd-0fNU76fYmlA" name="createObjectAction" type="_17RWTBRBEd-0fNU76fYmlA" association="_17RWlxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWmRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWmhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWmxRBEd-0fNU76fYmlA" name="A_classifier_createObjectAction" memberEnd="_17RWVhRBEd-0fNU76fYmlA _17RWnBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWnBRBEd-0fNU76fYmlA" name="createObjectAction" type="_17RWTBRBEd-0fNU76fYmlA" association="_17RWmxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWnRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWnhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWnxRBEd-0fNU76fYmlA" name="A_endData_createLinkAction" memberEnd="_17RWRRRBEd-0fNU76fYmlA _17RWoBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWoBRBEd-0fNU76fYmlA" name="createLinkAction" type="_17RWQhRBEd-0fNU76fYmlA" association="_17RWnxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWoRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWohRBEd-0fNU76fYmlA" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWoxRBEd-0fNU76fYmlA" name="A_result_clearStructuralFeatureAction" memberEnd="_17RWPBRBEd-0fNU76fYmlA _17RWpBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWpBRBEd-0fNU76fYmlA" name="clearStructuralFeatureAction" visibility="public" type="_17RWORRBEd-0fNU76fYmlA" association="_17RWoxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWpRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWphRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWpxRBEd-0fNU76fYmlA" name="A_object_clearAssociationAction" memberEnd="_17RWLxRBEd-0fNU76fYmlA _17RWqBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWqBRBEd-0fNU76fYmlA" name="clearAssociationAction" type="_17RWKBRBEd-0fNU76fYmlA" association="_17RWpxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWqRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWqhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWqxRBEd-0fNU76fYmlA" name="A_association_clearAssociationAction" memberEnd="_17RWKxRBEd-0fNU76fYmlA _17RWrBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWrBRBEd-0fNU76fYmlA" name="clearAssociationAction" type="_17RWKBRBEd-0fNU76fYmlA" association="_17RWqxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWrRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWrhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWrxRBEd-0fNU76fYmlA" name="A_destroyAt_linkEndDestructionData" memberEnd="_17RWHhRBEd-0fNU76fYmlA _17RWsBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWsBRBEd-0fNU76fYmlA" name="linkEndDestructionData" type="_17RWGBRBEd-0fNU76fYmlA" association="_17RWrxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWsRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWshRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWsxRBEd-0fNU76fYmlA" name="A_value_linkEndData" memberEnd="_17RWChRBEd-0fNU76fYmlA _17RWtBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWtBRBEd-0fNU76fYmlA" name="linkEndData" type="_17RWBxRBEd-0fNU76fYmlA" association="_17RWsxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWtRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWthRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWtxRBEd-0fNU76fYmlA" name="A_end_linkEndData" memberEnd="_17RWDhRBEd-0fNU76fYmlA _17RWuBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWuBRBEd-0fNU76fYmlA" name="linkEndData" type="_17RWBxRBEd-0fNU76fYmlA" association="_17RWtxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWuRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWuhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWuxRBEd-0fNU76fYmlA" name="A_insertAt_linkEndCreationData" memberEnd="_17RV_RRBEd-0fNU76fYmlA _17RWvBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWvBRBEd-0fNU76fYmlA" name="linkEndCreationData" type="_17RV9xRBEd-0fNU76fYmlA" association="_17RWuxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWvRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWvhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWvxRBEd-0fNU76fYmlA" name="A_endData_linkAction" memberEnd="_17RV6hRBEd-0fNU76fYmlA _17RWwBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWwBRBEd-0fNU76fYmlA" name="linkAction" type="_17RV5xRBEd-0fNU76fYmlA" association="_17RWvxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWwRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWwhRBEd-0fNU76fYmlA" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWwxRBEd-0fNU76fYmlA" name="A_result_readStructuralFeatureAction" memberEnd="_17RV4BRBEd-0fNU76fYmlA _17RWxBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWxBRBEd-0fNU76fYmlA" name="readStructuralFeatureAction" type="_17RV3RRBEd-0fNU76fYmlA" association="_17RWwxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWxRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWxhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWxxRBEd-0fNU76fYmlA" name="A_result_readSelfAction" memberEnd="_17RV1hRBEd-0fNU76fYmlA _17RWyBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWyBRBEd-0fNU76fYmlA" name="readSelfAction" type="_17RV0xRBEd-0fNU76fYmlA" association="_17RWxxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWyRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWyhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWyxRBEd-0fNU76fYmlA" name="A_result_readLinkAction" memberEnd="_17RVzBRBEd-0fNU76fYmlA _17RWzBRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RWzBRBEd-0fNU76fYmlA" name="readLinkAction" type="_17RVyRRBEd-0fNU76fYmlA" association="_17RWyxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RWzRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RWzhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RWzxRBEd-0fNU76fYmlA" name="A_removeAt_removeStructuralFeatureValueAction" memberEnd="_17RVvxRBEd-0fNU76fYmlA _17RW0BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW0BRBEd-0fNU76fYmlA" name="removeStructuralFeatureValueAction" type="_17RVuRRBEd-0fNU76fYmlA" association="_17RWzxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW0RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW0hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW0xRBEd-0fNU76fYmlA" name="A_result_writeStructuralFeatureAction" memberEnd="_17RVsBRBEd-0fNU76fYmlA _17RW1BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW1BRBEd-0fNU76fYmlA" name="writeStructuralFeatureAction" visibility="public" type="_17RVqRRBEd-0fNU76fYmlA" association="_17RW0xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW1RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW1hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW1xRBEd-0fNU76fYmlA" name="A_value_writeStructuralFeatureAction" memberEnd="_17RVrBRBEd-0fNU76fYmlA _17RW2BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW2BRBEd-0fNU76fYmlA" name="writeStructuralFeatureAction" type="_17RVqRRBEd-0fNU76fYmlA" association="_17RW1xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW2RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW2hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW2xRBEd-0fNU76fYmlA" name="A_value_valueSpecificationAction" memberEnd="_17RVmBRBEd-0fNU76fYmlA _17RW3BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW3BRBEd-0fNU76fYmlA" name="valueSpecificationAction" type="_17RVlRRBEd-0fNU76fYmlA" association="_17RW2xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW3RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW3hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW3xRBEd-0fNU76fYmlA" name="A_result_valueSpecificationAction" memberEnd="_17RVnBRBEd-0fNU76fYmlA _17RW4BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW4BRBEd-0fNU76fYmlA" name="valueSpecificationAction" type="_17RVlRRBEd-0fNU76fYmlA" association="_17RW3xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW4RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW4hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW4xRBEd-0fNU76fYmlA" name="A_first_testIdentityAction" memberEnd="_17RViBRBEd-0fNU76fYmlA _17RW5BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW5BRBEd-0fNU76fYmlA" name="testIdentityAction" type="_17RVfRRBEd-0fNU76fYmlA" association="_17RW4xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW5RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW5hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW5xRBEd-0fNU76fYmlA" name="A_result_testIdentityAction" memberEnd="_17RVhBRBEd-0fNU76fYmlA _17RW6BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW6BRBEd-0fNU76fYmlA" name="testIdentityAction" type="_17RVfRRBEd-0fNU76fYmlA" association="_17RW5xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW6RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW6hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW6xRBEd-0fNU76fYmlA" name="A_second_testIdentityAction" memberEnd="_17RVgBRBEd-0fNU76fYmlA _17RW7BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW7BRBEd-0fNU76fYmlA" name="testIdentityAction" type="_17RVfRRBEd-0fNU76fYmlA" association="_17RW6xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW7RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW7hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW7xRBEd-0fNU76fYmlA" name="A_object_structuralFeatureAction" memberEnd="_17RVcxRBEd-0fNU76fYmlA _17RW8BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW8BRBEd-0fNU76fYmlA" name="structuralFeatureAction" type="_17RVaxRBEd-0fNU76fYmlA" association="_17RW7xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW8RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW8hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW8xRBEd-0fNU76fYmlA" name="A_structuralFeatureAction_structuralFeature" memberEnd="_17RW9BRBEd-0fNU76fYmlA _17RVbxRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW9BRBEd-0fNU76fYmlA" name="structuralFeatureAction" type="_17RVaxRBEd-0fNU76fYmlA" association="_17RW8xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW9RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW9hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW9xRBEd-0fNU76fYmlA" name="A_insertAt_addStructuralFeatureValueAction" memberEnd="_17RWhhRBEd-0fNU76fYmlA _17RW-BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW-BRBEd-0fNU76fYmlA" name="addStructuralFeatureValueAction" visibility="public" type="_17RWgBRBEd-0fNU76fYmlA" association="_17RW9xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW-RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW-hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RW-xRBEd-0fNU76fYmlA" name="A_inputValue_linkAction" memberEnd="_17RV7hRBEd-0fNU76fYmlA _17RW_BRBEd-0fNU76fYmlA">
            <ownedEnd xmi:id="_17RW_BRBEd-0fNU76fYmlA" name="linkAction" visibility="public" type="_17RV5xRBEd-0fNU76fYmlA" association="_17RW-xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RW_RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RW_hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_17RW_xRBEd-0fNU76fYmlA" name="CompleteActions">
          <packageImport xmi:id="_17RXABRBEd-0fNU76fYmlA" importedPackage="_17RUoBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RXARRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_17RXAhRBEd-0fNU76fYmlA" key="import"/>
            </eAnnotations>
          </packageImport>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RXAxRBEd-0fNU76fYmlA" name="StartClassifierBehaviorAction">
            <eAnnotations xmi:id="_17RXBBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RXBRRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RXBhRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RX6RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXBxRBEd-0fNU76fYmlA" annotatedElement="_17RXBhRBEd-0fNU76fYmlA">
                <body>Holds the object on which to start the owned behavior.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXCBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXCRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RXChRBEd-0fNU76fYmlA" name="setObject">
              <ownedComment xmi:id="_17RXCxRBEd-0fNU76fYmlA">
                <body>super.addInput(object);&#xD;
this.object = object;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXDBRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RXDRRBEd-0fNU76fYmlA" name="StartObjectBehaviorAction">
            <eAnnotations xmi:id="_17RXDhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RXDxRBEd-0fNU76fYmlA" name="fUML_is_asynchronous" constrainedElement="_17RXDRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXEBRBEd-0fNU76fYmlA" annotatedElement="_17RXDxRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>isSynchronous must be false.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RXERRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>not self.isSynchronous</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RXEhRBEd-0fNU76fYmlA" general="_17RU4hRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RXExRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RX5BRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXFBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXFRRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RXFhRBEd-0fNU76fYmlA" name="setObject">
              <ownedComment xmi:id="_17RXFxRBEd-0fNU76fYmlA">
                <body>super.addInput(object);&#xD;
this.object = object;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXGBRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RXGRRBEd-0fNU76fYmlA" name="ReduceAction">
            <eAnnotations xmi:id="_17RXGhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RXGxRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RXHBRBEd-0fNU76fYmlA" name="reducer" type="_17ROTBRBEd-0fNU76fYmlA" association="_17RX3xRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXHRRBEd-0fNU76fYmlA" annotatedElement="_17RXHBRBEd-0fNU76fYmlA">
                <body>Behavior that is applied to two elements of the input collection to produce a value that is the same type as elements of the collection.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXHhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXHxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXIBRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RX1RRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXIRRBEd-0fNU76fYmlA" annotatedElement="_17RXIBRBEd-0fNU76fYmlA">
                <body>Gives the output pin on which the result is put.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXIhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXIxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXJBRBEd-0fNU76fYmlA" name="collection" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RX2hRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXJRRBEd-0fNU76fYmlA" annotatedElement="_17RXJBRBEd-0fNU76fYmlA">
                <body>The collection to be reduced.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXJhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXJxRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXKBRBEd-0fNU76fYmlA" name="isOrdered">
              <ownedComment xmi:id="_17RXKRRBEd-0fNU76fYmlA" annotatedElement="_17RXKBRBEd-0fNU76fYmlA">
                <body>Tells whether the order of the input collection should determine the order in which the behavior is applied to its elements.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RXKhRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RXKxRBEd-0fNU76fYmlA" name="setIsOrdered">
              <ownedComment xmi:id="_17RXLBRBEd-0fNU76fYmlA">
                <body>this.isOrdered = isOrdered;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXLRRBEd-0fNU76fYmlA" name="isOrdered">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXLhRBEd-0fNU76fYmlA" name="setReducer">
              <ownedComment xmi:id="_17RXLxRBEd-0fNU76fYmlA">
                <body>this.reducer = reducer;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXMBRBEd-0fNU76fYmlA" name="reducer" type="_17ROTBRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXMRRBEd-0fNU76fYmlA" name="setCollection">
              <ownedComment xmi:id="_17RXMhRBEd-0fNU76fYmlA">
                <body>super.addInput(collection);&#xD;
this.collection = collection;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXMxRBEd-0fNU76fYmlA" name="collection" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXNBRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RXNRRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXNhRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RXNxRBEd-0fNU76fYmlA" name="ReadExtentAction">
            <eAnnotations xmi:id="_17RXOBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RXORRBEd-0fNU76fYmlA" name="fUML_is_class" constrainedElement="_17RXNxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXOhRBEd-0fNU76fYmlA" annotatedElement="_17RXORRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>The classifier must be a class.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RXOxRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.classifier.oclIsKindOf(Class)</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RXPBRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RXPRRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RX0BRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXPhRBEd-0fNU76fYmlA" annotatedElement="_17RXPRRBEd-0fNU76fYmlA">
                <body>The runtime instances of the classifier.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXPxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXQBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXQRRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RXyxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXQhRBEd-0fNU76fYmlA" annotatedElement="_17RXQRRBEd-0fNU76fYmlA">
                <body>The classifier whose instances are to be retrieved.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXQxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXRBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RXRRRBEd-0fNU76fYmlA" name="setClassifier">
              <ownedComment xmi:id="_17RXRhRBEd-0fNU76fYmlA">
                <body>this.classifier = classifier;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXRxRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXSBRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RXSRRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXShRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RXSxRBEd-0fNU76fYmlA" name="ReadIsClassifiedObjectAction">
            <eAnnotations xmi:id="_17RXTBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <generalization xmi:id="_17RXTRRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RXThRBEd-0fNU76fYmlA" name="isDirect">
              <ownedComment xmi:id="_17RXTxRBEd-0fNU76fYmlA" annotatedElement="_17RXThRBEd-0fNU76fYmlA">
                <body>Indicates whether the classifier must directly classify the input object.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RXUBRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXURRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RXxhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXUhRBEd-0fNU76fYmlA" annotatedElement="_17RXURRBEd-0fNU76fYmlA">
                <body>The classifier against which the classification of the input object is tested.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXUxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXVBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXVRRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RXwRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXVhRBEd-0fNU76fYmlA" annotatedElement="_17RXVRRBEd-0fNU76fYmlA">
                <body>After termination of the action, will hold the result of the test.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXVxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXWBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXWRRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RXvBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXWhRBEd-0fNU76fYmlA" annotatedElement="_17RXWRRBEd-0fNU76fYmlA">
                <body>Holds the object whose classification is to be tested.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXWxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXXBRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RXXRRBEd-0fNU76fYmlA" name="setIsDirect">
              <ownedComment xmi:id="_17RXXhRBEd-0fNU76fYmlA">
                <body>this.isDirect = isDirect;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXXxRBEd-0fNU76fYmlA" name="isDirect">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXYBRBEd-0fNU76fYmlA" name="setClassifier">
              <ownedComment xmi:id="_17RXYRRBEd-0fNU76fYmlA">
                <body>this.classifier = classifier;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXYhRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXYxRBEd-0fNU76fYmlA" name="setResult">
              <ownedComment xmi:id="_17RXZBRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result = result;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXZRRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RXZhRBEd-0fNU76fYmlA" name="ReclassifyObjectAction">
            <eAnnotations xmi:id="_17RXZxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RXaBRBEd-0fNU76fYmlA" name="fUML_old_new_classes" constrainedElement="_17RXZhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXaRRBEd-0fNU76fYmlA" annotatedElement="_17RXaBRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>All the old and new classifiers must be classes.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RXahRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.oldClassifier->forAll(oclIsKindOf(Class)) and self.newClassifier->forAll(oclIsKindOf(Class))</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RXaxRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RXbBRBEd-0fNU76fYmlA" name="isReplaceAll">
              <ownedComment xmi:id="_17RXbRRBEd-0fNU76fYmlA" annotatedElement="_17RXbBRBEd-0fNU76fYmlA">
                <body>Specifies whether existing classifiers should be removed before adding the new classifiers.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RXbhRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXbxRBEd-0fNU76fYmlA" name="oldClassifier" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RXtxRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXcBRBEd-0fNU76fYmlA" annotatedElement="_17RXbxRBEd-0fNU76fYmlA">
                <body>A set of classifiers to be removed from the classifiers of the object.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXcRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXchRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXcxRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA" aggregation="composite" association="_17RXshRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXdBRBEd-0fNU76fYmlA" annotatedElement="_17RXcxRBEd-0fNU76fYmlA">
                <body>Holds the object to be reclassified.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXdRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXdhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXdxRBEd-0fNU76fYmlA" name="newClassifier" visibility="public" type="_17RRHRRBEd-0fNU76fYmlA" association="_17RX7hRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXeBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXeRRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RXehRBEd-0fNU76fYmlA" name="setIsReplaceAll">
              <ownedComment xmi:id="_17RXexRBEd-0fNU76fYmlA">
                <body>this.isReplaceAll = isReplaceAll;&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXfBRBEd-0fNU76fYmlA" name="isReplaceAll">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXfRRBEd-0fNU76fYmlA" name="addOldClassifier">
              <ownedComment xmi:id="_17RXfhRBEd-0fNU76fYmlA">
                <body>this.oldClassifier.addValue(oldClassifier);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXfxRBEd-0fNU76fYmlA" name="oldClassifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXgBRBEd-0fNU76fYmlA" name="addNewClassifier">
              <ownedComment xmi:id="_17RXgRRBEd-0fNU76fYmlA">
                <body>this.newClassifier.addValue(newClassifier);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXghRBEd-0fNU76fYmlA" name="newClassifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXgxRBEd-0fNU76fYmlA" name="setObject">
              <ownedComment xmi:id="_17RXhBRBEd-0fNU76fYmlA">
                <body>super.addInput(object);&#xD;
this.object = object;&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXhRRBEd-0fNU76fYmlA" name="object" type="_17RU1hRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_17RXhhRBEd-0fNU76fYmlA" name="AcceptEventAction">
            <eAnnotations xmi:id="_17RXhxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedRule xmi:id="_17RXiBRBEd-0fNU76fYmlA" name="fUML_active_context" constrainedElement="_17RXhhRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RXiRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
              <ownedComment xmi:id="_17RXihRBEd-0fNU76fYmlA" annotatedElement="_17RXiBRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>&#xD;
&lt;P>The context of the containing activity of the accept event action must be an active class. &lt;/P>&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RXixRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.context.oclAsType(Class).isActive</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17RXjBRBEd-0fNU76fYmlA" name="fUML_only_signal_event_triggers" constrainedElement="_17RXhhRBEd-0fNU76fYmlA">
              <eAnnotations xmi:id="_17RXjRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
              <ownedComment xmi:id="_17RXjhRBEd-0fNU76fYmlA" annotatedElement="_17RXjBRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>All triggers must be for signal events.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RXjxRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>self.trigger.event->forAll(oclIsKindOf(SignalEvent))</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_17RXkBRBEd-0fNU76fYmlA" name="fUML_receive_all_triggering_signals" constrainedElement="_17RXhhRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXkRRBEd-0fNU76fYmlA" annotatedElement="_17RXkBRBEd-0fNU76fYmlA">
                <body>&lt;HTML>&lt;HEAD>&#xD;
&lt;META content=&quot;MSHTML 6.00.6000.16705&quot; name=GENERATOR>&lt;/HEAD>&#xD;
&lt;BODY>The context class must have receptions for all triggering signals.&lt;/BODY>&lt;/HTML></body>
              </ownedComment>
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_17RXkhRBEd-0fNU76fYmlA">
                <language>OCL</language>
                <body>let cls:Class = self.context.oclAsType(Class) in&#xD;&#xA;let classes:Bag(Class) = cls.allParents()->select(oclIsKindOf(Class))->collect(oclAsType(Class))->union(cls->asBag()) in&#xD;&#xA;classes.ownedReception.signal->includesAll(self.trigger.event->collect(oclAsType(SignalEvent)).signal)</body>
              </specification>
            </ownedRule>
            <generalization xmi:id="_17RXkxRBEd-0fNU76fYmlA" general="_17RVHhRBEd-0fNU76fYmlA"/>
            <ownedAttribute xmi:id="_17RXlBRBEd-0fNU76fYmlA" name="isUnmarshall">
              <ownedComment xmi:id="_17RXlRRBEd-0fNU76fYmlA" annotatedElement="_17RXlBRBEd-0fNU76fYmlA">
                <body>Indicates whether there is a single output pin for the event, or multiple output pins for attributes of the event.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_17RXlhRBEd-0fNU76fYmlA">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </defaultValue>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXlxRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA" association="_17RXqBRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXmBRBEd-0fNU76fYmlA" annotatedElement="_17RXlxRBEd-0fNU76fYmlA">
                <body>Pins holding the received event objects or their attributes. Event objects may be copied in transmission, so identity might not be preserved.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXmRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXmhRBEd-0fNU76fYmlA"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_17RXmxRBEd-0fNU76fYmlA" name="trigger" type="_17ROhxRBEd-0fNU76fYmlA" aggregation="composite" association="_17RXrRRBEd-0fNU76fYmlA">
              <ownedComment xmi:id="_17RXnBRBEd-0fNU76fYmlA" annotatedElement="_17RXmxRBEd-0fNU76fYmlA">
                <body>The type of events accepted by the action, as specified by triggers. For triggers with signal events, a signal of the specified type or any subtype of the specified signal type is accepted.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXnRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXnhRBEd-0fNU76fYmlA" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_17RXnxRBEd-0fNU76fYmlA" name="setIsUnmarshall">
              <ownedComment xmi:id="_17RXoBRBEd-0fNU76fYmlA">
                <body>this.isUnmarshall = isUnmarshall;</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXoRRBEd-0fNU76fYmlA" name="isUnmarshall">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXohRBEd-0fNU76fYmlA" name="addTrigger">
              <ownedComment xmi:id="_17RXoxRBEd-0fNU76fYmlA">
                <body>this.trigger.addValue(trigger);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXpBRBEd-0fNU76fYmlA" name="trigger" type="_17ROhxRBEd-0fNU76fYmlA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_17RXpRRBEd-0fNU76fYmlA" name="addResult">
              <ownedComment xmi:id="_17RXphRBEd-0fNU76fYmlA">
                <body>super.addOutput(result);&#xD;
this.result.addValue(result);&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:id="_17RXpxRBEd-0fNU76fYmlA" name="result" type="_17RUvRRBEd-0fNU76fYmlA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RXqBRBEd-0fNU76fYmlA" name="A_result_acceptEventAction" memberEnd="_17RXlxRBEd-0fNU76fYmlA _17RXqhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RXqRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RXqhRBEd-0fNU76fYmlA" name="acceptEventAction" type="_17RXhhRBEd-0fNU76fYmlA" association="_17RXqBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXqxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXrBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RXrRRBEd-0fNU76fYmlA" name="A_trigger_acceptEventAction" memberEnd="_17RXmxRBEd-0fNU76fYmlA _17RXrxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RXrhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RXrxRBEd-0fNU76fYmlA" name="acceptEventAction" type="_17RXhhRBEd-0fNU76fYmlA" association="_17RXrRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXsBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXsRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RXshRBEd-0fNU76fYmlA" name="A_reclassifyObjectAction_object" memberEnd="_17RXtBRBEd-0fNU76fYmlA _17RXcxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RXsxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RXtBRBEd-0fNU76fYmlA" name="reclassifyObjectAction" type="_17RXZhRBEd-0fNU76fYmlA" association="_17RXshRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXtRRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXthRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RXtxRBEd-0fNU76fYmlA" name="A_oldClassifier_reclassifyObjectAction" memberEnd="_17RXbxRBEd-0fNU76fYmlA _17RXuRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RXuBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RXuRRBEd-0fNU76fYmlA" name="reclassifyObjectAction" type="_17RXZhRBEd-0fNU76fYmlA" association="_17RXtxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXuhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXuxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RXvBRBEd-0fNU76fYmlA" name="A_object_readIsClassifiedObjectAction" memberEnd="_17RXWRRBEd-0fNU76fYmlA _17RXvhRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RXvRRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RXvhRBEd-0fNU76fYmlA" name="readIsClassifiedObjectAction" type="_17RXSxRBEd-0fNU76fYmlA" association="_17RXvBRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXvxRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXwBRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RXwRRBEd-0fNU76fYmlA" name="A_result_readIsClassifiedObjectAction" memberEnd="_17RXVRRBEd-0fNU76fYmlA _17RXwxRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RXwhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RXwxRBEd-0fNU76fYmlA" name="readIsClassifiedObjectAction" type="_17RXSxRBEd-0fNU76fYmlA" association="_17RXwRRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXxBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXxRRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RXxhRBEd-0fNU76fYmlA" name="A_classifier_readIsClassifiedObjectAction" memberEnd="_17RXURRBEd-0fNU76fYmlA _17RXyBRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RXxxRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RXyBRBEd-0fNU76fYmlA" name="readIsClassifiedObjectAction" type="_17RXSxRBEd-0fNU76fYmlA" association="_17RXxhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXyRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXyhRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RXyxRBEd-0fNU76fYmlA" name="A_classifier_readExtentAction" memberEnd="_17RXQRRBEd-0fNU76fYmlA _17RXzRRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RXzBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RXzRRBEd-0fNU76fYmlA" name="readExtentAction" type="_17RXNxRBEd-0fNU76fYmlA" association="_17RXyxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RXzhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RXzxRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RX0BRBEd-0fNU76fYmlA" name="A_result_readExtentAction" memberEnd="_17RXPRRBEd-0fNU76fYmlA _17RX0hRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RX0RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RX0hRBEd-0fNU76fYmlA" name="readExtentAction" type="_17RXNxRBEd-0fNU76fYmlA" association="_17RX0BRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RX0xRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RX1BRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RX1RRBEd-0fNU76fYmlA" name="A_result_reduceAction" memberEnd="_17RXIBRBEd-0fNU76fYmlA _17RX1xRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RX1hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RX1xRBEd-0fNU76fYmlA" name="reduceAction" type="_17RXGRRBEd-0fNU76fYmlA" association="_17RX1RRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RX2BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RX2RRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RX2hRBEd-0fNU76fYmlA" name="A_collection_reduceAction" memberEnd="_17RXJBRBEd-0fNU76fYmlA _17RX3BRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RX2xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RX3BRBEd-0fNU76fYmlA" name="reduceAction" type="_17RXGRRBEd-0fNU76fYmlA" association="_17RX2hRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RX3RRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RX3hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RX3xRBEd-0fNU76fYmlA" name="A_reducer_reduceAction" memberEnd="_17RXHBRBEd-0fNU76fYmlA _17RX4RRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RX4BRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RX4RRBEd-0fNU76fYmlA" name="reduceAction" type="_17RXGRRBEd-0fNU76fYmlA" association="_17RX3xRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RX4hRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RX4xRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RX5BRBEd-0fNU76fYmlA" name="A_object_startObjectBehaviorAction" memberEnd="_17RXExRBEd-0fNU76fYmlA _17RX5hRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RX5RRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RX5hRBEd-0fNU76fYmlA" name="startObjectBehaviorAction" visibility="public" type="_17RXDRRBEd-0fNU76fYmlA" association="_17RX5BRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RX5xRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RX6BRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RX6RRBEd-0fNU76fYmlA" name="A_object_startClassifierBehaviorAction" memberEnd="_17RXBhRBEd-0fNU76fYmlA _17RX6xRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RX6hRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RX6xRBEd-0fNU76fYmlA" name="startClassifierBehaviorAction" type="_17RXAxRBEd-0fNU76fYmlA" association="_17RX6RRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RX7BRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RX7RRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_17RX7hRBEd-0fNU76fYmlA" name="A_newClassifier_reclassifyObjectAction" memberEnd="_17RXdxRBEd-0fNU76fYmlA _17RX8BRBEd-0fNU76fYmlA">
            <eAnnotations xmi:id="_17RX7xRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
            <ownedEnd xmi:id="_17RX8BRBEd-0fNU76fYmlA" name="reclassifyObjectAction" visibility="public" type="_17RXZhRBEd-0fNU76fYmlA" association="_17RX7hRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RX8RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RX8hRBEd-0fNU76fYmlA"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RX8xRBEd-0fNU76fYmlA" name="L1">
        <packageMerge xmi:id="_17RX9BRBEd-0fNU76fYmlA" mergedPackage="_17ROzRRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RX9RRBEd-0fNU76fYmlA" mergedPackage="_17ROHRRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RX9hRBEd-0fNU76fYmlA" mergedPackage="_17ROgxRBEd-0fNU76fYmlA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RX9xRBEd-0fNU76fYmlA" name="L2">
        <packageMerge xmi:id="_17RX-BRBEd-0fNU76fYmlA" mergedPackage="_17RX8xRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RX-RRBEd-0fNU76fYmlA" mergedPackage="_17RVZxRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RX-hRBEd-0fNU76fYmlA" mergedPackage="_17RSqRRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RX-xRBEd-0fNU76fYmlA" mergedPackage="_17RUoBRBEd-0fNU76fYmlA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RX_BRBEd-0fNU76fYmlA" name="L3">
        <packageMerge xmi:id="_17RX_RRBEd-0fNU76fYmlA" mergedPackage="_17RX9xRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RX_hRBEd-0fNU76fYmlA" mergedPackage="_17RTWhRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RX_xRBEd-0fNU76fYmlA" mergedPackage="_17RUZBRBEd-0fNU76fYmlA"/>
        <packageMerge xmi:id="_17RYABRBEd-0fNU76fYmlA" mergedPackage="_17RW_xRBEd-0fNU76fYmlA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_17RYARRBEd-0fNU76fYmlA" name="Test">
      <packagedElement xmi:type="uml:Association" xmi:id="_17RYAhRBEd-0fNU76fYmlA" memberEnd="_17RYKhRBEd-0fNU76fYmlA _17RYAxRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RYAxRBEd-0fNU76fYmlA" visibility="private" type="_17RYFhRBEd-0fNU76fYmlA" association="_17RYAhRBEd-0fNU76fYmlA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RYBBRBEd-0fNU76fYmlA" memberEnd="_17RYJxRBEd-0fNU76fYmlA _17RYBRRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RYBRRBEd-0fNU76fYmlA" visibility="private" type="_17RYFhRBEd-0fNU76fYmlA" association="_17RYBBRBEd-0fNU76fYmlA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RYBhRBEd-0fNU76fYmlA" memberEnd="_17RYJBRBEd-0fNU76fYmlA _17RYBxRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RYBxRBEd-0fNU76fYmlA" visibility="private" type="_17RYFhRBEd-0fNU76fYmlA" association="_17RYBhRBEd-0fNU76fYmlA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RYCBRBEd-0fNU76fYmlA" memberEnd="_17RZdBRBEd-0fNU76fYmlA _17RYCRRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RYCRRBEd-0fNU76fYmlA" visibility="private" type="_17RZcxRBEd-0fNU76fYmlA" association="_17RYCBRBEd-0fNU76fYmlA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RYChRBEd-0fNU76fYmlA" memberEnd="_17RYHhRBEd-0fNU76fYmlA _17RYCxRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RYCxRBEd-0fNU76fYmlA" visibility="private" type="_17RYFhRBEd-0fNU76fYmlA" association="_17RYChRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYDBRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYDRRBEd-0fNU76fYmlA"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RYDhRBEd-0fNU76fYmlA" memberEnd="_17RYGxRBEd-0fNU76fYmlA _17RYDxRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RYDxRBEd-0fNU76fYmlA" visibility="private" type="_17RYFhRBEd-0fNU76fYmlA" association="_17RYDhRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYEBRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYERRBEd-0fNU76fYmlA"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RYEhRBEd-0fNU76fYmlA" memberEnd="_17RYIRRBEd-0fNU76fYmlA _17RYExRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RYExRBEd-0fNU76fYmlA" visibility="private" type="_17RYFhRBEd-0fNU76fYmlA" association="_17RYEhRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYFBRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYFRRBEd-0fNU76fYmlA"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RYFhRBEd-0fNU76fYmlA" name="TestEnvironment">
        <ownedComment xmi:id="_17RYFxRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="_17RYGBRBEd-0fNU76fYmlA" name="variables" type="_17RZcxRBEd-0fNU76fYmlA" aggregation="composite" association="_17RYahRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYGRRBEd-0fNU76fYmlA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYGhRBEd-0fNU76fYmlA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_17RYGxRBEd-0fNU76fYmlA" name="primitiveTypes" type="_17RaMRRBEd-0fNU76fYmlA" aggregation="composite" association="_17RYDhRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYHBRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYHRRBEd-0fNU76fYmlA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_17RYHhRBEd-0fNU76fYmlA" name="elements" type="_17RPsBRBEd-0fNU76fYmlA" association="_17RYChRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYHxRBEd-0fNU76fYmlA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYIBRBEd-0fNU76fYmlA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_17RYIRRBEd-0fNU76fYmlA" name="locus" type="_17RNZBRBEd-0fNU76fYmlA" aggregation="composite" association="_17RYEhRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYIhRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYIxRBEd-0fNU76fYmlA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_17RYJBRBEd-0fNU76fYmlA" name="integerFunctions" type="_17RathRBEd-0fNU76fYmlA" aggregation="composite" association="_17RYBhRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYJRRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYJhRBEd-0fNU76fYmlA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_17RYJxRBEd-0fNU76fYmlA" name="systemIO" type="_17Ra0RRBEd-0fNU76fYmlA" aggregation="composite" association="_17RYBBRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYKBRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYKRRBEd-0fNU76fYmlA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_17RYKhRBEd-0fNU76fYmlA" name="standardIO" type="_17aRIBRBEd-0fNU76fYmlA" aggregation="composite" association="_17RYAhRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYKxRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYLBRBEd-0fNU76fYmlA" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_17RYLRRBEd-0fNU76fYmlA" name="TestEnvironment">
          <ownedComment xmi:id="_17RYLhRBEd-0fNU76fYmlA" annotatedElement="_17RYLRRBEd-0fNU76fYmlA">
            <body>try {&#xD;
&#xD;
this.locus = new Locus();&#xD;
this.locus.setFactory(new ExecutionFactory());&#xD;
this.locus.setExecutor(new Executor());&#xD;
&#xD;
this.locus.factory.setStrategy(new fUML.Semantics.Classes.Kernel.RedefinitionBasedDispatchStrategy());&#xD;
this.locus.factory.setStrategy(new fUML.Semantics.CommonBehaviors.Communications.FIFOGetNextEventStrategy());&#xD;
this.locus.factory.setStrategy(new fUML.Semantics.Loci.FirstChoiceStrategy());&#xD;
&#xD;
this.primitiveTypes = new fUML.Library.PrimitiveTypes(this.locus.factory);&#xD;
this.addElement(this.primitiveTypes.Boolean);&#xD;
this.addElement(this.primitiveTypes.Integer);&#xD;
this.addElement(this.primitiveTypes.String);&#xD;
this.addElement(this.primitiveTypes.UnlimitedNatural);&#xD;
&#xD;
this.integerFunctions = new fUML.Library.IntegerFunctions(this.primitiveTypes.Integer, this.primitiveTypes.Boolean, this.locus.factory);&#xD;
this.addElement(this.integerFunctions.integerPlus);&#xD;
this.addElement(this.integerFunctions.integerMinus);&#xD;
this.addElement(this.integerFunctions.integerTimes);&#xD;
this.addElement(this.integerFunctions.integerDivide);&#xD;
this.addElement(this.integerFunctions.integerNegate);&#xD;
this.addElement(this.integerFunctions.integerGreater);&#xD;
&#xD;
this.systemIO = new fUML.Library.SystemIO(this.locus.factory);&#xD;
this.addElement(this.systemIO.WriteLine);&#xD;
&#xD;
this.standardIO = new fUML.Library.StandardIOClasses(this.primitiveTypes);&#xD;
this.addElement(this.standardIO.Channel);&#xD;
this.addElement(this.standardIO.OutputChannel);&#xD;
this.addElement(this.standardIO.TextOutputChannel);&#xD;
this.addElement(this.standardIO.StandardOutputChannel);&#xD;
&#xD;
fUML.Library.ChannelImplementation.StandardOutputChannelObject standardOutputChannel = new fUML.Library.ChannelImplementation.StandardOutputChannelObject();&#xD;
standardOutputChannel.types.addValue(this.standardIO.StandardOutputChannel);&#xD;
standardOutputChannel.open();&#xD;
this.locus.add(standardOutputChannel);&#xD;
&#xD;
fUML.Library.PipeImplementation.PipeInputChannelObject pipeInputChannel = new fUML.Library.PipeImplementation.PipeInputChannelObject(&quot;PipedInput&quot;);&#xD;
pipeInputChannel.types.addValue(this.standardIO.InputChannel);&#xD;
pipeInputChannel.open();&#xD;
this.locus.add(pipeInputChannel);&#xD;
&#xD;
fUML.Library.PipeImplementation.PipeOutputChannelObject pipeOutputChannel = new fUML.Library.PipeImplementation.PipeOutputChannelObject(&quot;PipedOutput&quot;, pipeInputChannel);&#xD;
pipeOutputChannel.types.addValue(this.standardIO.OutputChannel);&#xD;
pipeOutputChannel.open();&#xD;
this.locus.add(pipeOutputChannel);&#xD;
&#xD;
}&#xD;
catch (Throwable e) {&#xD;
    Debug.println(&quot;[TestEnvironment] Terminated due to &quot; + e.getClass().getName() + &quot;...&quot;);&#xD;
    StackTraceElement [] stackTrace = e.getStackTrace();&#xD;
    if (stackTrace.length > 0) Debug.println(stackTrace[0] + &quot;.&quot;);&#xD;
}&#xD;
   &#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYLxRBEd-0fNU76fYmlA" name="makePrimitiveValue">
          <ownedComment xmi:id="_17RYMBRBEd-0fNU76fYmlA" annotatedElement="_17RYLxRBEd-0fNU76fYmlA">
            <body>PrimitiveType type = (PrimitiveType)classifier;&#xD;
PrimitiveValue primitiveValue = null;&#xD;
&#xD;
// Debug.println(&quot;[makePrimitiveValue] type = &quot; + type.name);&#xD;
&#xD;
if (type == this.primitiveTypes.Boolean) {&#xD;
    primitiveValue = new BooleanValue();&#xD;
}&#xD;
else if (type == this.primitiveTypes.Integer) {&#xD;
    primitiveValue = new IntegerValue();&#xD;
}&#xD;
else if (type == this.primitiveTypes.String) {&#xD;
    primitiveValue = new StringValue();&#xD;
}&#xD;
else if (type == this.primitiveTypes.UnlimitedNatural) {&#xD;
    primitiveValue = new UnlimitedNaturalValue();&#xD;
    ((UnlimitedNaturalValue)primitiveValue).value = new UnlimitedNatural();&#xD;
}&#xD;
&#xD;
if (primitiveValue != null) {&#xD;
    primitiveValue.type = type;&#xD;
}&#xD;
else {&#xD;
    Debug.println(&quot;[makePrimitiveValue] &quot; + type.name + &quot; not understood.&quot;);&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[makePrimitiveValue] value = &quot; + primitiveValue);&#xD;
&#xD;
return primitiveValue;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYMRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKlxRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYMhRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYMxRBEd-0fNU76fYmlA" name="makeEnumerationValue">
          <ownedComment xmi:id="_17RYNBRBEd-0fNU76fYmlA" annotatedElement="_17RYMxRBEd-0fNU76fYmlA">
            <body>Enumeration type = (Enumeration)classifier;&#xD;
EnumerationValue enumerationValue = new EnumerationValue();&#xD;
&#xD;
enumerationValue.type = type;&#xD;
enumerationValue.literal = type.ownedLiteral.getValue(0);&#xD;
&#xD;
return enumerationValue;</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYNRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RLehRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYNhRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYNxRBEd-0fNU76fYmlA" name="makeStructuredValue">
          <ownedComment xmi:id="_17RYOBRBEd-0fNU76fYmlA" annotatedElement="_17RYNxRBEd-0fNU76fYmlA">
            <body>Classifier type = classifier;&#xD;
StructuredValue structuredValue = null;&#xD;
PropertyList attributes = null;&#xD;
&#xD;
if (type instanceof DataType) {&#xD;
    structuredValue = new DataValue();&#xD;
    ((DataValue)structuredValue).type = (DataType)type;&#xD;
    structuredValue.createFeatureValues();&#xD;
}&#xD;
else if (type instanceof Class_) {&#xD;
    structuredValue = new Reference();&#xD;
    ((Reference)structuredValue).referent = this.locus.instantiate((Class_)type);&#xD;
}&#xD;
&#xD;
FeatureValueList featureValues = structuredValue.getFeatureValues();&#xD;
&#xD;
// Debug.println(&quot;[makeStructuredValue] &quot; + featureValues.size() + &quot; structural features.&quot;);&#xD;
for (int i = 0; i &lt; featureValues.size(); i ++) {&#xD;
    StructuralFeature feature = featureValues.getValue(i).feature;&#xD;
    // Debug.println(&quot;[makeStructuredValue] feature = &quot; + feature.name + &quot;, type = &quot; + feature.typedElement.type.name);&#xD;
    ValueList valueList = new ValueList();&#xD;
    valueList.addValue(this.makeValue((Classifier)(feature.typedElement.type)));&#xD;
    structuredValue.setFeatureValue(feature, valueList, 0);&#xD;
}&#xD;
&#xD;
return structuredValue;&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYORRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RJ9RRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYOhRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYOxRBEd-0fNU76fYmlA" name="makeValue">
          <ownedComment xmi:id="_17RYPBRBEd-0fNU76fYmlA" annotatedElement="_17RYOxRBEd-0fNU76fYmlA">
            <body>// if (type == null) {&#xD;
//    Debug.println(&quot;[makeValue} type is null&quot;);&#xD;
// } else {&#xD;
//    Debug.println(&quot;[makeValue] type = &quot; + type.name);&#xD;
// }&#xD;
&#xD;
if (type == null) {&#xD;
    return this.makePrimitiveValue(this.primitiveTypes.String);&#xD;
}&#xD;
else if (type instanceof PrimitiveType) {&#xD;
    return this.makePrimitiveValue(type);&#xD;
}&#xD;
else if (type instanceof Enumeration) {&#xD;
    return this.makeEnumerationValue(type);&#xD;
}&#xD;
else {&#xD;
    return this.makeStructuredValue(type);&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYPRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYPhRBEd-0fNU76fYmlA" name="type" type="_17RRHRRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYPxRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYQBRBEd-0fNU76fYmlA"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYQRRBEd-0fNU76fYmlA" name="addElement">
          <ownedComment xmi:id="_17RYQhRBEd-0fNU76fYmlA" annotatedElement="_17RYQRRBEd-0fNU76fYmlA">
            <body>if (this.getElement(element.name) == null) {&#xD;
    this.elements.addValue(element);&#xD;
}&#xD;
else {&#xD;
    Debug.println(&quot;[addElement] There is already an element named &quot; + element.name + &quot;.&quot;);&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYQxRBEd-0fNU76fYmlA" name="element" type="_17RPsBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYRBRBEd-0fNU76fYmlA" name="getElement">
          <ownedComment xmi:id="_17RYRRRBEd-0fNU76fYmlA" annotatedElement="_17RYRBRBEd-0fNU76fYmlA">
            <body>for (int i = 0; i &lt; elements.size(); i++) {&#xD;
    if (elements.getValue(i).name.equals(name)) return elements.getValue(i);&#xD;
}&#xD;
return null;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYRhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RPsBRBEd-0fNU76fYmlA" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYRxRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYSBRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYSRRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYShRBEd-0fNU76fYmlA" name="removeElement">
          <ownedComment xmi:id="_17RYSxRBEd-0fNU76fYmlA" annotatedElement="_17RYShRBEd-0fNU76fYmlA">
            <body>for (int i = 0; i &lt; this.elements.size(); i++) {&#xD;
    if (this.elements.getValue(i) == element) {&#xD;
        this.elements.remove(i);&#xD;
        return;&#xD;
    }&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYTBRBEd-0fNU76fYmlA" name="element" type="_17RPsBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYTRRBEd-0fNU76fYmlA" name="setVariable">
          <ownedComment xmi:id="_17RYThRBEd-0fNU76fYmlA" annotatedElement="_17RYTRRBEd-0fNU76fYmlA">
            <body>Variable variable = this.getVariable(name);&#xD;
&#xD;
if (variable == null) {&#xD;
    variable = new Variable();&#xD;
    variable.name = name;&#xD;
    this.variables.addValue(variable);&#xD;
}&#xD;
&#xD;
variable.value = value;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYTxRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYUBRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYURRBEd-0fNU76fYmlA" name="getVariable">
          <ownedComment xmi:id="_17RYUhRBEd-0fNU76fYmlA" annotatedElement="_17RYURRBEd-0fNU76fYmlA">
            <body>for (int i = 0; i &lt; this.variables.size(); i++) {&#xD;
    if (this.variables.getValue(i).name.equals(name)) {&#xD;
        return this.variables.getValue(i);&#xD;
    }&#xD;
}&#xD;
&#xD;
return null;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYUxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RZcxRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYVBRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYVRRBEd-0fNU76fYmlA" name="getType">
          <ownedComment xmi:id="_17RYVhRBEd-0fNU76fYmlA" annotatedElement="_17RYVRRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.getElement(typeName);&#xD;
&#xD;
if ((element == null) || !(element instanceof Classifier)) {&#xD;
    return null;&#xD;
}&#xD;
else {&#xD;
    return (Classifier)element;&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYVxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RRHRRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYWBRBEd-0fNU76fYmlA" name="typeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYWRRBEd-0fNU76fYmlA" name="printElements">
          <ownedComment xmi:id="_17RYWhRBEd-0fNU76fYmlA" annotatedElement="_17RYWRRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(elements.size() + &quot; element(s)&quot;);&#xD;
Debug.println(&quot;---------&quot;);&#xD;
&#xD;
for (int i = 0; i &lt; elements.size(); i++) {&#xD;
    Debug.println(elements.getValue(i).name + &quot;: &quot; + elements.getValue(i).getClass().getName());&#xD;
}&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYWxRBEd-0fNU76fYmlA" name="printExtent">
          <ownedComment xmi:id="_17RYXBRBEd-0fNU76fYmlA" annotatedElement="_17RYWxRBEd-0fNU76fYmlA">
            <body>Element element = this.getElement(classifierName);&#xD;
&#xD;
if (element == null) {&#xD;
    Debug.println(&quot;[printExtent] &quot; + classifierName + &quot; not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
if (!(element instanceof Classifier)) {&#xD;
    Debug.println(&quot;[printExtent] &quot; + classifierName + &quot; is not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
ExtensionalValueList extent = this.locus.getExtent((Classifier)element);&#xD;
&#xD;
Debug.println(&quot;&quot;);&#xD;
Debug.println(classifierName + &quot; has &quot; + extent.size() + &quot; instance(s):&quot;);&#xD;
&#xD;
for (int i = 0; i &lt; extent.size(); i++) {&#xD;
    Debug.println(&quot;[&quot; + i + &quot;] &quot; + extent.getValue(i));&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYXRRBEd-0fNU76fYmlA" name="classifierName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYXhRBEd-0fNU76fYmlA" name="removeElement">
          <ownedComment xmi:id="_17RYXxRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.getElement(elementName);&#xD;
&#xD;
if (element!=null) {&#xD;
    this.removeElement(element);&#xD;
} else {&#xD;
    Debug.println(&quot;[removeElement] &quot; + elementName + &quot; does not exist.&quot;);&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYYBRBEd-0fNU76fYmlA" name="elementName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RYYRRBEd-0fNU76fYmlA" name="InitTestEnvironment">
        <ownedAttribute xmi:id="_17RYYhRBEd-0fNU76fYmlA" name="environment" type="_17RYFhRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RYYxRBEd-0fNU76fYmlA" name="executorTest" type="_17RYbhRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RYZBRBEd-0fNU76fYmlA" name="activityFactory" type="_17RYiRRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RYZRRBEd-0fNU76fYmlA" name="variableUtility" type="_17RZeBRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RYZhRBEd-0fNU76fYmlA" name="classifierFactory" type="_17RZuxRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RYZxRBEd-0fNU76fYmlA" name="testSuite" visibility="public" type="_17RZ8hRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17RYaBRBEd-0fNU76fYmlA" name="InitTestEnvironment">
          <ownedComment xmi:id="_17RYaRRBEd-0fNU76fYmlA" annotatedElement="_17RYaBRBEd-0fNU76fYmlA">
            <body>// Debug.println(&quot;[InitTestEnvironment] Start...&quot;);&#xD;
&#xD;
environment = new TestEnvironment();&#xD;
executorTest = new ExecutorTest(environment);&#xD;
activityFactory = new ActivityFactory(environment);&#xD;
variableUtility = new VariableUtility(environment);&#xD;
classifierFactory = new ClassifierFactory(environment);&#xD;
&#xD;
testSuite = new TestSuite(environment,activityFactory,classifierFactory,executorTest);&#xD;
&#xD;
// Debug.println(&quot;[InitTestEnvironment] Done...&quot;);&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RYahRBEd-0fNU76fYmlA" memberEnd="_17RYGBRBEd-0fNU76fYmlA _17RYaxRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RYaxRBEd-0fNU76fYmlA" visibility="private" type="_17RYFhRBEd-0fNU76fYmlA" association="_17RYahRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYbBRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYbRRBEd-0fNU76fYmlA"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RYbhRBEd-0fNU76fYmlA" name="ExecutorTest">
        <ownedComment xmi:id="_17RYbxRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="_17RYcBRBEd-0fNU76fYmlA" general="_17RZbRRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17RYcRRBEd-0fNU76fYmlA" name="ExecutorTest">
          <ownedComment xmi:id="_17RYchRBEd-0fNU76fYmlA" annotatedElement="_17RYcRRBEd-0fNU76fYmlA">
            <body>this.environment = environment;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYcxRBEd-0fNU76fYmlA" name="environment" type="_17RYFhRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYdBRBEd-0fNU76fYmlA" name="createDefaultInputValues" visibility="protected">
          <ownedComment xmi:id="_17RYdRRBEd-0fNU76fYmlA" annotatedElement="_17RYdBRBEd-0fNU76fYmlA">
            <body>// Debug.println(&quot;[createDefaultParameterValues] &quot; + parameters.size() + &quot; parameter(s):&quot;);&#xD;
&#xD;
ParameterValueList parameterValues = new ParameterValueList();&#xD;
&#xD;
for (int i = 0; i &lt; parameters.size(); i++) {&#xD;
    // Debug.println(&quot;[createDefaultParameterValues] Checking parameter &quot; + parameters.getValue(i).name + &quot;...&quot;);&#xD;
    ParameterDirectionKind direction = parameters.getValue(i).direction;&#xD;
    if (direction.equals(ParameterDirectionKind.in) ||&#xD;
        direction.equals(ParameterDirectionKind.inout)) {&#xD;
        Debug.println(&quot;[createDefaultParameterValues] Creating parameter value for parameter &quot; + parameters.getValue(i).name + &quot;...&quot;);&#xD;
        ParameterValue parameterValue = new ParameterValue();&#xD;
        parameterValue.parameter = parameters.getValue(i);&#xD;
&#xD;
        Value value = this.environment.makeValue((Classifier)(parameters.getValue(i).type));&#xD;
&#xD;
        if (value == null) {&#xD;
            Debug.println(&quot;[createDefaultParameterValues] Error creating parameter value.&quot;);&#xD;
            return null;&#xD;
        }&#xD;
&#xD;
        Debug.println(&quot;[createDefaultParameterValues] value = &quot; + value);&#xD;
        parameterValue.values.addValue(value);&#xD;
        parameterValues.addValue(parameterValue);&#xD;
    }&#xD;
}&#xD;
&#xD;
 return parameterValues;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYdhRBEd-0fNU76fYmlA" name="parameters" type="_17RQQhRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYdxRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYeBRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYeRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMPxRBEd-0fNU76fYmlA" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYehRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYexRBEd-0fNU76fYmlA"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYfBRBEd-0fNU76fYmlA" name="testEvaluate">
          <ownedComment xmi:id="_17RYfRRBEd-0fNU76fYmlA" annotatedElement="_17RYfBRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
&#xD;
Classifier type = environment.getType(typeName);&#xD;
&#xD;
if (type == null) {&#xD;
    Debug.println(&quot;[testEvaluate] &quot; + typeName + &quot; not found or not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Value originalValue = environment.makeValue(type);&#xD;
Debug.println(&quot;[testEvaluate] Original value = &quot; + originalValue);&#xD;
&#xD;
ValueSpecification specification = originalValue.specify();&#xD;
Debug.println(&quot;[testEvaluate] Value specification is &quot; + specification.getClass().getName());&#xD;
&#xD;
// try{&#xD;
    Value evaluatedValue = this.environment.locus.executor.evaluate(specification);&#xD;
    Debug.println(&quot;[testEvaluate] Evaluated value = &quot; + evaluatedValue);&#xD;
&#xD;
    Debug.println(&quot;[testEvaluate] Equality test = &quot; + evaluatedValue.equals(originalValue));&#xD;
// }&#xD;
// catch (Throwable e) {&#xD;
//     Debug.println(&quot;[testEvaluate] Evaluation terminated due to &quot; + e.getClass().getName() + &quot;...&quot;);&#xD;
//     StackTraceElement [] stackTrace = e.getStackTrace();&#xD;
//     if (stackTrace.length > 0) Debug.println(stackTrace[0] + &quot;.&quot;);&#xD;
// }&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYfhRBEd-0fNU76fYmlA" name="typeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYfxRBEd-0fNU76fYmlA" name="testExecute">
          <ownedComment xmi:id="_17RYgBRBEd-0fNU76fYmlA" annotatedElement="_17RYfxRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
&#xD;
NamedElement element = this.environment.getElement(behaviorName);&#xD;
&#xD;
if ((element == null) || !(element instanceof Behavior)) {&#xD;
    Debug.println(&quot;[testExecute] &quot; + behaviorName + &quot; not found or is not a behavior.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Behavior behavior = (Behavior)element;&#xD;
ParameterList parameters = behavior.ownedParameter;&#xD;
ParameterValueList parameterValues = this.createDefaultInputValues(parameters);&#xD;
&#xD;
if (parameterValues == null) return;&#xD;
&#xD;
Debug.println(&quot;[testExecute] Executing the behavior...&quot;);&#xD;
&#xD;
//try {&#xD;
    ParameterValueList outputParameterValues = this.environment.locus.executor.execute(behavior, null, parameterValues);&#xD;
&#xD;
    for (int i = 0; i &lt; outputParameterValues.size(); i++) {&#xD;
        ParameterValue outputParameterValue = outputParameterValues.getValue(i);&#xD;
        Debug.println(&quot;[testExecute] Output parameter &quot; + outputParameterValue.parameter.name + &quot; has &quot; + outputParameterValue.values.size() + &quot; value(s):&quot;);&#xD;
        for (int j = 0; j &lt; outputParameterValue.values.size(); j++) {&#xD;
            Debug.println(&quot;[testExecute] value [&quot; + j + &quot;] = &quot; + outputParameterValue.values.getValue(j));&#xD;
       }&#xD;
    }&#xD;
//}&#xD;
//catch (Throwable e) {&#xD;
//    Debug.println(&quot;[testExecute] Execution terminated due to &quot; + e.getClass().getName() + &quot;...&quot;);&#xD;
//    StackTraceElement [] stackTrace = e.getStackTrace();&#xD;
//    if (stackTrace.length > 0) Debug.println(stackTrace[0] + &quot;.&quot;);&#xD;
//    throw e;&#xD;
//}&#xD;
&#xD;
Debug.println(&quot;&quot;);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYgRRBEd-0fNU76fYmlA" name="behaviorName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYghRBEd-0fNU76fYmlA" name="testStart">
          <ownedComment xmi:id="_17RYgxRBEd-0fNU76fYmlA" annotatedElement="_17RYghRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
&#xD;
NamedElement element = this.environment.getElement(typeName);&#xD;
&#xD;
if ((element == null) || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[testStart] &quot; + typeName + &quot; not found or is not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ type = (Class_)element;&#xD;
Behavior behavior;&#xD;
&#xD;
if (type instanceof Behavior) {&#xD;
    behavior = (Behavior)type;&#xD;
} else if (type.classifierBehavior != null) {&#xD;
    behavior = type.classifierBehavior;&#xD;
} else {&#xD;
    Debug.println(&quot;[testStart] &quot; + typeName + &quot; does not have behavior.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
ParameterList parameters = behavior.ownedParameter;&#xD;
ParameterValueList parameterValues = this.createDefaultInputValues(parameters);&#xD;
&#xD;
if (parameterValues == null) return;&#xD;
&#xD;
Debug.println(&quot;[testStart] Starting the behavior...&quot;);&#xD;
&#xD;
Object_ object;&#xD;
// try {&#xD;
    object = this.environment.locus.executor.start(type, parameterValues).referent;&#xD;
// }&#xD;
// catch (Exception e) {&#xD;
//    Debug.println(&quot;[testStart] Execution terminated due to &quot; + e.getClass().getName() + &quot;...&quot;);&#xD;
//    StackTraceElement [] stackTrace = e.getStackTrace();&#xD;
//    //if (stackTrace.length > 0) Debug.println(stackTrace[0] + &quot;.&quot;);&#xD;
//    for (int i = 0; i &lt; stackTrace.length; i++) {&#xD;
//        Debug.println(stackTrace[i]);&#xD;
//    }&#xD;
//    return;&#xD;
// }&#xD;
&#xD;
&#xD;
Debug.println(&quot;[testStart] Instantiated object:&quot; + object);&#xD;
&#xD;
ParameterValueList outputParameterValues;&#xD;
if (object instanceof Execution) {&#xD;
    outputParameterValues = ((Execution)object).getOutputParameterValues();&#xD;
} else {&#xD;
    outputParameterValues = object.objectActivation.classifierBehaviorExecutions.getValue(0).execution.getOutputParameterValues();&#xD;
}&#xD;
&#xD;
for (int i = 0; i &lt; outputParameterValues.size(); i++) {&#xD;
    ParameterValue outputParameterValue = outputParameterValues.getValue(i);&#xD;
    Debug.println(&quot;[testStart] Output parameter &quot; + outputParameterValue.parameter.name + &quot; has &quot; + outputParameterValue.values.size() + &quot; value(s):&quot;);&#xD;
    for (int j = 0; j &lt; outputParameterValue.values.size(); j++) {&#xD;
        Debug.println(&quot;[testStart] value [&quot; + j + &quot;] = &quot; + outputParameterValue.values.getValue(j));&#xD;
   }&#xD;
}&#xD;
&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYhBRBEd-0fNU76fYmlA" name="typeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RYhRRBEd-0fNU76fYmlA" memberEnd="_17RZbhRBEd-0fNU76fYmlA _17RYhhRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RYhhRBEd-0fNU76fYmlA" visibility="private" type="_17RZbRRBEd-0fNU76fYmlA" association="_17RYhRRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYhxRBEd-0fNU76fYmlA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYiBRBEd-0fNU76fYmlA"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RYiRRBEd-0fNU76fYmlA" name="ActivityFactory">
        <ownedComment xmi:id="_17RYihRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="_17RYixRBEd-0fNU76fYmlA" general="_17RZbRRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17RYjBRBEd-0fNU76fYmlA" name="ActivityFactory">
          <ownedComment xmi:id="_17RYjRRBEd-0fNU76fYmlA" annotatedElement="_17RYjBRBEd-0fNU76fYmlA">
            <body>this.environment = environment;&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYjhRBEd-0fNU76fYmlA" name="environment" type="_17RYFhRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYjxRBEd-0fNU76fYmlA" name="addEdge" visibility="protected">
          <ownedComment xmi:id="_17RYkBRBEd-0fNU76fYmlA" annotatedElement="_17RYjxRBEd-0fNU76fYmlA">
            <body>edge.setSource(source);&#xD;
edge.setTarget(target);&#xD;
edge.setGuard(guard);&#xD;
&#xD;
activity.addEdge(edge);&#xD;
&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYkRRBEd-0fNU76fYmlA" name="activity" type="_17RTIBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYkhRBEd-0fNU76fYmlA" name="edge" type="_17RS_BRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYkxRBEd-0fNU76fYmlA" name="source" type="_17RS3xRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYlBRBEd-0fNU76fYmlA" name="target" type="_17RS3xRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYlRRBEd-0fNU76fYmlA" name="guard" type="_17RO0RRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RYlhRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RYlxRBEd-0fNU76fYmlA"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYmBRBEd-0fNU76fYmlA" name="addNode" visibility="protected">
          <ownedComment xmi:id="_17RYmRRBEd-0fNU76fYmlA" annotatedElement="_17RYmBRBEd-0fNU76fYmlA">
            <body>activity.addNode(node);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYmhRBEd-0fNU76fYmlA" name="activity" type="_17RTIBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYmxRBEd-0fNU76fYmlA" name="node" type="_17RS3xRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYnBRBEd-0fNU76fYmlA" name="addParameter" visibility="protected">
          <ownedComment xmi:id="_17RYnRRBEd-0fNU76fYmlA" annotatedElement="_17RYnBRBEd-0fNU76fYmlA">
            <body>Parameter parameter = new Parameter();&#xD;
parameter.setName(name);&#xD;
parameter.setType(type);&#xD;
parameter.setDirection(direction);&#xD;
parameter.setLower(1);&#xD;
parameter.setUpper(1);&#xD;
&#xD;
activity.addOwnedParameter(parameter);&#xD;
&#xD;
return parameter;</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYnhRBEd-0fNU76fYmlA" name="activity" type="_17RTIBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYnxRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYoBRBEd-0fNU76fYmlA" name="direction" type="_17RQyBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYoRRBEd-0fNU76fYmlA" name="type" type="_17RQrxRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYohRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQQhRBEd-0fNU76fYmlA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYoxRBEd-0fNU76fYmlA" name="addProperty" visibility="protected">
          <ownedComment xmi:id="_17RYpBRBEd-0fNU76fYmlA" annotatedElement="_17RYoxRBEd-0fNU76fYmlA">
            <body>Property property = new Property();&#xD;
property.setName(name);&#xD;
property.setType( type);&#xD;
property.setLower(lower);&#xD;
property.setUpper(upper);&#xD;
&#xD;
activity.addOwnedAttribute(property);&#xD;
&#xD;
return property;&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYpRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQZhRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYphRBEd-0fNU76fYmlA" name="activity" type="_17RTIBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYpxRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYqBRBEd-0fNU76fYmlA" name="type" type="_17RQrxRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYqRRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYqhRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYqxRBEd-0fNU76fYmlA" name="addInputPin" visibility="protected">
          <ownedComment xmi:id="_17RYrBRBEd-0fNU76fYmlA" annotatedElement="_17RYqxRBEd-0fNU76fYmlA">
            <body>// Debug.println(&quot;[addInputPin] name = &quot; + name);&#xD;
&#xD;
InputPin inputPin = new InputPin();&#xD;
this.setPin(inputPin, name, lower, upper);&#xD;
action.input.addValue(inputPin);&#xD;
return inputPin;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYrRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RU1hRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYrhRBEd-0fNU76fYmlA" name="action" type="_17RVHhRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYrxRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYsBRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYsRRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYshRBEd-0fNU76fYmlA" name="addOutputPin" visibility="protected">
          <ownedComment xmi:id="_17RYsxRBEd-0fNU76fYmlA" annotatedElement="_17RYshRBEd-0fNU76fYmlA">
            <body>// Debug.println(&quot;[addOutputPin] name = &quot; + name);&#xD;
&#xD;
OutputPin outputPin = new OutputPin();&#xD;
this.setPin(outputPin, name, lower, upper);&#xD;
action.output.addValue(outputPin);&#xD;
return outputPin;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYtBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RUvRRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYtRRBEd-0fNU76fYmlA" name="action" type="_17RVHhRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYthRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYtxRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYuBRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYuRRBEd-0fNU76fYmlA" name="makeInputPin" visibility="protected">
          <ownedComment xmi:id="_17RYuhRBEd-0fNU76fYmlA" annotatedElement="_17RYuRRBEd-0fNU76fYmlA">
            <body>// Debug.println(&quot;[makeInputPin] name = &quot; + name);&#xD;
&#xD;
InputPin inputPin = new InputPin();&#xD;
this.setPin(inputPin, name, lower, upper);&#xD;
&#xD;
return inputPin;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYuxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RU1hRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYvBRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYvRRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYvhRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYvxRBEd-0fNU76fYmlA" name="makeOutputPin" visibility="protected">
          <ownedComment xmi:id="_17RYwBRBEd-0fNU76fYmlA" annotatedElement="_17RYvxRBEd-0fNU76fYmlA">
            <body>// Debug.println(&quot;[makeOutputPin] name = &quot; + name);&#xD;
&#xD;
OutputPin outputPin = new OutputPin();&#xD;
this.setPin(outputPin, name, lower, upper);&#xD;
&#xD;
return outputPin;&#xD;
&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYwRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RUvRRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RYwhRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYwxRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYxBRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYxRRBEd-0fNU76fYmlA" name="setPin" visibility="protected">
          <ownedComment xmi:id="_17RYxhRBEd-0fNU76fYmlA" annotatedElement="_17RYxRRBEd-0fNU76fYmlA">
            <body>// Debug.println(&quot;[setPin] name = &quot; + name);&#xD;
&#xD;
pin.setName(name);&#xD;
pin.setLower(lower);&#xD;
pin.setUpper(upper);&#xD;
&#xD;
// this.addNode(activity, pin);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYxxRBEd-0fNU76fYmlA" name="pin" type="_17RUwBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYyBRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYyRRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYyhRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RYyxRBEd-0fNU76fYmlA" name="setMultiplicity" visibility="protected">
          <ownedComment xmi:id="_17RYzBRBEd-0fNU76fYmlA" annotatedElement="_17RYyxRBEd-0fNU76fYmlA">
            <body>element.setLower(lower);&#xD;
element.setUpper(upper);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RYzRRBEd-0fNU76fYmlA" name="element" type="_17RPeRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RYzhRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RYzxRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY0BRBEd-0fNU76fYmlA" name="getOperation" visibility="protected">
          <ownedComment xmi:id="_17RY0RRBEd-0fNU76fYmlA" annotatedElement="_17RY0BRBEd-0fNU76fYmlA">
            <body>for (int i = 0; i &lt; class_.member.size(); i++) {&#xD;
    NamedElement member = class_.member.getValue(i);&#xD;
    if (member.name.equals(operationName)) {&#xD;
        if (!(member instanceof Operation)) {&#xD;
            return null;&#xD;
        }&#xD;
        return (Operation)member;&#xD;
    }&#xD;
}&#xD;
&#xD;
return null;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RY0hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RP6RRBEd-0fNU76fYmlA" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RY0xRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RY1BRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RY1RRBEd-0fNU76fYmlA" name="class_" type="_17RQ2RRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RY1hRBEd-0fNU76fYmlA" name="operationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY1xRBEd-0fNU76fYmlA" name="getProperty" visibility="protected">
          <ownedComment xmi:id="_17RY2BRBEd-0fNU76fYmlA" annotatedElement="_17RY1xRBEd-0fNU76fYmlA">
            <body>for (int i = 0; i &lt; classifier.member.size(); i++) {&#xD;
    NamedElement member = classifier.member.getValue(i);&#xD;
    if (member.name.equals(propertyName)) {&#xD;
        if (!(member instanceof Property)) {&#xD;
            return null;&#xD;
        }&#xD;
        return (Property)member;&#xD;
    }&#xD;
}&#xD;
&#xD;
return null;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RY2RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQZhRBEd-0fNU76fYmlA" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RY2hRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RY2xRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RY3BRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RY3RRBEd-0fNU76fYmlA" name="propertyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY3hRBEd-0fNU76fYmlA" name="createLiteralInteger" visibility="protected">
          <ownedComment xmi:id="_17RY3xRBEd-0fNU76fYmlA" annotatedElement="_17RY3hRBEd-0fNU76fYmlA">
            <body>LiteralInteger literal = (LiteralInteger)(this.environment.makeValue((Classifier)(this.environment.primitiveTypes.Integer)).specify());&#xD;
literal.setName(name);&#xD;
literal.setValue(value);&#xD;
&#xD;
return literal;&#xD;
&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RY4BRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RPVBRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RY4RRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RY4hRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY4xRBEd-0fNU76fYmlA" name="createLiteralString" visibility="protected">
          <ownedComment xmi:id="_17RY5BRBEd-0fNU76fYmlA" annotatedElement="_17RY4xRBEd-0fNU76fYmlA">
            <body>LiteralString literal = (LiteralString)(this.environment.makeValue((Classifier)(this.environment.primitiveTypes.String)).specify());&#xD;
literal.setName(name);&#xD;
literal.setValue(value);&#xD;
&#xD;
return literal;&#xD;
&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RY5RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RPYxRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RY5hRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RY5xRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY6BRBEd-0fNU76fYmlA" name="createLiteralBoolean" visibility="protected">
          <ownedComment xmi:id="_17RY6RRBEd-0fNU76fYmlA" annotatedElement="_17RY6BRBEd-0fNU76fYmlA">
            <body>LiteralBoolean literal = (LiteralBoolean)(this.environment.makeValue((Classifier)(this.environment.primitiveTypes.Boolean)).specify());&#xD;
literal.setName(name);&#xD;
literal.setValue(value);&#xD;
&#xD;
return literal;&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RY6hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RPSxRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RY6xRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RY7BRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY7RRBEd-0fNU76fYmlA" name="createLiteralUnlimitedNatural" visibility="protected">
          <ownedComment xmi:id="_17RY7hRBEd-0fNU76fYmlA">
            <body>LiteralUnlimitedNatural literal = (LiteralUnlimitedNatural)(this.environment.makeValue((Classifier)(this.environment.primitiveTypes.UnlimitedNatural)).specify());&#xD;
literal.setName(name);&#xD;
literal.value.naturalValue = value;&#xD;
&#xD;
return literal;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RY7xRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RY8BRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RY8RRBEd-0fNU76fYmlA" name="Parameter1" type="_17RPbRRBEd-0fNU76fYmlA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY8hRBEd-0fNU76fYmlA" name="createInstanceGetter" visibility="protected">
          <ownedComment xmi:id="_17RY8xRBEd-0fNU76fYmlA" annotatedElement="_17RY8hRBEd-0fNU76fYmlA">
            <body>Activity testActivity = new Activity();&#xD;
testActivity.setName(&quot;Test(&quot; + operation.name + &quot;)&quot;);&#xD;
&#xD;
Parameter testInput  = this.addParameter(testActivity, &quot;testInput&quot;, ParameterDirectionKind.in, classifier);&#xD;
Parameter testOutput = this.addParameter(testActivity, &quot;testOutput&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Boolean);&#xD;
&#xD;
ActivityParameterNode testInputNode = new ActivityParameterNode();&#xD;
testInputNode.setName(&quot;TestInputNode&quot;);&#xD;
testInputNode.setParameter(testInput);&#xD;
testInputNode.setType(testInput.type);&#xD;
this.addNode(testActivity, testInputNode);&#xD;
&#xD;
CallOperationAction callOperationAction = new CallOperationAction();&#xD;
callOperationAction.setName(&quot;Call(&quot; + operation.name + &quot;)&quot;);&#xD;
callOperationAction.setOperation(operation);&#xD;
callOperationAction.setTarget(this.makeInputPin(callOperationAction.name + &quot;.object&quot;, 1, 1));&#xD;
callOperationAction.addResult(this.makeOutputPin(callOperationAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(testActivity, callOperationAction);&#xD;
&#xD;
ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
valueAction.setName(&quot;Value(&quot; + value + &quot;)&quot;);&#xD;
valueAction.setValue(value.specify());&#xD;
valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(testActivity, valueAction);&#xD;
&#xD;
TestIdentityAction testIdentityAction = new TestIdentityAction();&#xD;
testIdentityAction.setName(&quot;Test(&quot; + operation.name + &quot;=&quot; + value + &quot;)&quot;);&#xD;
testIdentityAction.setFirst(this.makeInputPin(&quot;Test.first&quot;, 1, 1));&#xD;
testIdentityAction.setSecond(this.makeInputPin(&quot;Test.second&quot;, 1, 1));&#xD;
testIdentityAction.setResult(this.makeOutputPin(&quot;Test.result&quot;, 1, 1));&#xD;
this.addNode(testActivity, testIdentityAction);&#xD;
&#xD;
ActivityParameterNode testOutputNode = new ActivityParameterNode();&#xD;
testOutputNode.setName(&quot;TestOutputNode&quot;);&#xD;
testOutputNode.setParameter(testOutput);&#xD;
testOutputNode.setType(testOutput.type);&#xD;
this.addNode(testActivity, testOutputNode);&#xD;
&#xD;
this.addEdge(testActivity, new ObjectFlow(), testInputNode, callOperationAction.target, null);&#xD;
this.addEdge(testActivity, new ObjectFlow(), callOperationAction.result.getValue(0), testIdentityAction.first, null);&#xD;
this.addEdge(testActivity, new ObjectFlow(), valueAction.result, testIdentityAction.second, null);&#xD;
this.addEdge(testActivity, new ObjectFlow(), testIdentityAction.result, testOutputNode, null);&#xD;
&#xD;
Activity instanceGetterActivity = new Activity();&#xD;
instanceGetterActivity.setName(classifier.name + &quot;InstanceGetter&quot;);&#xD;
&#xD;
Parameter instanceOutput = this.addParameter(instanceGetterActivity, &quot;instance&quot;, ParameterDirectionKind.out, classifier);&#xD;
&#xD;
ReadExtentAction readExtentAction = new ReadExtentAction();&#xD;
readExtentAction.setName(&quot;ReadExtent(&quot; + classifier.name + &quot;)&quot;);&#xD;
readExtentAction.setClassifier(classifier);&#xD;
readExtentAction.setResult(this.makeOutputPin(readExtentAction.name + &quot;.result&quot;, 0, -1));&#xD;
this.addNode(instanceGetterActivity, readExtentAction);&#xD;
&#xD;
DecisionNode decisionNode = new DecisionNode();&#xD;
decisionNode.setName(&quot;Decision(&quot; + operation.name + &quot;=&quot; + value + &quot;)&quot;);&#xD;
decisionNode.setDecisionInput(testActivity);&#xD;
this.addNode(instanceGetterActivity, decisionNode);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(instanceOutput);&#xD;
outputNode.setType(instanceOutput.type);&#xD;
this.addNode(instanceGetterActivity, outputNode);&#xD;
&#xD;
this.addEdge(instanceGetterActivity, new ObjectFlow(), readExtentAction.result, decisionNode, null);&#xD;
this.addEdge(instanceGetterActivity, new ObjectFlow(), decisionNode, outputNode, this.createLiteralBoolean(&quot;true&quot;, true));&#xD;
&#xD;
return instanceGetterActivity;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RY9BRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RTIBRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RY9RRBEd-0fNU76fYmlA" name="classifier" type="_17RRHRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RY9hRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RY9xRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY-BRBEd-0fNU76fYmlA" name="getCopier" visibility="protected">
          <ownedComment xmi:id="_17RY-RRBEd-0fNU76fYmlA" annotatedElement="_17RY-BRBEd-0fNU76fYmlA">
            <body>return this.getActivity(&quot;Copier&quot;);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RY-hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RTIBRBEd-0fNU76fYmlA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY-xRBEd-0fNU76fYmlA" name="getActivity" visibility="public">
          <ownedComment xmi:id="_17RY_BRBEd-0fNU76fYmlA" annotatedElement="_17RY-xRBEd-0fNU76fYmlA">
            <body>NamedElement activity = this.environment.getElement(name);&#xD;
&#xD;
if ((activity == null) || !(activity instanceof Activity)) {&#xD;
    if (activity == null) {&#xD;
        Debug.println(&quot;[getActivity] Creating a &quot; + name + &quot; activity.&quot;);&#xD;
    }&#xD;
    else {&#xD;
        Debug.println(&quot;[getActivity] Replacing the existing &quot; + name + &quot; element with an activity.&quot;);&#xD;
        this.environment.removeElement(activity);&#xD;
        activity = null;&#xD;
    }&#xD;
&#xD;
    try {&#xD;
        this.getClass().getMethod(&quot;create&quot; + name, new Class[0]).invoke(this, new Object[0]);&#xD;
        activity = this.environment.getElement(name);&#xD;
    } catch (NoSuchMethodException e) { &#xD;
        Debug.println(&quot;[getActivity] create&quot;+ name + &quot;() not found.&quot;);&#xD;
    } catch (Exception e) { &#xD;
        Debug.println(&quot;[getActivity] Exeception: &quot; + e);&#xD;
    } &#xD;
}&#xD;
&#xD;
return (Activity)activity;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RY_RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RTIBRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RY_hRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RY_xRBEd-0fNU76fYmlA" name="createCopier">
          <ownedComment xmi:id="_17RZABRBEd-0fNU76fYmlA" annotatedElement="_17RY_xRBEd-0fNU76fYmlA">
            <body>Activity activity = new Activity();&#xD;
activity.setName(&quot;Copier&quot;);&#xD;
&#xD;
Parameter inputParameter = this.addParameter(activity, &quot;input&quot;, ParameterDirectionKind.in, this.environment.primitiveTypes.Integer);&#xD;
Parameter outputParameter = this.addParameter(activity, &quot;output&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer);&#xD;
&#xD;
// Debug.println(&quot;[createCopier] Creating input node...&quot;);&#xD;
&#xD;
ActivityParameterNode inputNode = new ActivityParameterNode();&#xD;
inputNode.setName(&quot;inputNode&quot;);&#xD;
inputNode.setParameter(inputParameter);&#xD;
this.addNode(activity, inputNode);&#xD;
&#xD;
// Debug.println(&quot;[createCopier] Creating output node...&quot;);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;outputNode&quot;);&#xD;
outputNode.setParameter(outputParameter);&#xD;
this.addNode(activity, outputNode);&#xD;
&#xD;
// Debug.println(&quot;[createCopier] Creating edge...&quot;);&#xD;
&#xD;
this.addEdge(activity, new ObjectFlow(), inputNode, outputNode, null);&#xD;
&#xD;
this.environment.addElement(activity);&#xD;
&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZARRBEd-0fNU76fYmlA" name="createCaller">
          <ownedComment xmi:id="_17RZAhRBEd-0fNU76fYmlA" annotatedElement="_17RZARRBEd-0fNU76fYmlA">
            <body>Element element = this.getActivity(calledActivityName);&#xD;
&#xD;
Activity calledActivity = (Activity)element;&#xD;
ParameterList parameters = calledActivity.ownedParameter;&#xD;
&#xD;
Activity callerActivity = new Activity();&#xD;
callerActivity.setName(calledActivityName + &quot;Caller&quot;);&#xD;
&#xD;
CallBehaviorAction callAction = new CallBehaviorAction();&#xD;
callAction.setName(&quot;Call(&quot; + calledActivityName + &quot;)&quot;);&#xD;
callAction.setBehavior(calledActivity);&#xD;
this.addNode(callerActivity, callAction);&#xD;
&#xD;
for (int i = 0; i &lt; parameters.size(); i++) {&#xD;
    Parameter parameter = parameters.getValue(i);&#xD;
&#xD;
    if (parameter.direction.equals(ParameterDirectionKind.in)  ||&#xD;
        parameter.direction.equals(ParameterDirectionKind.inout)) {&#xD;
        ValueSpecification valueSpecification = this.environment.makeValue((Classifier)(parameter.type)).specify();&#xD;
        ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
        valueAction.setName(&quot;Value(&quot; + parameter.name + &quot;:&quot; + parameter.type.name + &quot;)&quot;);&#xD;
        valueAction.setValue(valueSpecification);&#xD;
        valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
        this.addNode(callerActivity, valueAction);&#xD;
&#xD;
        InputPin inputPin = this.makeInputPin(callAction.name + &quot;.argument[&quot; + parameter.name + &quot;]&quot;, 1, 1);&#xD;
        callAction.addArgument(inputPin);&#xD;
&#xD;
        this.addEdge(callerActivity, new ObjectFlow(), valueAction.result, inputPin, null);&#xD;
    }&#xD;
    else {&#xD;
        ActivityParameterNode parameterNode = new ActivityParameterNode();&#xD;
        parameterNode.setName(&quot;Parameter(&quot; + parameter.name + &quot;)&quot;);&#xD;
        parameterNode.setParameter(this.addParameter(callerActivity, parameter.name, ParameterDirectionKind.out, parameter.type));&#xD;
        this.addNode(callerActivity, parameterNode);&#xD;
&#xD;
        OutputPin outputPin = this.makeOutputPin(callAction.name + &quot;.result[&quot; + parameter.name + &quot;]&quot;, 1, 1);&#xD;
        callAction.addResult(outputPin);&#xD;
&#xD;
        this.addEdge(callerActivity, new ObjectFlow(), outputPin, parameterNode, null);&#xD;
    }&#xD;
}&#xD;
&#xD;
this.environment.addElement(callerActivity);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZAxRBEd-0fNU76fYmlA" name="calledActivityName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZBBRBEd-0fNU76fYmlA" name="createSimpleDecision">
          <ownedComment xmi:id="_17RZBRRBEd-0fNU76fYmlA" annotatedElement="_17RZBBRBEd-0fNU76fYmlA">
            <body>Activity copierActivity = this.getCopier();&#xD;
&#xD;
Activity simpleDecisionActivity = new Activity();&#xD;
simpleDecisionActivity.setName(&quot;SimpleDecision&quot; + testValue);&#xD;
&#xD;
Parameter parameter0 = this.addParameter(simpleDecisionActivity, &quot;output_0&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer);&#xD;
Parameter parameter1 = this.addParameter(simpleDecisionActivity, &quot;output_1&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer);&#xD;
&#xD;
ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
valueAction.setName(&quot;ValueAction_&quot; + testValue);&#xD;
valueAction.setValue(this.createLiteralInteger(&quot;&quot;, testValue));&#xD;
valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(simpleDecisionActivity, valueAction);&#xD;
&#xD;
// UnlimitedNatural unlimitedNatural1 = new UnlimitedNatural(1);&#xD;
&#xD;
DecisionNode decisionNode = new DecisionNode();&#xD;
decisionNode.setName(&quot;DecisionNode&quot;);&#xD;
// decisionNode.setDecisionInput(copierActivity);&#xD;
this.addNode(simpleDecisionActivity, decisionNode);&#xD;
&#xD;
ActivityParameterNode parameterNode0 = new ActivityParameterNode();&#xD;
parameterNode0.setName(&quot;ParameterNode_0&quot;);&#xD;
parameterNode0.setParameter(parameter0);&#xD;
this.addNode(simpleDecisionActivity, parameterNode0);&#xD;
&#xD;
ActivityParameterNode parameterNode1 = new ActivityParameterNode();&#xD;
parameterNode1.setName(&quot;ParameterNode_1&quot;);&#xD;
parameterNode1.setParameter(parameter1);&#xD;
this.addNode(simpleDecisionActivity, parameterNode1);&#xD;
&#xD;
LiteralInteger value0 = this.createLiteralInteger(&quot;guard_0&quot;, 0);&#xD;
LiteralInteger value1 = this.createLiteralInteger(&quot;guard_1&quot;, 1);&#xD;
&#xD;
this.addEdge(simpleDecisionActivity, new ObjectFlow(), valueAction.result, decisionNode, null);&#xD;
this.addEdge(simpleDecisionActivity, new ObjectFlow(), decisionNode, parameterNode0, value0);&#xD;
this.addEdge(simpleDecisionActivity, new ObjectFlow(), decisionNode, parameterNode1, value1);&#xD;
&#xD;
this.environment.addElement(simpleDecisionActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZBhRBEd-0fNU76fYmlA" name="testValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZBxRBEd-0fNU76fYmlA" name="createForkJoin">
          <ownedComment xmi:id="_17RZCBRBEd-0fNU76fYmlA" annotatedElement="_17RZBxRBEd-0fNU76fYmlA">
            <body>Activity forkJoinActivity = new Activity();&#xD;
forkJoinActivity.setName(&quot;ForkJoin&quot;);&#xD;
&#xD;
InitialNode initialNode = new InitialNode();&#xD;
initialNode.setName(&quot;InitialNode&quot;);&#xD;
this.addNode(forkJoinActivity, initialNode);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;ForkNode&quot;);&#xD;
this.addNode(forkJoinActivity, forkNode);&#xD;
&#xD;
JoinNode joinNode = new JoinNode();&#xD;
joinNode.setName(&quot;JoinNode&quot;);&#xD;
this.addNode(forkJoinActivity, joinNode);&#xD;
&#xD;
ActivityFinalNode finalNode = new ActivityFinalNode();&#xD;
finalNode.setName(&quot;FinalNode&quot;);&#xD;
this.addNode(forkJoinActivity, finalNode);&#xD;
&#xD;
this.addEdge(forkJoinActivity, new ControlFlow(), initialNode, forkNode, null);&#xD;
this.addEdge(forkJoinActivity, new ControlFlow(), forkNode, joinNode, null);&#xD;
this.addEdge(forkJoinActivity, new ControlFlow(), forkNode, joinNode, null);&#xD;
this.addEdge(forkJoinActivity, new ControlFlow(), joinNode, finalNode, null);&#xD;
&#xD;
this.environment.addElement(forkJoinActivity);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZCRRBEd-0fNU76fYmlA" name="createDecisionJoin">
          <ownedComment xmi:id="_17RZChRBEd-0fNU76fYmlA" annotatedElement="_17RZCRRBEd-0fNU76fYmlA">
            <body>Activity copierActivity = this.getCopier();&#xD;
&#xD;
Activity decisionJoinActivity = new Activity();&#xD;
decisionJoinActivity.setName( &quot;DecisionJoin&quot;);&#xD;
&#xD;
ValueSpecificationAction valueAction0 = new ValueSpecificationAction();&#xD;
valueAction0.setName(&quot;ValueAction_0&quot;);&#xD;
valueAction0.setValue(this.createLiteralInteger(&quot;&quot;, 0));&#xD;
valueAction0.setResult(this.makeOutputPin(valueAction0.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(decisionJoinActivity, valueAction0);&#xD;
&#xD;
ValueSpecificationAction valueAction1 = new ValueSpecificationAction();&#xD;
valueAction1.setName(&quot;ValueAction_1&quot;);&#xD;
valueAction1.setValue(this.createLiteralInteger(&quot;&quot;, 1));&#xD;
valueAction1.setResult(this.makeOutputPin(valueAction1.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(decisionJoinActivity, valueAction1);&#xD;
&#xD;
CallBehaviorAction callActionA = new CallBehaviorAction();&#xD;
callActionA.setName(&quot;Action_A&quot;);&#xD;
callActionA.setBehavior(copierActivity);&#xD;
callActionA.addArgument(this.makeInputPin(callActionA.name + &quot;.argument&quot;, 1, 1));&#xD;
callActionA.addResult(this.makeOutputPin(callActionA.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(decisionJoinActivity, callActionA);&#xD;
&#xD;
DecisionNode decisionNode = new DecisionNode();&#xD;
decisionNode.setName(&quot;DecisionNode&quot;);&#xD;
decisionNode.setDecisionInput(null);&#xD;
this.addNode(decisionJoinActivity, decisionNode);&#xD;
&#xD;
JoinNode joinNode = new JoinNode();&#xD;
joinNode.setName(&quot;JoinNode&quot;);&#xD;
this.addNode(decisionJoinActivity, joinNode);&#xD;
&#xD;
CallBehaviorAction callActionB = new CallBehaviorAction();&#xD;
callActionB.setName(&quot;Action_B&quot;);&#xD;
callActionB.setBehavior(copierActivity);&#xD;
callActionB.addArgument(this.makeInputPin(callActionB.name + &quot;.argument&quot;, 2, 2));&#xD;
callActionB.addResult(this.makeOutputPin(callActionB.name + &quot;.result&quot;, 2, 2));&#xD;
this.addNode(decisionJoinActivity, callActionB);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(decisionJoinActivity, &quot;output&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer));&#xD;
this.addNode(decisionJoinActivity, outputNode);&#xD;
&#xD;
this.addEdge(decisionJoinActivity, new ControlFlow(), valueAction0, valueAction1, null);&#xD;
this.addEdge(decisionJoinActivity, new ObjectFlow(), valueAction0.result, callActionA.argument.getValue(0), null);&#xD;
this.addEdge(decisionJoinActivity, new ObjectFlow(), valueAction1.result, callActionA.argument.getValue(0), null);&#xD;
this.addEdge(decisionJoinActivity, new ObjectFlow(), callActionA.result.getValue(0), decisionNode, null);&#xD;
this.addEdge(decisionJoinActivity, new ObjectFlow(), decisionNode, joinNode, this.createLiteralInteger(&quot;guard_0&quot;, 0));&#xD;
this.addEdge(decisionJoinActivity, new ObjectFlow(), decisionNode, joinNode, this.createLiteralInteger(&quot;guard_1&quot;, 1));&#xD;
this.addEdge(decisionJoinActivity, new ObjectFlow(), joinNode, callActionB.argument.getValue(0), null);&#xD;
this.addEdge(decisionJoinActivity, new ObjectFlow(), callActionB.result.getValue(0), outputNode, null);&#xD;
&#xD;
this.environment.addElement(decisionJoinActivity);&#xD;
&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZCxRBEd-0fNU76fYmlA" name="createForkMerge">
          <ownedComment xmi:id="_17RZDBRBEd-0fNU76fYmlA" annotatedElement="_17RZCxRBEd-0fNU76fYmlA">
            <body>Activity forkMergeActivity = new Activity();&#xD;
forkMergeActivity.name = &quot;ForkMerge&quot;;&#xD;
&#xD;
InitialNode initialNode = new InitialNode();&#xD;
initialNode.setName(&quot;InitialNode&quot;);&#xD;
this.addNode(forkMergeActivity, initialNode);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;ForkNode&quot;);&#xD;
this.addNode(forkMergeActivity, forkNode);&#xD;
&#xD;
MergeNode mergeNode = new MergeNode();&#xD;
mergeNode.setName(&quot;MergeNode&quot;);&#xD;
this.addNode(forkMergeActivity, mergeNode);&#xD;
&#xD;
ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
valueAction.setName(&quot;ValueAction_0&quot;);&#xD;
valueAction.setValue( this.createLiteralInteger(&quot;&quot;, 0));&#xD;
valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(forkMergeActivity, valueAction);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName (&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(forkMergeActivity, &quot;output&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer));&#xD;
this.addNode(forkMergeActivity, outputNode);&#xD;
&#xD;
this.addEdge(forkMergeActivity, new ControlFlow(), initialNode, forkNode, null);&#xD;
this.addEdge(forkMergeActivity, new ControlFlow(), forkNode, mergeNode, null);&#xD;
this.addEdge(forkMergeActivity, new ControlFlow(), forkNode, mergeNode, null);&#xD;
this.addEdge(forkMergeActivity, new ControlFlow(), mergeNode, valueAction, null);&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), valueAction.result, outputNode, null);&#xD;
&#xD;
this.environment.addElement(forkMergeActivity);&#xD;
&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZDRRBEd-0fNU76fYmlA" name="createForkMergeData">
          <ownedComment xmi:id="_17RZDhRBEd-0fNU76fYmlA" annotatedElement="_17RZDRRBEd-0fNU76fYmlA">
            <body>Activity forkMergeActivity = new Activity();&#xD;
forkMergeActivity.name = &quot;ForkMergeData&quot;;&#xD;
&#xD;
ValueSpecificationAction actionA = new ValueSpecificationAction();&#xD;
actionA.setName(&quot;Action_A&quot;);&#xD;
actionA.setValue(this.createLiteralInteger(&quot;&quot;, 0));&#xD;
actionA.setResult(this.makeOutputPin(actionA.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(forkMergeActivity, actionA);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;ForkNode&quot;);&#xD;
this.addNode(forkMergeActivity, forkNode);&#xD;
&#xD;
MergeNode mergeNode = new MergeNode();&#xD;
mergeNode.setName(&quot;MergeNode&quot;);&#xD;
this.addNode(forkMergeActivity, mergeNode);&#xD;
&#xD;
CallBehaviorAction actionB = new CallBehaviorAction();&#xD;
actionB.setName(&quot;Action_B&quot;);&#xD;
actionB.setBehavior(this.getCopier());&#xD;
actionB.addArgument(this.makeInputPin(actionB.name + &quot;.argument&quot;, 1, 1));&#xD;
actionB.addResult(this.makeOutputPin(actionB.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(forkMergeActivity, actionB);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(forkMergeActivity, &quot;output&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer));&#xD;
this.addNode(forkMergeActivity, outputNode);&#xD;
&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), actionA.result, forkNode, null);&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), forkNode, mergeNode, null);&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), forkNode, mergeNode, null);&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), mergeNode, actionB.argument.getValue(0), null);&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), actionB.result.getValue(0), outputNode, null);&#xD;
&#xD;
this.environment.addElement(forkMergeActivity);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZDxRBEd-0fNU76fYmlA" name="createExtentReader">
          <ownedComment xmi:id="_17RZEBRBEd-0fNU76fYmlA" annotatedElement="_17RZDxRBEd-0fNU76fYmlA">
            <body>Element element = environment.getElement(className);&#xD;
&#xD;
if (element == null) {&#xD;
    Debug.println(&quot;[createExtentReader] &quot; + className + &quot; not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
if (!(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[createExtentReader] &quot; + className + &quot; is not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ theClass = (Class_)element;&#xD;
&#xD;
Activity extentReaderActivity = new Activity();&#xD;
extentReaderActivity.setName(className + &quot;ExtentReader&quot;);&#xD;
&#xD;
ReadExtentAction readExtentAction = new ReadExtentAction();&#xD;
readExtentAction.setName(&quot;ReadExtent(&quot; + theClass.name + &quot;)&quot;);&#xD;
readExtentAction.setClassifier(theClass);&#xD;
readExtentAction.setResult(this.makeOutputPin(readExtentAction.name + &quot;.result&quot;, 0, -1));&#xD;
this.addNode(extentReaderActivity, readExtentAction);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(extentReaderActivity, &quot;extent&quot;, ParameterDirectionKind.out, theClass));&#xD;
this.addNode(extentReaderActivity, outputNode);&#xD;
&#xD;
this.addEdge(extentReaderActivity, new ObjectFlow(), readExtentAction.result, outputNode, null);&#xD;
&#xD;
this.environment.addElement(extentReaderActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZERRBEd-0fNU76fYmlA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZEhRBEd-0fNU76fYmlA" name="createSelfReader">
          <ownedComment xmi:id="_17RZExRBEd-0fNU76fYmlA" annotatedElement="_17RZEhRBEd-0fNU76fYmlA">
            <body>Activity selfReaderActivity = new Activity();&#xD;
selfReaderActivity.setName(&quot;SelfReader&quot;);&#xD;
&#xD;
ReadSelfAction readSelfAction = new ReadSelfAction();&#xD;
readSelfAction.setName(&quot;ReadSelf&quot;);&#xD;
readSelfAction.setResult(this.addOutputPin(readSelfAction, readSelfAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(selfReaderActivity, readSelfAction);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(selfReaderActivity, &quot;self&quot;, ParameterDirectionKind.out, selfReaderActivity));&#xD;
this.addNode(selfReaderActivity, outputNode);&#xD;
&#xD;
this.addEdge(selfReaderActivity, new ObjectFlow(), readSelfAction.result, outputNode, null);&#xD;
&#xD;
this.environment.addElement(selfReaderActivity);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZFBRBEd-0fNU76fYmlA" name="createIdentityTester">
          <ownedComment xmi:id="_17RZFRRBEd-0fNU76fYmlA" annotatedElement="_17RZFBRBEd-0fNU76fYmlA">
            <body>Variable variable1 = this.environment.getVariable(variableName1);&#xD;
Variable variable2 = this.environment.getVariable(variableName2);&#xD;
&#xD;
if (variable1 == null) {&#xD;
    Debug.println(&quot;[createIdentityTester] &quot; + variableName1 + &quot; does not exist.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
if (variable2 == null) {&#xD;
    Debug.println(&quot;[createIdentityTester] &quot; + variableName2 + &quot; does not exist.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Value value1 = variable1.value;&#xD;
Value value2 = variable2.value;&#xD;
&#xD;
Activity identityTesterActivity = new Activity();&#xD;
identityTesterActivity.setName(&quot;IdentityTester_&quot; + nameSuffix);&#xD;
&#xD;
ValueSpecificationAction valueAction1 = new ValueSpecificationAction();&#xD;
valueAction1.setName(&quot;ValueAction_1&quot;);&#xD;
valueAction1.setValue(value1.specify());&#xD;
valueAction1.setResult(this.makeOutputPin(valueAction1.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(identityTesterActivity, valueAction1);&#xD;
&#xD;
ValueSpecificationAction valueAction2 = new ValueSpecificationAction();&#xD;
valueAction2.setName(&quot;ValueAction_2&quot;);&#xD;
valueAction2.setValue(value2.specify());&#xD;
valueAction2.setResult(this.addOutputPin(valueAction2, valueAction2.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(identityTesterActivity, valueAction2);&#xD;
&#xD;
TestIdentityAction testIdentityAction = new TestIdentityAction();&#xD;
testIdentityAction.setName(&quot;TestIdentityAction&quot;);&#xD;
testIdentityAction.setFirst(this.makeInputPin(testIdentityAction.name + &quot;.first&quot;, 1, 1));&#xD;
testIdentityAction.setSecond(this.makeInputPin(testIdentityAction.name + &quot;.second&quot;, 1, 1));&#xD;
testIdentityAction.setResult(this.makeOutputPin(testIdentityAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(identityTesterActivity, testIdentityAction);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;outputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(identityTesterActivity, &quot;result&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Boolean));&#xD;
this.addNode(identityTesterActivity, outputNode);&#xD;
&#xD;
this.addEdge(identityTesterActivity, new ObjectFlow(), valueAction1.result, testIdentityAction.first, null);&#xD;
this.addEdge(identityTesterActivity, new ObjectFlow(), valueAction2.result, testIdentityAction.second, null);&#xD;
this.addEdge(identityTesterActivity, new ObjectFlow(), testIdentityAction.result, outputNode, null);&#xD;
&#xD;
this.environment.addElement(identityTesterActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZFhRBEd-0fNU76fYmlA" name="nameSuffix">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZFxRBEd-0fNU76fYmlA" name="variableName1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZGBRBEd-0fNU76fYmlA" name="variableName2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZGRRBEd-0fNU76fYmlA" name="createObjectCreater">
          <ownedComment xmi:id="_17RZGhRBEd-0fNU76fYmlA" annotatedElement="_17RZGRRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(className);&#xD;
&#xD;
if (element == null || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[createObjectCreater] &quot; + className + &quot; does not exist or is not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ type = (Class_)element;&#xD;
&#xD;
Activity objectCreatorActivity = new Activity();&#xD;
objectCreatorActivity.setName(className + &quot;ObjectCreator&quot;);&#xD;
&#xD;
CreateObjectAction createObjectAction = new CreateObjectAction();&#xD;
createObjectAction.setName(&quot;Create(&quot; + className + &quot;)&quot;);&#xD;
createObjectAction.setClassifier(type);&#xD;
createObjectAction.setResult(this.makeOutputPin(createObjectAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(objectCreatorActivity, createObjectAction);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(objectCreatorActivity, &quot;result&quot;, ParameterDirectionKind.out, type));&#xD;
this.addNode(objectCreatorActivity, outputNode);&#xD;
&#xD;
this.addEdge(objectCreatorActivity, new ObjectFlow(), createObjectAction.result, outputNode, null);&#xD;
&#xD;
this.environment.addElement(objectCreatorActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZGxRBEd-0fNU76fYmlA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZHBRBEd-0fNU76fYmlA" name="createObjectDestroyer">
          <ownedComment xmi:id="_17RZHRRBEd-0fNU76fYmlA" annotatedElement="_17RZHBRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(className);&#xD;
&#xD;
if (element == null || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[createObjectDestroyer] &quot; + className + &quot; does not exist or is not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ type = (Class_)element;&#xD;
&#xD;
Activity objectDestroyerActivity = new Activity();&#xD;
objectDestroyerActivity.setName(className + &quot;ObjectDestroyer&quot;);&#xD;
&#xD;
ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
valueAction.setName(&quot;ValueAction&quot;);&#xD;
valueAction.setValue(this.environment.makeValue(type).specify());&#xD;
valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(objectDestroyerActivity, valueAction);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;ForkNode&quot;);&#xD;
this.addNode(objectDestroyerActivity, forkNode);&#xD;
&#xD;
DestroyObjectAction destroyObjectAction = new DestroyObjectAction();&#xD;
destroyObjectAction.setName(&quot;Destroy(&quot; + className + &quot;)&quot;);&#xD;
destroyObjectAction.setIsDestroyLinks(isDestroyLinks);&#xD;
destroyObjectAction.setIsDestroyOwnedObjects(isDestroyOwnedObjects);&#xD;
destroyObjectAction.setTarget(this.makeInputPin(destroyObjectAction.name + &quot;.target&quot;, 1, 1));&#xD;
this.addNode(objectDestroyerActivity, destroyObjectAction);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(objectDestroyerActivity, &quot;object&quot;, ParameterDirectionKind.out, type));&#xD;
this.addNode(objectDestroyerActivity, outputNode);&#xD;
&#xD;
this.addEdge(objectDestroyerActivity, new ObjectFlow(), valueAction.result, forkNode, null);&#xD;
this.addEdge(objectDestroyerActivity, new ObjectFlow(), forkNode, destroyObjectAction.target, null);&#xD;
this.addEdge(objectDestroyerActivity, new ObjectFlow(), forkNode, outputNode, null);&#xD;
&#xD;
this.environment.addElement(objectDestroyerActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZHhRBEd-0fNU76fYmlA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZHxRBEd-0fNU76fYmlA" name="isDestroyLinks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZIBRBEd-0fNU76fYmlA" name="isDestroyOwnedObjects">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZIRRBEd-0fNU76fYmlA" name="createWriterReader">
          <ownedComment xmi:id="_17RZIhRBEd-0fNU76fYmlA" annotatedElement="_17RZIRRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(classifierName);&#xD;
&#xD;
if (element == null || !(element instanceof Classifier)) {&#xD;
    Debug.println(&quot;[createWriterReader] &quot; + classifierName + &quot; does not exist or is not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Classifier classifier = (Classifier)element;&#xD;
&#xD;
StructuralFeature attribute = null;&#xD;
&#xD;
// Debug.println(&quot;[createWriterReader] classifier.member.size = &quot; + classifier.member.size());&#xD;
&#xD;
for (int i =0; i &lt; classifier.member.size(); i++) {&#xD;
&#xD;
    if (classifier.member.getValue(i).name.equals(attributeName)) {&#xD;
        if (classifier.member.getValue(i) instanceof StructuralFeature) {&#xD;
            attribute = (StructuralFeature)(classifier.member.getValue(i));&#xD;
            break;&#xD;
        }&#xD;
        else {&#xD;
            Debug.println(&quot;[createWriterReader] &quot; + classifierName + &quot;::&quot; + attributeName + &quot; is not a structural feature.&quot;);&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
if (attribute == null) {&#xD;
    Debug.println(&quot;[createWriterReader] &quot; + classifierName + &quot;::&quot; + attributeName + &quot; not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[createWriterReader] &quot; + classifierName + &quot;::&quot; + attributeName + &quot; found.&quot;);&#xD;
&#xD;
Activity writerReaderActivity = new Activity();&#xD;
writerReaderActivity.setName(classifierName + &quot;_&quot; + attributeName + &quot;_WriterReader&quot;);&#xD;
&#xD;
Debug.println(&quot;[createWriterReader] Creating value specification...&quot;);&#xD;
&#xD;
ValueSpecification valueSpecification = environment.makeValue((Classifier)(attribute.typedElement.type)).specify();&#xD;
ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
valueAction.setName(attribute.typedElement.type.name + &quot;Value&quot;);&#xD;
valueAction.setValue(valueSpecification);&#xD;
valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(writerReaderActivity, valueAction);&#xD;
&#xD;
Debug.println(&quot;[createWriterReader] Creating object action...&quot;);&#xD;
&#xD;
CreateObjectAction createAction = new CreateObjectAction();&#xD;
createAction.setName(&quot;Create(&quot; + classifierName + &quot;)&quot;);&#xD;
createAction.setClassifier(classifier);&#xD;
createAction.setResult(this.makeOutputPin(createAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(writerReaderActivity, createAction);&#xD;
&#xD;
// ForkNode forkNode = new ForkNode();&#xD;
// forkNode.name = &quot;ObjectFork&quot;;&#xD;
// this.addNode(writerReaderActivity, forkNode);&#xD;
&#xD;
Debug.println(&quot;[createWriterReader] Creating add structural feature action...&quot;);&#xD;
&#xD;
AddStructuralFeatureValueAction writeAction = new AddStructuralFeatureValueAction();&#xD;
writeAction.setName(&quot;Write(&quot; + attribute.name + &quot;)&quot;);&#xD;
writeAction.setStructuralFeature(attribute);&#xD;
writeAction.setIsReplaceAll(true);&#xD;
writeAction.setObject(this.makeInputPin(writeAction.name + &quot;.object&quot;, 1, 1));&#xD;
writeAction.setValue(this.makeInputPin(writeAction.name + &quot;.value&quot;, 1, -1));&#xD;
writeAction.setResult(this.makeOutputPin(writeAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(writerReaderActivity, writeAction);&#xD;
&#xD;
Debug.println(&quot;[createWriterReader] Creating read structural feature action...&quot;);&#xD;
&#xD;
ReadStructuralFeatureAction readAction = new ReadStructuralFeatureAction();&#xD;
readAction.setName(&quot;Read(&quot; + attribute.name + &quot;)&quot;);&#xD;
readAction.setStructuralFeature(attribute);&#xD;
readAction.setObject(this.makeInputPin(readAction.name + &quot;.object&quot;, 1, 1));&#xD;
readAction.setResult(this.makeOutputPin(readAction.name + &quot;.result&quot;, 0, -1));&#xD;
this.addNode(writerReaderActivity, readAction);&#xD;
&#xD;
Debug.println(&quot;[createWriterReader] Creating output node...&quot;);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(writerReaderActivity, attribute.name, ParameterDirectionKind.out, attribute.typedElement.type));&#xD;
this.addNode(writerReaderActivity, outputNode);&#xD;
&#xD;
Debug.println(&quot;[createWriterReader] Creating edges...&quot;);&#xD;
&#xD;
// this.addEdge(writerReaderActivity, new ObjectFlow(), createAction.result, forkNode, null);&#xD;
// this.addEdge(writerReaderActivity, new ObjectFlow(), forkNode, writeAction.object, null);&#xD;
this.addEdge(writerReaderActivity, new ObjectFlow(), createAction.result, writeAction.object, null);&#xD;
this.addEdge(writerReaderActivity, new ObjectFlow(), valueAction.result, writeAction.value, null);&#xD;
this.addEdge(writerReaderActivity, new ControlFlow(), writeAction, readAction, null);&#xD;
// this.addEdge(writerReaderActivity, new ObjectFlow(), forkNode, readAction.object, null);&#xD;
this.addEdge(writerReaderActivity, new ObjectFlow(), writeAction.result, readAction.object, null);&#xD;
this.addEdge(writerReaderActivity, new ObjectFlow(), readAction.result, outputNode, null);&#xD;
&#xD;
this.environment.addElement(writerReaderActivity);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZIxRBEd-0fNU76fYmlA" name="classifierName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZJBRBEd-0fNU76fYmlA" name="attributeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZJRRBEd-0fNU76fYmlA" name="createAttributeWriter">
          <ownedComment xmi:id="_17RZJhRBEd-0fNU76fYmlA" annotatedElement="_17RZJRRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(classifierName);&#xD;
&#xD;
if (element == null || !(element instanceof Classifier)) {&#xD;
    Debug.println(&quot;[createAttributeWriter] &quot; + classifierName + &quot; does not exist or is not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Classifier classifier = (Classifier)element;&#xD;
&#xD;
StructuralFeature attribute = null;&#xD;
&#xD;
for (int i =0; i &lt; classifier.member.size(); i++) {&#xD;
    if (classifier.member.getValue(i).name.equals(attributeName)) {&#xD;
        if (classifier.member.getValue(i) instanceof StructuralFeature) {&#xD;
            attribute = (StructuralFeature)(classifier.member.getValue(i));&#xD;
            break;&#xD;
        }&#xD;
        else {&#xD;
            Debug.println(&quot;[createAttrbuteWriter] &quot; + classifierName + &quot;::&quot; + attributeName + &quot; is not a structural feature.&quot;);&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
if (attribute == null) {&#xD;
    Debug.println(&quot;[createAttributeWriter] &quot; + classifierName + &quot;::&quot; + attributeName + &quot; not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Activity attributeWriterActivity = new Activity();&#xD;
&#xD;
if (isReplaceAll) {&#xD;
    attributeWriterActivity.setName(classifierName + &quot;_&quot; + attributeName + &quot;_all_AttributeWriter&quot;);&#xD;
}&#xD;
else {&#xD;
    attributeWriterActivity.setName(classifierName + &quot;_&quot; + attributeName + &quot;_AttributeWriter&quot;);&#xD;
}&#xD;
&#xD;
ActivityParameterNode objectNode = new ActivityParameterNode();&#xD;
objectNode.setName(&quot;Parameter(object)&quot;);&#xD;
objectNode.setParameter(this.addParameter(attributeWriterActivity, &quot;object&quot;, ParameterDirectionKind.in, classifier));&#xD;
this.addNode(attributeWriterActivity, objectNode);&#xD;
&#xD;
ActivityParameterNode valueNode = new ActivityParameterNode();&#xD;
valueNode.setName(&quot;Parameter(value)&quot;);&#xD;
valueNode.setParameter(this.addParameter(attributeWriterActivity, &quot;value&quot;, ParameterDirectionKind.in, attribute.typedElement.type));&#xD;
this.addNode(attributeWriterActivity, valueNode);&#xD;
&#xD;
ActivityParameterNode insertAtNode = null;&#xD;
if (!isReplaceAll) {&#xD;
    insertAtNode = new ActivityParameterNode();&#xD;
    insertAtNode.setName(&quot;Parameter(insertAt)&quot;);&#xD;
    insertAtNode.setParameter(this.addParameter(attributeWriterActivity, &quot;insertAt&quot;, ParameterDirectionKind.in, this.environment.primitiveTypes.UnlimitedNatural));&#xD;
    this.addNode(attributeWriterActivity, insertAtNode);&#xD;
}&#xD;
&#xD;
AddStructuralFeatureValueAction writeAction = new AddStructuralFeatureValueAction();&#xD;
writeAction.setName(&quot;Write(&quot; + attribute.name + &quot;)&quot;);&#xD;
writeAction.setStructuralFeature(attribute);&#xD;
writeAction.setIsReplaceAll(isReplaceAll);&#xD;
writeAction.setObject(this.makeInputPin(writeAction.name + &quot;.object&quot;, 1, 1));&#xD;
writeAction.setValue(this.makeInputPin(writeAction.name + &quot;.value&quot;, 1, -1));&#xD;
if (!isReplaceAll) {&#xD;
    writeAction.setInsertAt(this.makeInputPin(writeAction + &quot;.insertAt&quot;, 1, 1));&#xD;
}&#xD;
writeAction.setResult(this.addOutputPin(writeAction, writeAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(attributeWriterActivity, writeAction);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;Parameter(output)&quot;);&#xD;
outputNode.setParameter(this.addParameter(attributeWriterActivity, &quot;output&quot;, ParameterDirectionKind.out, classifier));&#xD;
this.addNode(attributeWriterActivity, outputNode);&#xD;
&#xD;
this.addEdge(attributeWriterActivity, new ObjectFlow(), objectNode, writeAction.object, null);&#xD;
this.addEdge(attributeWriterActivity, new ObjectFlow(), valueNode, writeAction.value, null);&#xD;
if (!isReplaceAll) {&#xD;
    this.addEdge(attributeWriterActivity, new ObjectFlow(), insertAtNode, writeAction.insertAt, null);&#xD;
}&#xD;
this.addEdge(attributeWriterActivity, new ObjectFlow(), writeAction.result, outputNode, null);&#xD;
&#xD;
this.environment.addElement(attributeWriterActivity);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZJxRBEd-0fNU76fYmlA" name="classifierName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZKBRBEd-0fNU76fYmlA" name="attributeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZKRRBEd-0fNU76fYmlA" name="isReplaceAll">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZKhRBEd-0fNU76fYmlA" name="createAttributedCaller">
          <ownedComment xmi:id="_17RZKxRBEd-0fNU76fYmlA" annotatedElement="_17RZKhRBEd-0fNU76fYmlA">
            <body>Element element = environment.getElement(calledBehaviorName);&#xD;
&#xD;
if (element == null) {&#xD;
    Debug.println(&quot;[createAttributedCaller] &quot; + calledBehaviorName + &quot; not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
if (!(element instanceof Behavior)) {&#xD;
    Debug.println(&quot;[createAttributedCaller] &quot; + calledBehaviorName + &quot; is not an behavior.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Behavior calledBehavior = (Behavior)element;&#xD;
ParameterList parameters = calledBehavior.ownedParameter;&#xD;
&#xD;
Activity callerActivity = new Activity();&#xD;
callerActivity.setName(&quot;Attributed&quot; + calledBehaviorName + &quot;Caller&quot;);&#xD;
&#xD;
ReadSelfAction readSelfAction = new ReadSelfAction();&#xD;
readSelfAction.setName(&quot;Read(self)&quot;);&#xD;
readSelfAction.setResult(this.makeOutputPin(readSelfAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(callerActivity, readSelfAction);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;ForkSelf&quot;);&#xD;
this.addNode(callerActivity, forkNode);&#xD;
&#xD;
this.addEdge(callerActivity, new ObjectFlow(), readSelfAction.result, forkNode, null);&#xD;
&#xD;
CallBehaviorAction callAction = new CallBehaviorAction();&#xD;
callAction.setName (&quot;Call(&quot; + calledBehaviorName + &quot;)&quot;);&#xD;
callAction.setBehavior(calledBehavior);&#xD;
this.addNode(callerActivity, callAction);&#xD;
&#xD;
for (int i = 0; i &lt; parameters.size(); i++) {&#xD;
    Parameter parameter = parameters.getValue(i);&#xD;
&#xD;
    if (parameter.direction.equals(ParameterDirectionKind.in)  ||&#xD;
        parameter.direction.equals(ParameterDirectionKind.inout)) {&#xD;
&#xD;
        ReadStructuralFeatureAction readAction = new ReadStructuralFeatureAction();&#xD;
        readAction.setName(&quot;Read(&quot; + parameter.name + &quot;)&quot;);&#xD;
        readAction.setStructuralFeature(this.addProperty(callerActivity, parameter.name, parameter.type, 0, -1));&#xD;
        readAction.setObject(this.makeInputPin(readAction.name + &quot;.object&quot;, 1, 1));&#xD;
        readAction.setResult(this.makeOutputPin(readAction.name + &quot;.result&quot;, 0, -1));&#xD;
        this.addNode(callerActivity, readAction);&#xD;
&#xD;
        this.addEdge(callerActivity, new ObjectFlow(), forkNode, readAction.object, null);&#xD;
        &#xD;
        InputPin inputPin = this.makeInputPin(callAction.name + &quot;.argument[&quot; + parameter.name + &quot;]&quot;, 1, 1);&#xD;
        callAction.addArgument(inputPin);&#xD;
&#xD;
        this.addEdge(callerActivity, new ObjectFlow(), readAction.result, inputPin, null);&#xD;
    }&#xD;
    else {&#xD;
        ActivityParameterNode parameterNode = new ActivityParameterNode();&#xD;
        parameterNode.setName(&quot;Parameter(&quot; + parameter.name + &quot;)&quot;);&#xD;
        parameterNode.setParameter(this.addParameter(callerActivity, parameter.name, ParameterDirectionKind.out, parameter.type));&#xD;
        this.addNode(callerActivity, parameterNode);&#xD;
&#xD;
        OutputPin outputPin = this.makeOutputPin(callAction.name + &quot;.result[&quot; + parameter.name + &quot;]&quot;, 1, 1);&#xD;
        callAction.addResult(outputPin);&#xD;
&#xD;
        this.addEdge(callerActivity, new ObjectFlow(), outputPin, parameterNode, null);&#xD;
    }&#xD;
}&#xD;
&#xD;
this.environment.addElement(callerActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZLBRBEd-0fNU76fYmlA" name="calledBehaviorName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZLRRBEd-0fNU76fYmlA" name="createHelloWorld1">
          <ownedComment xmi:id="_17RZLhRBEd-0fNU76fYmlA" annotatedElement="_17RZLRRBEd-0fNU76fYmlA">
            <body>Class_ standardOutputChannelClass = this.environment.standardIO.StandardOutputChannel;&#xD;
&#xD;
Activity helloWorldActivity = new Activity();&#xD;
helloWorldActivity.setName(&quot;HelloWorld1&quot;);&#xD;
&#xD;
ReadExtentAction readExtentAction = new ReadExtentAction();&#xD;
readExtentAction.setName(&quot;ReadExtent(StandardOutputChannel)&quot;);&#xD;
readExtentAction.setClassifier(standardOutputChannelClass);&#xD;
readExtentAction.setResult(this.makeOutputPin(readExtentAction.name + &quot;.result&quot;, 0, -1));&#xD;
this.addNode(helloWorldActivity, readExtentAction);&#xD;
&#xD;
ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
valueAction.setName(&quot;ValueAction(\&quot;Hello World\&quot;)&quot;);&#xD;
valueAction.setValue(this.createLiteralString(&quot;&quot;, &quot;Hello World!&quot;));&#xD;
valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(helloWorldActivity, valueAction);&#xD;
&#xD;
CallOperationAction callAction = new CallOperationAction();&#xD;
callAction.setName(&quot;Call(StandardOutputChannel::writeLine)&quot;);&#xD;
callAction.setTarget(this.makeInputPin(callAction.name + &quot;.target&quot;, 1, 1));&#xD;
callAction.addArgument(this.makeInputPin(callAction.name + &quot;.argument&quot;, 1, 1));&#xD;
callAction.setOperation(this.getOperation(standardOutputChannelClass, &quot;writeLine&quot;));&#xD;
&#xD;
if (callAction.operation == null) {&#xD;
    Debug.println(&quot;[createHelloWorld1] Operation StandardOutputChannelClass::writeLine not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
this.addNode(helloWorldActivity, callAction);&#xD;
&#xD;
this.addEdge(helloWorldActivity, new ObjectFlow(), readExtentAction.result, callAction.target, null);&#xD;
this.addEdge(helloWorldActivity, new ObjectFlow(), valueAction.result, callAction.argument.getValue(0), null);&#xD;
&#xD;
this.environment.addElement(helloWorldActivity);&#xD;
&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZLxRBEd-0fNU76fYmlA" name="createHelloWorld2">
          <ownedComment xmi:id="_17RZMBRBEd-0fNU76fYmlA" annotatedElement="_17RZLxRBEd-0fNU76fYmlA">
            <body>Activity helloWorldActivity = new Activity();&#xD;
helloWorldActivity.setName(&quot;HelloWorld2&quot;);&#xD;
&#xD;
ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
valueAction.setName(&quot;ValueAction(\&quot;Hello World\&quot;)&quot;);&#xD;
valueAction.setValue(this.createLiteralString(&quot;&quot;, &quot;Hello World!&quot;));&#xD;
valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(helloWorldActivity, valueAction);&#xD;
&#xD;
CallBehaviorAction callAction = new CallBehaviorAction();&#xD;
callAction.setName(&quot;Call(WriteLine)&quot;);&#xD;
callAction.setBehavior(this.getActivity(&quot;WriteLine&quot;));&#xD;
callAction.addArgument(this.makeInputPin(callAction.name + &quot;.argument&quot;, 1, 1));&#xD;
this.addNode(helloWorldActivity, callAction);&#xD;
&#xD;
if (callAction.behavior == null) {&#xD;
    return;&#xD;
}&#xD;
&#xD;
this.addEdge(helloWorldActivity, new ObjectFlow(), valueAction.result, callAction.argument.getValue(0), null);&#xD;
&#xD;
this.environment.addElement(helloWorldActivity);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZMRRBEd-0fNU76fYmlA" name="createChannelReader">
          <ownedComment xmi:id="_17RZMhRBEd-0fNU76fYmlA" annotatedElement="_17RZMRRBEd-0fNU76fYmlA">
            <body>Class_ inputChannelClass = this.environment.standardIO.InputChannel;&#xD;
Operation getNameOperation = this.getOperation(inputChannelClass, &quot;getName&quot;);&#xD;
&#xD;
if (getNameOperation == null) {&#xD;
    Debug.println(&quot;[createChannelReader] Operation InputChannel::getName not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
StringValue channelNameValue = new StringValue();&#xD;
channelNameValue.value = channelName;&#xD;
&#xD;
Activity channelReaderActivity = new Activity();&#xD;
channelReaderActivity.setName(channelName + &quot;ChannelReader&quot;);&#xD;
&#xD;
Parameter output = this.addParameter(channelReaderActivity, &quot;value&quot;, ParameterDirectionKind.out, null);&#xD;
&#xD;
CallBehaviorAction channelGetterAction = new CallBehaviorAction();&#xD;
channelGetterAction.setName(&quot;Call(InputChannelInstanceGetter)&quot;);&#xD;
channelGetterAction.setBehavior(this.createInstanceGetter(inputChannelClass, getNameOperation, channelNameValue));&#xD;
channelGetterAction.addResult(this.makeOutputPin(channelGetterAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(channelReaderActivity, channelGetterAction);&#xD;
&#xD;
CallOperationAction callOperationAction = new CallOperationAction();&#xD;
callOperationAction.setName(&quot;Call(read)&quot;);&#xD;
callOperationAction.setOperation(this.getOperation(inputChannelClass, &quot;read&quot;));&#xD;
callOperationAction.setTarget(this.makeInputPin(callOperationAction.name + &quot;.target&quot;, 1, 1));&#xD;
callOperationAction.addResult(this.makeOutputPin(callOperationAction.name + &quot;.result[value]&quot;, 0, 1));&#xD;
this.addNode(channelReaderActivity, callOperationAction);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode(&quot; + output.name + &quot;)&quot;);&#xD;
outputNode.setParameter(output);&#xD;
outputNode.setType(output.type);&#xD;
this.addNode(channelReaderActivity, outputNode);&#xD;
&#xD;
this.addEdge(channelReaderActivity, new ObjectFlow(), channelGetterAction.result.getValue(0), callOperationAction.target, null);&#xD;
this.addEdge(channelReaderActivity, new ObjectFlow(), callOperationAction.result.getValue(0), outputNode, null);&#xD;
&#xD;
this.environment.addElement(channelReaderActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZMxRBEd-0fNU76fYmlA" name="channelName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZNBRBEd-0fNU76fYmlA" name="createChannelWriter">
          <ownedComment xmi:id="_17RZNRRBEd-0fNU76fYmlA" annotatedElement="_17RZNBRBEd-0fNU76fYmlA">
            <body>Class_ outputChannelClass = this.environment.standardIO.OutputChannel;&#xD;
Operation getNameOperation = this.getOperation(outputChannelClass, &quot;getName&quot;);&#xD;
&#xD;
if (getNameOperation == null) {&#xD;
    Debug.println(&quot;[createChannelWriter] Operation OutputChannel::getName not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
StringValue channelNameValue = new StringValue();&#xD;
channelNameValue.value = channelName;&#xD;
&#xD;
Activity channelWriterActivity = new Activity();&#xD;
channelWriterActivity.setName(channelName + &quot;ChannelWriter&quot;);&#xD;
&#xD;
Parameter input = this.addParameter(channelWriterActivity, &quot;value&quot;, ParameterDirectionKind.in, this.environment.primitiveTypes.String);&#xD;
&#xD;
ActivityParameterNode inputNode = new ActivityParameterNode();&#xD;
inputNode.setName(&quot;InputNode(&quot; + input.name + &quot;)&quot;);&#xD;
inputNode.setParameter(input);&#xD;
inputNode.setType(input.type);&#xD;
this.addNode(channelWriterActivity, inputNode);&#xD;
&#xD;
CallBehaviorAction channelGetterAction = new CallBehaviorAction();&#xD;
channelGetterAction.setName(&quot;Call(OutputChannelInstanceGetter)&quot;);&#xD;
channelGetterAction.setBehavior(this.createInstanceGetter(outputChannelClass, getNameOperation, channelNameValue));&#xD;
channelGetterAction.addResult(this.makeOutputPin(channelGetterAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(channelWriterActivity, channelGetterAction);&#xD;
&#xD;
CallOperationAction callOperationAction = new CallOperationAction();&#xD;
callOperationAction.setName(&quot;Call(write)&quot;);&#xD;
callOperationAction.setOperation(this.getOperation(outputChannelClass, &quot;write&quot;));&#xD;
callOperationAction.setTarget(this.makeInputPin(callOperationAction.name + &quot;.target&quot;, 1, 1));&#xD;
callOperationAction.addArgument(this.makeInputPin(callOperationAction.name + &quot;.argument[value]&quot;, 0, 1));&#xD;
this.addNode(channelWriterActivity, callOperationAction);&#xD;
&#xD;
this.addEdge(channelWriterActivity, new ObjectFlow(), inputNode, callOperationAction.argument.getValue(0), null);&#xD;
this.addEdge(channelWriterActivity, new ObjectFlow(), channelGetterAction.result.getValue(0), callOperationAction.target, null);&#xD;
&#xD;
this.environment.addElement(channelWriterActivity);&#xD;
this.createAttributedCaller(channelWriterActivity.name);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZNhRBEd-0fNU76fYmlA" name="channelName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZNxRBEd-0fNU76fYmlA" name="createWriteLine">
          <ownedComment xmi:id="_17RZOBRBEd-0fNU76fYmlA" annotatedElement="_17RZNxRBEd-0fNU76fYmlA">
            <body>Class_ standardOutputChannelClass = this.environment.standardIO.StandardOutputChannel;&#xD;
&#xD;
Activity writeLineActivity = new Activity();&#xD;
writeLineActivity.setName(&quot;WriteLine&quot;);&#xD;
&#xD;
ReadExtentAction readExtentAction = new ReadExtentAction();&#xD;
readExtentAction.setName(&quot;ReadExtent(StandardOutputChannel)&quot;);&#xD;
readExtentAction.setClassifier(standardOutputChannelClass);&#xD;
readExtentAction.setResult(this.makeOutputPin(readExtentAction.name + &quot;.result&quot;, 0, -1));&#xD;
this.addNode(writeLineActivity, readExtentAction);&#xD;
&#xD;
ActivityParameterNode inputNode = new ActivityParameterNode();&#xD;
inputNode.setName(&quot;input(value)&quot;);&#xD;
inputNode.setParameter(this.addParameter(writeLineActivity, &quot;value&quot;, ParameterDirectionKind.in, null));&#xD;
this.addNode(writeLineActivity, inputNode);&#xD;
&#xD;
CallOperationAction callAction = new CallOperationAction();&#xD;
callAction.setName(&quot;Call(StandardOutputChannel::writeLine)&quot;);&#xD;
callAction.setTarget(this.makeInputPin(callAction.name + &quot;.target&quot;, 1, 1));&#xD;
callAction.addArgument(this.makeInputPin(callAction.name + &quot;.argument&quot;, 1, 1));&#xD;
callAction.setOperation(this.getOperation(standardOutputChannelClass, &quot;writeLine&quot;));&#xD;
&#xD;
if (callAction.operation == null) {&#xD;
    Debug.println(&quot;[createWriteLine] Operation StandardOutputChannelClass::writeLine not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
this.addNode(writeLineActivity, callAction);&#xD;
&#xD;
this.addEdge(writeLineActivity, new ObjectFlow(), readExtentAction.result, callAction.target, null);&#xD;
this.addEdge(writeLineActivity, new ObjectFlow(), inputNode, callAction.argument.getValue(0), null);&#xD;
&#xD;
this.environment.addElement(writeLineActivity);&#xD;
&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZORRBEd-0fNU76fYmlA" name="createOperationCaller">
          <ownedComment xmi:id="_17RZOhRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(className);&#xD;
&#xD;
if (element == null || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[createOperationCaller] &quot; + className + &quot; does not exist or is not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ type = (Class_)element;&#xD;
Operation operation = this.getOperation(type, operationName);&#xD;
&#xD;
if (operation==null) {&#xD;
	Debug.println(&quot;[createOperationCaller] &quot; + operationName + &quot; is not an operation of &quot; + className + &quot;.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Activity operationCallerActivity = new Activity();&#xD;
operationCallerActivity.setName(className + operationName + &quot;Caller&quot;);&#xD;
&#xD;
CreateObjectAction createObjectAction = new CreateObjectAction();&#xD;
createObjectAction.setName(&quot;Create(&quot; + className + &quot;)&quot;);&#xD;
createObjectAction.setClassifier(type);&#xD;
createObjectAction.setResult(this.makeOutputPin(createObjectAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(operationCallerActivity, createObjectAction);&#xD;
&#xD;
CallOperationAction callOperationAction = new CallOperationAction();&#xD;
callOperationAction.setName(&quot;Call(&quot; + operationName + &quot;)&quot;);&#xD;
callOperationAction.setOperation(operation);&#xD;
callOperationAction.setTarget(this.makeInputPin(callOperationAction.name + &quot;.target&quot;, 1, 1));&#xD;
this.addNode(operationCallerActivity, callOperationAction);&#xD;
&#xD;
this.addEdge(operationCallerActivity, new ObjectFlow(), createObjectAction.result, callOperationAction.target, null);&#xD;
&#xD;
this.environment.addElement(operationCallerActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZOxRBEd-0fNU76fYmlA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZPBRBEd-0fNU76fYmlA" name="operationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZPRRBEd-0fNU76fYmlA" name="createPolymorphicOperationCaller">
          <ownedComment xmi:id="_17RZPhRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(subclassName);&#xD;
&#xD;
if (element == null || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[createPolymorphicOperationCaller] &quot; + subclassName + &quot; does not exist or is not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ subclass = (Class_)element;&#xD;
&#xD;
element = this.environment.getElement(superclassName);&#xD;
&#xD;
if (element == null || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[createPolymorphicOperationCaller] &quot; + superclassName + &quot; does not exist or is not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ superclass = (Class_)element;&#xD;
Operation operation = this.getOperation(superclass, operationName);&#xD;
&#xD;
if (operation==null) {&#xD;
	Debug.println(&quot;[createPolymorphicOperationCaller] &quot; + operationName + &quot; is not an operation of &quot; + superclassName + &quot;.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Activity operationCallerActivity = new Activity();&#xD;
operationCallerActivity.setName(subclassName + superclassName + operationName + &quot;Caller&quot;);&#xD;
&#xD;
CreateObjectAction createObjectAction = new CreateObjectAction();&#xD;
createObjectAction.setName(&quot;Create(&quot; + subclassName + &quot;)&quot;);&#xD;
createObjectAction.setClassifier(subclass);&#xD;
createObjectAction.setResult(this.makeOutputPin(createObjectAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(operationCallerActivity, createObjectAction);&#xD;
&#xD;
CallOperationAction callOperationAction = new CallOperationAction();&#xD;
callOperationAction.setName(&quot;Call(&quot; + operationName + &quot;)&quot;);&#xD;
callOperationAction.setOperation(operation);&#xD;
callOperationAction.setTarget(this.makeInputPin(callOperationAction.name + &quot;.target&quot;, 1, 1));&#xD;
this.addNode(operationCallerActivity, callOperationAction);&#xD;
&#xD;
this.addEdge(operationCallerActivity, new ObjectFlow(), createObjectAction.result, callOperationAction.target, null);&#xD;
&#xD;
this.environment.addElement(operationCallerActivity);</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZPxRBEd-0fNU76fYmlA" name="subclassName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZQBRBEd-0fNU76fYmlA" name="superclassName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZQRRBEd-0fNU76fYmlA" name="operationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZQhRBEd-0fNU76fYmlA" name="createSelfCaller">
          <ownedComment xmi:id="_17RZQxRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(className);&#xD;
&#xD;
if (element == null || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[createSelfCaller] &quot; + className + &quot; does not exist or is not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ type = (Class_)element;&#xD;
Operation operation = this.getOperation(type, operationName);&#xD;
&#xD;
if (operation==null) {&#xD;
	Debug.println(&quot;[createSelfCaller] &quot; + operationName + &quot; is not an operation of &quot; + className + &quot;.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Activity selfCallerActivity = new Activity();&#xD;
selfCallerActivity.setName(className + operationName + &quot;SelfCaller&quot;);&#xD;
&#xD;
ReadSelfAction readSelfAction = new ReadSelfAction();&#xD;
readSelfAction.setName(&quot;ReadSelf&quot;);&#xD;
readSelfAction.setResult(this.makeOutputPin(readSelfAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(selfCallerActivity, readSelfAction);&#xD;
&#xD;
CallOperationAction callOperationAction = new CallOperationAction();&#xD;
callOperationAction.setName(&quot;Call(&quot; + operationName + &quot;)&quot;);&#xD;
callOperationAction.setOperation(operation);&#xD;
callOperationAction.setTarget(this.makeInputPin(callOperationAction.name + &quot;.target&quot;, 1, 1));&#xD;
this.addNode(selfCallerActivity, callOperationAction);&#xD;
&#xD;
this.addEdge(selfCallerActivity, new ObjectFlow(), readSelfAction.result, callOperationAction.target, null);&#xD;
&#xD;
this.environment.addElement(selfCallerActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZRBRBEd-0fNU76fYmlA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZRRRBEd-0fNU76fYmlA" name="operationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZRhRBEd-0fNU76fYmlA" name="createMethodCaller">
          <ownedComment xmi:id="_17RZRxRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(className);&#xD;
&#xD;
if (element == null || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[createMethodCaller] &quot; + className + &quot; does not exist or is not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ type = (Class_)element;&#xD;
Operation operation = this.getOperation(type, operationName);&#xD;
&#xD;
if (operation==null) {&#xD;
	Debug.println(&quot;[createMethodCaller] &quot; + operationName + &quot; is not an operation of &quot; + className + &quot;.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
if (operation.method.size()==0) {&#xD;
    Debug.println(&quot;[createMethodCaller] &quot; + operationName + &quot; has no method.&quot;);&#xD;
   return;&#xD;
}&#xD;
&#xD;
Behavior method = (Behavior)(operation.method.get(0));&#xD;
&#xD;
Activity superCallerActivity = new Activity();&#xD;
superCallerActivity.setName(className + operationName + &quot;MethodCaller&quot;);&#xD;
&#xD;
CallBehaviorAction callBehaviorAction = new CallBehaviorAction();&#xD;
callBehaviorAction.setName(&quot;Call(&quot; + method.name + &quot;)&quot;);&#xD;
callBehaviorAction.setBehavior(method);&#xD;
this.addNode(superCallerActivity, callBehaviorAction);&#xD;
&#xD;
this.environment.addElement(superCallerActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZSBRBEd-0fNU76fYmlA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZSRRBEd-0fNU76fYmlA" name="operationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZShRBEd-0fNU76fYmlA" name="createAccepter">
          <ownedComment xmi:id="_17RZSxRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(signalName);&#xD;
&#xD;
if (element == null || !(element instanceof Signal)) {&#xD;
    Debug.println(&quot;[createAccepter] &quot; + signalName + &quot; does not exist or is not a signal.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Signal signal = (Signal)element;&#xD;
&#xD;
Activity accepterActivity = new Activity();&#xD;
accepterActivity.setName(signal.name + &quot;Accepter&quot;);&#xD;
accepterActivity.setIsActive(true);&#xD;
&#xD;
Reception reception = new Reception();&#xD;
reception.setSignal(signal);&#xD;
accepterActivity.addOwnedReception(reception);&#xD;
&#xD;
SignalEvent signalEvent = new SignalEvent();&#xD;
signalEvent.setSignal(signal);&#xD;
&#xD;
Trigger trigger = new Trigger();&#xD;
trigger.setEvent(signalEvent);&#xD;
&#xD;
AcceptEventAction acceptEventAction = new AcceptEventAction();&#xD;
acceptEventAction.setName(&quot;Accept(&quot; + signal.name + &quot;)&quot;);&#xD;
acceptEventAction.addTrigger(trigger);&#xD;
acceptEventAction.setIsUnmarshall(false);&#xD;
acceptEventAction.addResult(this.makeOutputPin(acceptEventAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(accepterActivity, acceptEventAction);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;Output(signal)&quot;);&#xD;
outputNode.setParameter(this.addParameter(accepterActivity, &quot;signal&quot;, ParameterDirectionKind.out, signal));&#xD;
this.addNode(accepterActivity, outputNode);&#xD;
&#xD;
this.addEdge(accepterActivity, new ObjectFlow(), acceptEventAction.result.getValue(0), outputNode, null);&#xD;
&#xD;
this.environment.addElement(accepterActivity);</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZTBRBEd-0fNU76fYmlA" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZTRRBEd-0fNU76fYmlA" name="createSender">
          <ownedComment xmi:id="_17RZThRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(signalName);&#xD;
&#xD;
if (element == null || !(element instanceof Signal)) {&#xD;
    Debug.println(&quot;[createSignaler] &quot; + signalName + &quot; does not exist or is not a signal.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Signal signal = (Signal)element;&#xD;
&#xD;
this.createAccepter(signalName);&#xD;
element = this.environment.getElement(signalName + &quot;Accepter&quot;);&#xD;
&#xD;
if (!(element instanceof Activity)) {&#xD;
    Debug.println(&quot;[createSignaler] &quot; + signalName + &quot;Accepter is not an activity.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Activity accepterActivity = (Activity)element;&#xD;
&#xD;
Activity senderActivity = new Activity();&#xD;
senderActivity.setName(signalName + &quot;Sender&quot;);&#xD;
&#xD;
CreateObjectAction createObjectAction = new CreateObjectAction();&#xD;
createObjectAction.setName(&quot;Create(&quot; + signalName + &quot;Accepter)&quot;);&#xD;
createObjectAction.setClassifier(accepterActivity);&#xD;
createObjectAction.setResult(this.makeOutputPin(createObjectAction.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(senderActivity, createObjectAction);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;Fork(accepterActivity)&quot;);&#xD;
this.addNode(senderActivity, forkNode);&#xD;
&#xD;
StartObjectBehaviorAction startAction = new StartObjectBehaviorAction();&#xD;
startAction.setName(&quot;Start&quot;);&#xD;
startAction.setObject(this.makeInputPin(startAction.name + &quot;.object&quot;, 1, 1));&#xD;
this.addNode(senderActivity, startAction);&#xD;
&#xD;
SendSignalAction sendAction = new SendSignalAction();&#xD;
sendAction.setName(&quot;Send(&quot; + signalName + &quot;)&quot;);&#xD;
sendAction.setSignal(signal);&#xD;
sendAction.setTarget(this.makeInputPin(sendAction.name + &quot;.target&quot;, 1, 1));&#xD;
this.addNode(senderActivity, sendAction);&#xD;
&#xD;
DestroyObjectAction destroyObjectAction = new DestroyObjectAction();&#xD;
destroyObjectAction.setName(&quot;Destroy(&quot; + signalName + &quot;Accepter)&quot;);&#xD;
destroyObjectAction.setTarget(this.makeInputPin(destroyObjectAction.name + &quot;.target&quot;,1,1));&#xD;
this.addNode(senderActivity, destroyObjectAction);&#xD;
&#xD;
this.addEdge(senderActivity, new ObjectFlow(), createObjectAction.result, forkNode, null);&#xD;
this.addEdge(senderActivity, new ObjectFlow(), forkNode, startAction.object, null);&#xD;
this.addEdge(senderActivity, new ObjectFlow(), forkNode, sendAction.target, null);&#xD;
this.addEdge(senderActivity, new ObjectFlow(), forkNode, destroyObjectAction.target, null);&#xD;
&#xD;
this.addEdge(senderActivity, new ControlFlow(), startAction, sendAction, null);&#xD;
this.addEdge(senderActivity, new ControlFlow(), sendAction, destroyObjectAction, null);&#xD;
&#xD;
this.environment.addElement(senderActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZTxRBEd-0fNU76fYmlA" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZUBRBEd-0fNU76fYmlA" name="createStructuredNodeTester">
          <ownedComment xmi:id="_17RZURRBEd-0fNU76fYmlA">
            <body>// Note that the named activity is actually modified in place.&#xD;
Activity activity = this.getActivity(activityName);&#xD;
&#xD;
if (activity != null) {&#xD;
&#xD;
    StructuredActivityNode structuredNode = new StructuredActivityNode();&#xD;
    structuredNode.setName(&quot;StructuredNode&quot;);&#xD;
&#xD;
    int i = 0;&#xD;
    while (i &lt; activity.node.size()) {&#xD;
        ActivityNode node = activity.node.getValue(i);&#xD;
&#xD;
        if (node instanceof ActivityParameterNode) {&#xD;
            i++;&#xD;
        } else {&#xD;
            activity.node.removeValue(i);&#xD;
            node.activity = null;&#xD;
            structuredNode.addNode(node);&#xD;
        }&#xD;
    }&#xD;
&#xD;
    i = 0;&#xD;
    while (i &lt; activity.edge.size()) {&#xD;
        ActivityEdge edge = activity.edge.getValue(i);&#xD;
&#xD;
        if (edge.source instanceof ActivityParameterNode &amp;&amp; !(edge.target instanceof ActivityParameterNode)) {&#xD;
            Parameter parameter = ((ActivityParameterNode)edge.source).parameter;&#xD;
&#xD;
            InputPin inputPin = makeInputPin(structuredNode.name + &quot;.&quot; + parameter.name, parameter.multiplicityElement.lower, parameter.multiplicityElement.upper.naturalValue);&#xD;
            structuredNode.addStructuredNodeInput(inputPin);&#xD;
&#xD;
            ActivityNode target = edge.target;&#xD;
            for (int j = 0; j&lt;target.incoming.size(); j++) {&#xD;
                if (target.incoming.getValue(j) == edge) {&#xD;
                    target.incoming.removeValue(j);&#xD;
                    break;&#xD;
                }&#xD;
            }&#xD;
&#xD;
            ObjectFlow objectFlow = new ObjectFlow();&#xD;
            objectFlow.setSource(inputPin);&#xD;
            objectFlow.setTarget(target);&#xD;
            objectFlow.setGuard(null);&#xD;
            structuredNode.addEdge(objectFlow);&#xD;
&#xD;
            edge.setTarget(inputPin);&#xD;
            i++;&#xD;
&#xD;
        } else if (edge.target instanceof ActivityParameterNode &amp;&amp; !(edge.source instanceof ActivityParameterNode)) {&#xD;
            Parameter parameter = ((ActivityParameterNode)edge.target).parameter;&#xD;
&#xD;
            OutputPin outputPin = makeOutputPin(structuredNode.name + &quot;.&quot; + parameter.name, parameter.multiplicityElement.lower, parameter.multiplicityElement.upper.naturalValue);&#xD;
            structuredNode.addStructuredNodeOutput(outputPin);&#xD;
&#xD;
            ActivityNode source = edge.source;&#xD;
            for (int j = 0; j&lt;source.outgoing.size(); j++) {&#xD;
                if (source.outgoing.getValue(j) == edge) {&#xD;
                    source.outgoing.removeValue(j);&#xD;
                    break;&#xD;
                }&#xD;
            }&#xD;
&#xD;
            ObjectFlow objectFlow = new ObjectFlow();&#xD;
            objectFlow.setSource(source);&#xD;
            objectFlow.setTarget(outputPin);&#xD;
            objectFlow.setGuard(null);&#xD;
            structuredNode.addEdge(objectFlow);&#xD;
&#xD;
            edge.setSource(outputPin);&#xD;
            i++;&#xD;
&#xD;
        } else {&#xD;
            activity.edge.remove(i);&#xD;
            edge.activity = null;&#xD;
            structuredNode.addEdge(edge);&#xD;
        }&#xD;
    }&#xD;
&#xD;
    activity.setName(&quot;Structured&quot; + activity.name);&#xD;
    activity.addNode(structuredNode);&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZUhRBEd-0fNU76fYmlA" name="activityName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZUxRBEd-0fNU76fYmlA" name="createForkMergeInput">
          <ownedComment xmi:id="_17RZVBRBEd-0fNU76fYmlA">
            <body>Activity forkMergeActivity = new Activity();&#xD;
forkMergeActivity.name = &quot;ForkMergeInput&quot;;&#xD;
&#xD;
ActivityParameterNode inputNode = new ActivityParameterNode();&#xD;
inputNode.setName(&quot;InputNode&quot;);&#xD;
inputNode.setParameter(this.addParameter(forkMergeActivity, &quot;input&quot;, ParameterDirectionKind.in, this.environment.primitiveTypes.Integer));&#xD;
this.addNode(forkMergeActivity, inputNode);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;ForkNode&quot;);&#xD;
this.addNode(forkMergeActivity, forkNode);&#xD;
&#xD;
MergeNode mergeNode = new MergeNode();&#xD;
mergeNode.setName(&quot;MergeNode&quot;);&#xD;
this.addNode(forkMergeActivity, mergeNode);&#xD;
&#xD;
CallBehaviorAction action = new CallBehaviorAction();&#xD;
action.setName(&quot;Action&quot;);&#xD;
action.setBehavior(this.getCopier());&#xD;
action.addArgument(this.makeInputPin(action.name + &quot;.argument&quot;, 1, 1));&#xD;
action.addResult(this.makeOutputPin(action.name + &quot;.result&quot;, 1, 1));&#xD;
this.addNode(forkMergeActivity, action);&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(forkMergeActivity, &quot;output&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer));&#xD;
this.addNode(forkMergeActivity, outputNode);&#xD;
&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), inputNode, forkNode, null);&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), forkNode, mergeNode, null);&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), forkNode, mergeNode, null);&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), mergeNode, action.argument.getValue(0), null);&#xD;
this.addEdge(forkMergeActivity, new ObjectFlow(), action.result.getValue(0), outputNode, null);&#xD;
&#xD;
this.environment.addElement(forkMergeActivity);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZVRRBEd-0fNU76fYmlA" name="createConditionalNodeTester">
          <ownedComment xmi:id="_17RZVhRBEd-0fNU76fYmlA">
            <body>Activity copierActivity = this.getCopier();&#xD;
&#xD;
if (copierActivity == null) {&#xD;
    return;&#xD;
}&#xD;
&#xD;
Activity conditionalNodeActivity = new Activity();&#xD;
conditionalNodeActivity.setName(&quot;ConditionalNodeTester_&quot; + value);&#xD;
&#xD;
ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
valueAction.setName(&quot;Value(&quot; + value + &quot;)&quot;);&#xD;
valueAction.setValue(this.createLiteralInteger(&quot;&quot;, value));&#xD;
valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
conditionalNodeActivity.addNode(valueAction);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;ForkNode&quot;);&#xD;
conditionalNodeActivity.addNode(forkNode);&#xD;
&#xD;
this.addEdge(conditionalNodeActivity, new ObjectFlow(), valueAction.result, forkNode, null);&#xD;
&#xD;
ConditionalNode conditionalNode = new ConditionalNode();&#xD;
conditionalNode.setName(&quot;ConditionalNode&quot;);&#xD;
conditionalNode.addResult(this.makeOutputPin(conditionalNode.name + &quot;.result&quot;, 1, 1));&#xD;
conditionalNodeActivity.addNode(conditionalNode);&#xD;
&#xD;
Clause clause;&#xD;
TestIdentityAction testIdentityAction;&#xD;
ObjectFlow flow;&#xD;
ForkNode otherForkNode;&#xD;
CallBehaviorAction callAction;&#xD;
&#xD;
for (int i = 0; i &lt;= 2; i++) {&#xD;
    clause = new Clause();&#xD;
&#xD;
    callAction = new CallBehaviorAction();&#xD;
    callAction.setName(&quot;CallAction_&quot; + i);&#xD;
    callAction.setBehavior(copierActivity);&#xD;
    callAction.addArgument(this.makeInputPin(callAction.name + &quot;.argument&quot;, 1, 1));&#xD;
    callAction.addResult(this.makeOutputPin(callAction.name + &quot;.result&quot;, 1, 1));&#xD;
    conditionalNode.addNode(callAction);&#xD;
    clause.addBody(callAction);&#xD;
    clause.addBodyOutput(callAction.result.getValue(0));&#xD;
&#xD;
    valueAction = new ValueSpecificationAction();&#xD;
&#xD;
    if (i &lt; 2) {&#xD;
        otherForkNode = new ForkNode();&#xD;
        otherForkNode.setName(&quot;ForkNode_&quot; + i);&#xD;
        conditionalNode.addNode(otherForkNode);&#xD;
&#xD;
        this.addEdge(conditionalNodeActivity, new ObjectFlow(), forkNode, otherForkNode, null);&#xD;
&#xD;
        valueAction.setName(&quot;TestValue(&quot; + i + &quot;)&quot;);&#xD;
        valueAction.setValue(this.createLiteralInteger(&quot;&quot;, i));&#xD;
        valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
        conditionalNode.addNode(valueAction);&#xD;
        clause.addTest(valueAction);&#xD;
&#xD;
        testIdentityAction = new TestIdentityAction();&#xD;
        testIdentityAction.setName(&quot;Test(value=&quot; + i + &quot;)&quot;);&#xD;
        testIdentityAction.setFirst(this.makeInputPin(testIdentityAction.name + &quot;.first&quot;, 1, 1));&#xD;
        testIdentityAction.setSecond(this.makeInputPin(testIdentityAction.name + &quot;.second&quot;, 1, 1));&#xD;
        testIdentityAction.setResult(this.makeOutputPin(testIdentityAction.name + &quot;.result&quot;, 1, 1));&#xD;
        conditionalNode.addNode(testIdentityAction);&#xD;
        clause.addTest(testIdentityAction);&#xD;
        clause.setDecider(testIdentityAction.result);&#xD;
&#xD;
        flow = new ObjectFlow();&#xD;
        flow.setSource(otherForkNode);&#xD;
        flow.setTarget(testIdentityAction.first);&#xD;
        conditionalNode.addEdge(flow);&#xD;
&#xD;
        flow = new ObjectFlow();&#xD;
        flow.setSource(valueAction.result);&#xD;
        flow.setTarget(testIdentityAction.second);&#xD;
        conditionalNode.addEdge(flow);&#xD;
&#xD;
        flow = new ObjectFlow();&#xD;
        flow.setSource(otherForkNode);&#xD;
        flow.setTarget(callAction.argument.getValue(0));&#xD;
        conditionalNode.addEdge(flow);&#xD;
&#xD;
    } else {&#xD;
        for (int j = 0; j &lt; conditionalNode.clause.size(); j++) {&#xD;
            clause.addPredecessorClause(conditionalNode.clause.getValue(j));&#xD;
        }&#xD;
&#xD;
        valueAction.setName(&quot;Value(true)&quot;);&#xD;
        valueAction.setValue(this.createLiteralBoolean(&quot;&quot;, true));&#xD;
        valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
        conditionalNode.addNode(valueAction);&#xD;
        clause.addTest(valueAction);&#xD;
        clause.setDecider(valueAction.result);&#xD;
&#xD;
        this.addEdge(conditionalNodeActivity, new ObjectFlow(), forkNode, callAction.argument.getValue(0), null);&#xD;
    }&#xD;
&#xD;
    conditionalNode.addClause(clause);&#xD;
}&#xD;
&#xD;
ActivityParameterNode outputNode = new ActivityParameterNode();&#xD;
outputNode.setName(&quot;OutputNode&quot;);&#xD;
outputNode.setParameter(this.addParameter(conditionalNodeActivity, &quot;output&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer));&#xD;
conditionalNodeActivity.addNode(outputNode);&#xD;
&#xD;
this.addEdge(conditionalNodeActivity, new ObjectFlow(), conditionalNode.result.getValue(0), outputNode, null);&#xD;
    &#xD;
this.environment.addElement(conditionalNodeActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZVxRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZWBRBEd-0fNU76fYmlA" name="createLoopNodeTester">
          <ownedComment xmi:id="_17RZWRRBEd-0fNU76fYmlA">
            <body>Activity loopNodeActivity = new Activity();&#xD;
loopNodeActivity.setName(&quot;LoopNodeTester_&quot; + value);&#xD;
&#xD;
ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
valueAction.setName(&quot;InitValue(&quot; + value + &quot;)&quot;);&#xD;
valueAction.setValue(this.createLiteralInteger(&quot;&quot;, value));&#xD;
valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;, 1, 1));&#xD;
loopNodeActivity.addNode(valueAction);&#xD;
&#xD;
ValueSpecificationAction valueAction1 = new ValueSpecificationAction();&#xD;
valueAction1.setName(&quot;InitValue(1)&quot;);&#xD;
valueAction1.setValue(this.createLiteralInteger(&quot;&quot;, 1));&#xD;
valueAction1.setResult(this.makeOutputPin(valueAction1.name + &quot;.result&quot;, 1, 1));&#xD;
loopNodeActivity.addNode(valueAction1);&#xD;
&#xD;
LoopNode loopNode = new LoopNode();&#xD;
loopNode.setName(&quot;LoopNode&quot;);&#xD;
loopNode.addLoopVariableInput(this.makeInputPin(loopNode.name + &quot;.loopVariableInput(i)&quot;, 1, 1));&#xD;
loopNode.addLoopVariableInput(this.makeInputPin(loopNode.name + &quot;.loopVariableInput(n)&quot;, 1, 1));&#xD;
loopNode.addLoopVariable(this.makeOutputPin(loopNode.name + &quot;.loopVariable(i)&quot;, 1, 1));&#xD;
loopNode.addLoopVariable(this.makeOutputPin(loopNode.name + &quot;.loopVariable(n)&quot;, 1, 1));&#xD;
loopNode.addResult(this.makeOutputPin(loopNode.name + &quot;.result(i)&quot;, 1, 1));&#xD;
loopNode.addResult(this.makeOutputPin(loopNode.name + &quot;.result(n)&quot;, 1, 1));&#xD;
loopNode.setIsTestedFirst(true);&#xD;
loopNodeActivity.addNode(loopNode);&#xD;
&#xD;
ActivityParameterNode outputNode0 = new ActivityParameterNode();&#xD;
outputNode0.setName(&quot;Output(i)&quot;);&#xD;
outputNode0.setParameter(this.addParameter(loopNodeActivity, &quot;i&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer));&#xD;
loopNodeActivity.addNode(outputNode0);&#xD;
&#xD;
ActivityParameterNode outputNode1 = new ActivityParameterNode();&#xD;
outputNode1.setName(&quot;Output(n)&quot;);&#xD;
outputNode1.setParameter(this.addParameter(loopNodeActivity, &quot;n&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer));&#xD;
loopNodeActivity.addNode(outputNode1);&#xD;
&#xD;
this.addEdge(loopNodeActivity, new ObjectFlow(), valueAction.result, loopNode.loopVariableInput.getValue(0), null);&#xD;
this.addEdge(loopNodeActivity, new ObjectFlow(), valueAction1.result, loopNode.loopVariableInput.getValue(1), null);&#xD;
this.addEdge(loopNodeActivity, new ObjectFlow(), loopNode.result.getValue(0), outputNode0, null);&#xD;
this.addEdge(loopNodeActivity, new ObjectFlow(), loopNode.result.getValue(1), outputNode1, null);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;ForkNode&quot;);&#xD;
loopNode.addNode(forkNode);&#xD;
&#xD;
ValueSpecificationAction valueAction0 = new ValueSpecificationAction();&#xD;
valueAction0.setName(&quot;Value(0)&quot;);&#xD;
valueAction0.setValue(this.createLiteralInteger(&quot;&quot;, 0));&#xD;
valueAction0.setResult(this.makeOutputPin(valueAction0.name + &quot;.result&quot;, 1, 1));&#xD;
loopNode.addNode(valueAction0);&#xD;
loopNode.addTest(valueAction0);&#xD;
&#xD;
CallBehaviorAction greaterCall = new CallBehaviorAction();&#xD;
greaterCall.setName(&quot;Call(Greater)&quot;);&#xD;
greaterCall.setBehavior(this.environment.integerFunctions.integerGreater);&#xD;
greaterCall.addArgument(this.makeInputPin(greaterCall.name + &quot;.argument(first)&quot;, 1, 1));&#xD;
greaterCall.addArgument(this.makeInputPin(greaterCall.name + &quot;.argument(second)&quot;, 1, 1));&#xD;
greaterCall.addResult(this.makeOutputPin(greaterCall.name + &quot;.result&quot;, 1, 1));&#xD;
loopNode.addNode(greaterCall);&#xD;
loopNode.addTest(greaterCall);&#xD;
loopNode.setDecider(greaterCall.result.getValue(0));&#xD;
&#xD;
ObjectFlow flow = new ObjectFlow();&#xD;
flow.setSource(loopNode.loopVariable.getValue(0));&#xD;
flow.setTarget(forkNode);&#xD;
loopNode.addEdge(flow);&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(forkNode);&#xD;
flow.setTarget(greaterCall.argument.getValue(0));&#xD;
loopNode.addEdge(flow);&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(valueAction0.result);&#xD;
flow.setTarget(greaterCall.argument.getValue(1));&#xD;
loopNode.addEdge(flow);&#xD;
&#xD;
valueAction1 = new ValueSpecificationAction();&#xD;
valueAction1.setName(&quot;Value(1)&quot;);&#xD;
valueAction1.setValue(this.createLiteralInteger(&quot;&quot;, 1));&#xD;
valueAction1.setResult(this.makeOutputPin(valueAction1.name + &quot;.result&quot;, 1, 1));&#xD;
loopNode.addNode(valueAction1);&#xD;
loopNode.addBodyPart(valueAction1);&#xD;
&#xD;
CallBehaviorAction minusCall = new CallBehaviorAction();&#xD;
minusCall.setName(&quot;Call(Minus)&quot;);&#xD;
minusCall.setBehavior(this.environment.integerFunctions.integerMinus);&#xD;
minusCall.addArgument(this.makeInputPin(minusCall.name + &quot;.argument(first)&quot;, 1, 1));&#xD;
minusCall.addArgument(this.makeInputPin(minusCall.name + &quot;.argument(second)&quot;, 1, 1));&#xD;
minusCall.addResult(this.makeOutputPin(minusCall.name + &quot;.result&quot;, 1, 1));&#xD;
loopNode.addNode(minusCall);&#xD;
loopNode.addBodyPart(minusCall);&#xD;
loopNode.addBodyOutput(minusCall.result.getValue(0));&#xD;
&#xD;
CallBehaviorAction timesCall = new CallBehaviorAction();&#xD;
timesCall.setName(&quot;Call(Times)&quot;);&#xD;
timesCall.setBehavior(this.environment.integerFunctions.integerTimes);&#xD;
timesCall.addArgument(this.makeInputPin(timesCall.name + &quot;.argument(first)&quot;, 1, 1));&#xD;
timesCall.addArgument(this.makeInputPin(timesCall.name + &quot;.argument(second)&quot;, 1, 1));&#xD;
timesCall.addResult(this.makeOutputPin(timesCall.name + &quot;.result&quot;, 1, 1));&#xD;
loopNode.addNode(timesCall);&#xD;
loopNode.addBodyPart(timesCall);&#xD;
loopNode.addBodyOutput(timesCall.result.getValue(0));&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(forkNode);&#xD;
flow.setTarget(minusCall.argument.getValue(0));&#xD;
loopNode.addEdge(flow);&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(valueAction1.result);&#xD;
flow.setTarget(minusCall.argument.getValue(1));&#xD;
loopNode.addEdge(flow);&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(loopNode.loopVariable.getValue(1));&#xD;
flow.setTarget(timesCall.argument.getValue(0));&#xD;
loopNode.addEdge(flow);&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(forkNode);&#xD;
flow.setTarget(timesCall.argument.getValue(1));&#xD;
loopNode.addEdge(flow);&#xD;
&#xD;
this.environment.addElement(loopNodeActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZWhRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZWxRBEd-0fNU76fYmlA" name="createExpansionRegionTester">
          <ownedComment xmi:id="_17RZXBRBEd-0fNU76fYmlA">
            <body>Activity expansionRegionActivity = new Activity();&#xD;
expansionRegionActivity.setName(&quot;ExpansionRegionTester_&quot; + n);&#xD;
&#xD;
ValueSpecificationAction[] valueAction = new ValueSpecificationAction[n];&#xD;
ActivityNode node = new InitialNode();&#xD;
node.setName(&quot;InitialNode&quot;);&#xD;
expansionRegionActivity.addNode(node);&#xD;
&#xD;
for (int i = 0; i &lt; n; i++) {&#xD;
    valueAction[i] = new ValueSpecificationAction();&#xD;
    valueAction[i].setName(&quot;Value(&quot; + (i+1) + &quot;)&quot;);&#xD;
    valueAction[i].setValue(this.createLiteralInteger(&quot;&quot;, i+1));&#xD;
    valueAction[i].setResult(this.makeOutputPin(valueAction[i].name + &quot;.result&quot;, 1, 1));&#xD;
    expansionRegionActivity.addNode(valueAction[i]);&#xD;
&#xD;
    this.addEdge(expansionRegionActivity, new ControlFlow(), node, valueAction[i], null);&#xD;
    node = valueAction[i];&#xD;
}&#xD;
&#xD;
ExpansionRegion expansionRegion = new ExpansionRegion();&#xD;
expansionRegion.setName(&quot;ExpansionRegion&quot;);&#xD;
expansionRegion.mode = ExpansionKind.iterative;&#xD;
expansionRegionActivity.addNode(expansionRegion);&#xD;
&#xD;
this.addEdge(expansionRegionActivity, new ControlFlow(), node, expansionRegion, null);&#xD;
&#xD;
ExpansionNode expansionNode = new ExpansionNode();&#xD;
expansionNode.setName(expansionRegion.name + &quot;.input(list)&quot;);&#xD;
expansionRegion.addInputElement(expansionNode);&#xD;
expansionRegionActivity.addNode(expansionNode);&#xD;
&#xD;
expansionNode = new ExpansionNode();&#xD;
expansionNode.setName(expansionRegion.name + &quot;.output(list)&quot;);&#xD;
expansionRegion.addOutputElement(expansionNode);&#xD;
expansionRegionActivity.addNode(expansionNode);&#xD;
&#xD;
expansionNode = new ExpansionNode();&#xD;
expansionNode.setName(expansionRegion.name + &quot;.output(list*10)&quot;);&#xD;
expansionRegion.addOutputElement(expansionNode);&#xD;
expansionRegionActivity.addNode(expansionNode);&#xD;
&#xD;
ActivityParameterNode outputNode0 = new ActivityParameterNode();&#xD;
outputNode0.setName(&quot;Output(list)&quot;);&#xD;
outputNode0.setParameter(this.addParameter(expansionRegionActivity, &quot;list&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer));&#xD;
expansionRegionActivity.addNode(outputNode0);&#xD;
&#xD;
ActivityParameterNode outputNode1 = new ActivityParameterNode();&#xD;
outputNode1.setName(&quot;Output(list*10)&quot;);&#xD;
outputNode1.setParameter(this.addParameter(expansionRegionActivity, &quot;list*10&quot;, ParameterDirectionKind.out, this.environment.primitiveTypes.Integer));&#xD;
expansionRegionActivity.addNode(outputNode1);&#xD;
&#xD;
for (int i = 0; i &lt; n; i++) {&#xD;
    this.addEdge(expansionRegionActivity, new ObjectFlow(), valueAction[i].result, expansionRegion.inputElement.getValue(0), null);&#xD;
}&#xD;
&#xD;
this.addEdge(expansionRegionActivity, new ObjectFlow(), expansionRegion.outputElement.getValue(0), outputNode0, null);&#xD;
this.addEdge(expansionRegionActivity, new ObjectFlow(), expansionRegion.outputElement.getValue(1), outputNode1, null);&#xD;
&#xD;
ForkNode forkNode = new ForkNode();&#xD;
forkNode.setName(&quot;ForkNode&quot;);&#xD;
expansionRegion.addNode(forkNode);&#xD;
&#xD;
ValueSpecificationAction valueAction10 = new ValueSpecificationAction();&#xD;
valueAction10.setName(&quot;Value(10)&quot;);&#xD;
valueAction10.setValue(this.createLiteralInteger(&quot;&quot;, 10));&#xD;
valueAction10.setResult(this.makeOutputPin(valueAction10.name + &quot;.result&quot;, 1, 1));&#xD;
expansionRegion.addNode(valueAction10);&#xD;
&#xD;
CallBehaviorAction timesCall = new CallBehaviorAction();&#xD;
timesCall.setName(&quot;Call(Times)&quot;);&#xD;
timesCall.setBehavior(this.environment.integerFunctions.integerTimes);&#xD;
timesCall.addArgument(this.makeInputPin(timesCall.name + &quot;.first&quot;, 1, 1));&#xD;
timesCall.addArgument(this.makeInputPin(timesCall.name + &quot;.second&quot;, 1, 1));&#xD;
timesCall.addResult(this.makeOutputPin(timesCall.name + &quot;.result&quot;, 1, 1));&#xD;
expansionRegion.addNode(timesCall);&#xD;
&#xD;
ObjectFlow flow = new ObjectFlow();&#xD;
flow.setSource(expansionRegion.inputElement.getValue(0));&#xD;
flow.setTarget(forkNode);&#xD;
expansionRegion.addEdge(flow);&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(forkNode);&#xD;
flow.setTarget(expansionRegion.outputElement.getValue(0));&#xD;
expansionRegion.addEdge(flow);&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(forkNode);&#xD;
flow.setTarget(timesCall.argument.getValue(0));&#xD;
expansionRegion.addEdge(flow);&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(valueAction10.result);&#xD;
flow.setTarget(timesCall.argument.getValue(1));&#xD;
expansionRegion.addEdge(flow);&#xD;
&#xD;
flow = new ObjectFlow();&#xD;
flow.setSource(timesCall.result.getValue(0));&#xD;
flow.setTarget(expansionRegion.outputElement.getValue(1));&#xD;
expansionRegion.addEdge(flow);&#xD;
&#xD;
this.environment.addElement(expansionRegionActivity);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZXRRBEd-0fNU76fYmlA" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZXhRBEd-0fNU76fYmlA" name="createLinkCreator">
          <ownedComment xmi:id="_17RZXxRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(associationName);&#xD;
&#xD;
if (element == null || !(element instanceof Association)) {&#xD;
    Debug.println(&quot;[createLinkCreator] &quot; + associationName + &quot; does not exist or is not an association.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Association association = (Association)element;&#xD;
Property endA = association.memberEnd.getValue(0);&#xD;
Property endB = association.memberEnd.getValue(1);&#xD;
Class_ classA = (Class_)(endA.typedElement.type);&#xD;
Class_ classB = (Class_)(endB.typedElement.type);&#xD;
&#xD;
Activity linkCreatorActivity = new Activity();&#xD;
linkCreatorActivity.setName(associationName + &quot;LinkCreator&quot;);&#xD;
&#xD;
InitialNode initialNode = new InitialNode();&#xD;
initialNode.setName(&quot;Init&quot;);&#xD;
this.addNode(linkCreatorActivity, initialNode);&#xD;
&#xD;
CreateObjectAction createActionA = new CreateObjectAction();&#xD;
createActionA.setName(&quot;Create A&quot;);&#xD;
createActionA.classifier = classA;&#xD;
createActionA.result = this.addOutputPin(createActionA, createActionA.name + &quot;.a&quot;, 1, 1);&#xD;
this.addNode(linkCreatorActivity, createActionA);&#xD;
&#xD;
CreateObjectAction createActionB1 = new CreateObjectAction();&#xD;
createActionB1.setName(&quot;Create B1&quot;);&#xD;
createActionB1.classifier = classB;&#xD;
createActionB1.result = this.addOutputPin(createActionB1, createActionB1.name + &quot;.b&quot;, 1, 1);&#xD;
this.addNode(linkCreatorActivity, createActionB1);&#xD;
&#xD;
CreateObjectAction createActionB2 = new CreateObjectAction();&#xD;
createActionB2.setName(&quot;Create B2&quot;);&#xD;
createActionB2.classifier = classB;&#xD;
createActionB2.result = this.addOutputPin(createActionB2, createActionB2.name + &quot;.b&quot;, 1, 1);&#xD;
this.addNode(linkCreatorActivity, createActionB2);&#xD;
&#xD;
ForkNode forkNodeA = new ForkNode();&#xD;
forkNodeA.setName(&quot;ForkA&quot;);&#xD;
this.addNode(linkCreatorActivity, forkNodeA);&#xD;
&#xD;
ForkNode forkNodeB = new ForkNode();&#xD;
forkNodeB.setName(&quot;ForkB&quot;);&#xD;
this.addNode(linkCreatorActivity, forkNodeB);&#xD;
&#xD;
ActivityParameterNode outputNodeA = new ActivityParameterNode();&#xD;
outputNodeA.setName(&quot;Parameter(outputA)&quot;);&#xD;
outputNodeA.parameter = this.addParameter(linkCreatorActivity, &quot;outputA&quot;, ParameterDirectionKind.out, classA);&#xD;
this.addNode(linkCreatorActivity, outputNodeA);&#xD;
&#xD;
ActivityParameterNode outputNodeB = new ActivityParameterNode();&#xD;
outputNodeB.setName(&quot;Parameter(outputB)&quot;);&#xD;
outputNodeB.parameter = this.addParameter(linkCreatorActivity, &quot;outputB&quot;, ParameterDirectionKind.out, classB);&#xD;
this.addNode(linkCreatorActivity, outputNodeB);&#xD;
&#xD;
CreateLinkAction linkAction1 = new CreateLinkAction();&#xD;
linkAction1.setName(&quot;Create Link 1&quot;);&#xD;
this.addNode(linkCreatorActivity, linkAction1);&#xD;
&#xD;
LinkEndCreationData endData1a = new LinkEndCreationData();&#xD;
endData1a.setIsReplaceAll(false);&#xD;
endData1a.setEnd(endA);&#xD;
endData1a.value = this.addInputPin(linkAction1, linkAction1.name + &quot;.a&quot;, 1, 1);&#xD;
&#xD;
LinkEndCreationData endData1b = new LinkEndCreationData();&#xD;
endData1b.setIsReplaceAll(false);&#xD;
endData1b.setEnd(endB);&#xD;
endData1b.value = this.addInputPin(linkAction1, linkAction1.name + &quot;.b&quot;, 1, 1);&#xD;
&#xD;
linkAction1.addEndData(endData1a);&#xD;
linkAction1.addEndData(endData1b);&#xD;
&#xD;
CreateLinkAction linkAction2 = new CreateLinkAction();&#xD;
linkAction2.setName(&quot;Create Link 2&quot;);&#xD;
this.addNode(linkCreatorActivity, linkAction2);&#xD;
&#xD;
LinkEndCreationData endData2a = new LinkEndCreationData();&#xD;
endData2a.setIsReplaceAll(false);&#xD;
endData2a.setEnd(endA);&#xD;
endData2a.value = this.addInputPin(linkAction2, linkAction2.name + &quot;.a&quot;, 1, 1);&#xD;
&#xD;
LinkEndCreationData endData2b = new LinkEndCreationData();&#xD;
endData2b.setIsReplaceAll(false);&#xD;
endData2b.setEnd(endB);&#xD;
endData2b.value = this.addInputPin(linkAction2, linkAction2.name + &quot;.b&quot;, 1, 1);&#xD;
&#xD;
linkAction2.addEndData(endData2a);&#xD;
linkAction2.addEndData(endData2b);&#xD;
&#xD;
this.addEdge(linkCreatorActivity, new ControlFlow(), initialNode, createActionA, null);&#xD;
this.addEdge(linkCreatorActivity, new ObjectFlow(), createActionA.result, forkNodeA, null);&#xD;
this.addEdge(linkCreatorActivity, new ObjectFlow(), forkNodeA, outputNodeA, null);&#xD;
this.addEdge(linkCreatorActivity, new ObjectFlow(), forkNodeA, endData1a.value, null);&#xD;
this.addEdge(linkCreatorActivity, new ObjectFlow(), forkNodeA, endData2a.value, null);&#xD;
this.addEdge(linkCreatorActivity, new ObjectFlow(), createActionB1.result, forkNodeB, null);&#xD;
this.addEdge(linkCreatorActivity, new ObjectFlow(), forkNodeB, outputNodeB, null);&#xD;
this.addEdge(linkCreatorActivity, new ObjectFlow(), forkNodeB, endData1b.value, null);&#xD;
this.addEdge(linkCreatorActivity, new ObjectFlow(), createActionB2.result, endData2b.value, null);&#xD;
&#xD;
if (endB.multiplicityElement.isOrdered) {&#xD;
    ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
    valueAction.setName(&quot;Value(1)&quot;);&#xD;
    valueAction.setValue(this.createLiteralUnlimitedNatural(&quot;&quot;, 1));&#xD;
    valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;,1,1));&#xD;
    linkCreatorActivity.addNode(valueAction);&#xD;
&#xD;
    ForkNode forkNode1 = new ForkNode();&#xD;
    forkNode1.setName(&quot;Fork(1)&quot;);&#xD;
    linkCreatorActivity.addNode(forkNode1);&#xD;
&#xD;
    InputPin insertAt1 = this.makeInputPin(linkAction1.name + &quot;.insertAt&quot;, 1, 1);&#xD;
    linkAction1.addInputValue(insertAt1);&#xD;
    endData1b.setInsertAt(insertAt1);&#xD;
&#xD;
    InputPin insertAt2 = this.makeInputPin(linkAction2.name + &quot;.insertAt&quot;, 1, 1);&#xD;
    linkAction2.addInputValue(insertAt2);&#xD;
    endData2b.setInsertAt(insertAt2);&#xD;
&#xD;
    this.addEdge(linkCreatorActivity, new ObjectFlow(), valueAction.result, forkNode1, null);&#xD;
    this.addEdge(linkCreatorActivity, new ObjectFlow(), forkNode1, insertAt1, null);&#xD;
    this.addEdge(linkCreatorActivity, new ObjectFlow(), forkNode1, insertAt2, null);&#xD;
}&#xD;
&#xD;
this.environment.addElement(linkCreatorActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZYBRBEd-0fNU76fYmlA" name="associationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZYRRBEd-0fNU76fYmlA" name="createLinkDestroyer">
          <ownedComment xmi:id="_17RZYhRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(associationName);&#xD;
&#xD;
if (element == null || !(element instanceof Association)) {&#xD;
    Debug.println(&quot;[createLinkDestroyer] &quot; + associationName + &quot; not found or is not an asssociation.&quot;);&#xD;
   return;&#xD;
}&#xD;
&#xD;
Association association = (Association)element;&#xD;
Property endA = association.memberEnd.getValue(0);&#xD;
Property endB = association.memberEnd.getValue(1);&#xD;
&#xD;
Activity linkDestroyerActivity = new Activity();&#xD;
linkDestroyerActivity.setName(associationName + &quot;LinkDestroyer&quot;);&#xD;
&#xD;
String linkCreatorName = associationName + &quot;LinkCreator&quot;;&#xD;
NamedElement linkCreatorActivity = this.environment.getElement(linkCreatorName);&#xD;
&#xD;
if ((linkCreatorActivity == null) || !(linkCreatorActivity instanceof Activity)) {&#xD;
    if (linkCreatorActivity == null) {&#xD;
        Debug.println(&quot;[createLinkDestroyer] Creating a &quot; + linkCreatorName + &quot; activity.&quot;);&#xD;
    }&#xD;
    else {&#xD;
        Debug.println(&quot;[createLinkDestroyer] Replacing the existing &quot; + linkCreatorName + &quot; element with an activity.&quot;);&#xD;
        this.environment.removeElement(linkCreatorActivity);&#xD;
     }&#xD;
&#xD;
    this.createLinkCreator(associationName);&#xD;
    linkCreatorActivity = this.environment.getElement(linkCreatorName);&#xD;
&#xD;
    if (linkCreatorActivity == null) {&#xD;
        return;&#xD;
    }&#xD;
}&#xD;
&#xD;
CallBehaviorAction callAction = new CallBehaviorAction();&#xD;
callAction.setName(&quot;Call(&quot; + linkCreatorName + &quot;)&quot;);&#xD;
callAction.setBehavior((Activity)linkCreatorActivity);&#xD;
callAction.addResult(this.makeOutputPin(callAction.name + &quot;.result(a)&quot;, 1, 1));&#xD;
callAction.addResult(this.makeOutputPin(callAction.name + &quot;.result(b)&quot;, 1, 1));&#xD;
linkDestroyerActivity.addNode(callAction);&#xD;
&#xD;
ForkNode forkNodeA = new ForkNode();&#xD;
forkNodeA.setName(&quot;ForkA&quot;);&#xD;
linkDestroyerActivity.addNode(forkNodeA);&#xD;
&#xD;
ForkNode forkNodeB = new ForkNode();&#xD;
forkNodeA.setName(&quot;ForkB&quot;);&#xD;
linkDestroyerActivity.addNode(forkNodeB);&#xD;
&#xD;
DestroyLinkAction destroyLinkAction = new DestroyLinkAction();&#xD;
destroyLinkAction.setName(&quot;DestroyLink(&quot; + associationName + &quot;)&quot;);&#xD;
destroyLinkAction.addInputValue(this.makeInputPin(destroyLinkAction.name + &quot;.a&quot;, 1, 1));&#xD;
destroyLinkAction.addInputValue(this.makeInputPin(destroyLinkAction.name + &quot;.b&quot;, 1, 1));&#xD;
linkDestroyerActivity.addNode(destroyLinkAction);&#xD;
&#xD;
LinkEndData endDataA = new LinkEndDestructionData();&#xD;
endDataA.setEnd(endA);&#xD;
endDataA.setValue(destroyLinkAction.inputValue.getValue(0));&#xD;
destroyLinkAction.addEndData(endDataA);&#xD;
&#xD;
LinkEndData endDataB = new LinkEndDestructionData();&#xD;
endDataB.setEnd(endB);&#xD;
endDataB.setValue(destroyLinkAction.inputValue.getValue(1));&#xD;
destroyLinkAction.addEndData(endDataB);&#xD;
&#xD;
ActivityParameterNode outputNodeA = new ActivityParameterNode();&#xD;
outputNodeA.setName(&quot;Parameter(outputA)&quot;);&#xD;
outputNodeA.setParameter(this.addParameter(linkDestroyerActivity, &quot;outputA&quot;, ParameterDirectionKind.out, endA.typedElement.type));&#xD;
linkDestroyerActivity.addNode(outputNodeA);&#xD;
&#xD;
ActivityParameterNode outputNodeB = new ActivityParameterNode();&#xD;
outputNodeB.setName(&quot;Parameter(outputB)&quot;);&#xD;
outputNodeB.setParameter(this.addParameter(linkDestroyerActivity, &quot;outputB&quot;, ParameterDirectionKind.out, endB.typedElement.type));&#xD;
linkDestroyerActivity.addNode(outputNodeB);&#xD;
&#xD;
this.addEdge(linkDestroyerActivity, new ObjectFlow(), callAction.result.getValue(0), forkNodeA, null);&#xD;
this.addEdge(linkDestroyerActivity, new ObjectFlow(), callAction.result.getValue(1), forkNodeB, null);&#xD;
this.addEdge(linkDestroyerActivity, new ObjectFlow(), forkNodeA, endDataA.value, null);&#xD;
this.addEdge(linkDestroyerActivity, new ObjectFlow(), forkNodeB, endDataB.value, null);&#xD;
this.addEdge(linkDestroyerActivity, new ObjectFlow(), forkNodeA, outputNodeA, null);&#xD;
this.addEdge(linkDestroyerActivity, new ObjectFlow(), forkNodeB, outputNodeB, null);&#xD;
&#xD;
this.environment.addElement(linkDestroyerActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZYxRBEd-0fNU76fYmlA" name="associationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZZBRBEd-0fNU76fYmlA" name="createLinkReader">
          <ownedComment xmi:id="_17RZZRRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(associationName);&#xD;
&#xD;
if (element == null || !(element instanceof Association)) {&#xD;
    Debug.println(&quot;[createLinkReader] &quot; + associationName + &quot; not found or is not an asssociation.&quot;);&#xD;
   return;&#xD;
}&#xD;
&#xD;
Association association = (Association)element;&#xD;
Property endA = association.memberEnd.getValue(0);&#xD;
Property endB = association.memberEnd.getValue(1);&#xD;
&#xD;
Activity linkReaderActivity = new Activity();&#xD;
linkReaderActivity.setName(associationName + &quot;LinkReader&quot;);&#xD;
&#xD;
String linkCreatorName = associationName + &quot;LinkCreator&quot;;&#xD;
NamedElement linkCreatorActivity = this.environment.getElement(linkCreatorName);&#xD;
&#xD;
if ((linkCreatorActivity == null) || !(linkCreatorActivity instanceof Activity)) {&#xD;
    if (linkCreatorActivity == null) {&#xD;
        Debug.println(&quot;[createLinkReader] Creating a &quot; + linkCreatorName + &quot; activity.&quot;);&#xD;
    }&#xD;
    else {&#xD;
        Debug.println(&quot;[createLinkReader] Replacing the existing &quot; + linkCreatorName + &quot; element with an activity.&quot;);&#xD;
        this.environment.removeElement(linkCreatorActivity);&#xD;
     }&#xD;
&#xD;
    this.createLinkCreator(associationName);&#xD;
    linkCreatorActivity = this.environment.getElement(linkCreatorName);&#xD;
&#xD;
    if (linkCreatorActivity == null) {&#xD;
        return;&#xD;
    }&#xD;
}&#xD;
&#xD;
CallBehaviorAction callAction = new CallBehaviorAction();&#xD;
callAction.setName(&quot;Call(&quot; + linkCreatorName + &quot;)&quot;);&#xD;
callAction.setBehavior((Activity)linkCreatorActivity);&#xD;
callAction.addResult(this.makeOutputPin(callAction.name + &quot;.result(a)&quot;, 1, 1));&#xD;
callAction.addResult(this.makeOutputPin(callAction.name + &quot;.result(b)&quot;, 1, 1));&#xD;
linkReaderActivity.addNode(callAction);&#xD;
&#xD;
ForkNode fork = new ForkNode();&#xD;
fork.setName(&quot;ForkNode&quot;);&#xD;
linkReaderActivity.addNode(fork);&#xD;
&#xD;
ReadLinkAction readLinkAction = new ReadLinkAction();&#xD;
readLinkAction.setName(&quot;ReadLink(&quot; + associationName + &quot;::&quot; + endB.name + &quot;)&quot;);&#xD;
readLinkAction.addInputValue(this.makeInputPin(readLinkAction.name + &quot;.input&quot;, 1, 1));&#xD;
readLinkAction.setResult(this.makeOutputPin(readLinkAction.name + &quot;.result&quot;, 0, -1));&#xD;
linkReaderActivity.addNode(readLinkAction);&#xD;
&#xD;
LinkEndData linkEndData = new LinkEndData();&#xD;
linkEndData.setEnd(endA);&#xD;
linkEndData.setValue(readLinkAction.inputValue.getValue(0));&#xD;
readLinkAction.addEndData(linkEndData);&#xD;
&#xD;
linkEndData = new LinkEndData();&#xD;
linkEndData.setEnd(endB);&#xD;
readLinkAction.addEndData(linkEndData);&#xD;
&#xD;
ReadStructuralFeatureAction readFeatureAction = new ReadStructuralFeatureAction();&#xD;
readFeatureAction.setName(&quot;ReadFeature(&quot; + endB.name + &quot;)&quot;);&#xD;
readFeatureAction.setStructuralFeature(endB);&#xD;
readFeatureAction.setObject(this.makeInputPin(readFeatureAction.name + &quot;.object&quot;, 1, 1));&#xD;
readFeatureAction.setResult(this.makeOutputPin(readFeatureAction.name + &quot;.result&quot;, 0, -1));&#xD;
linkReaderActivity.addNode(readFeatureAction);&#xD;
&#xD;
ActivityParameterNode linkOutput = new ActivityParameterNode();&#xD;
linkOutput.setName(&quot;LinkOutput&quot;);&#xD;
linkOutput.setParameter(this.addParameter(linkReaderActivity, &quot;linkOutput&quot;, ParameterDirectionKind.out, endB.typedElement.type));&#xD;
linkReaderActivity.addNode(linkOutput);&#xD;
&#xD;
ActivityParameterNode featureOutput = new ActivityParameterNode();&#xD;
featureOutput.setName(&quot;FeatureOutput&quot;);&#xD;
featureOutput.setParameter(this.addParameter(linkReaderActivity, &quot;featureOutput&quot;, ParameterDirectionKind.out, endB.typedElement.type));&#xD;
linkReaderActivity.addNode(featureOutput);&#xD;
&#xD;
this.addEdge(linkReaderActivity, new ObjectFlow(), callAction.result.getValue(0), fork, null);&#xD;
this.addEdge(linkReaderActivity, new ObjectFlow(), fork, readLinkAction.inputValue.getValue(0), null);&#xD;
this.addEdge(linkReaderActivity, new ObjectFlow(), readLinkAction.result, linkOutput, null);&#xD;
this.addEdge(linkReaderActivity, new ObjectFlow(), fork, readFeatureAction.object, null);&#xD;
this.addEdge(linkReaderActivity, new ObjectFlow(), readFeatureAction.result, featureOutput, null);&#xD;
&#xD;
this.environment.addElement(linkReaderActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZZhRBEd-0fNU76fYmlA" name="associationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZZxRBEd-0fNU76fYmlA" name="createLinkWriter">
          <ownedComment xmi:id="_17RZaBRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(associationName);&#xD;
&#xD;
if (element == null || !(element instanceof Association)) {&#xD;
    Debug.println(&quot;[createLinkWriter] &quot; + associationName + &quot; does not exist or is not an association.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Association association = (Association)element;&#xD;
Property endA = association.memberEnd.getValue(0);&#xD;
Property endB = association.memberEnd.getValue(1);&#xD;
Class_ classA = (Class_)(endA.typedElement.type);&#xD;
Class_ classB = (Class_)(endB.typedElement.type);&#xD;
&#xD;
Activity linkWriterActivity = new Activity();&#xD;
linkWriterActivity.setName(associationName + &quot;LinkWriter&quot;);&#xD;
&#xD;
InitialNode initialNode = new InitialNode();&#xD;
initialNode.setName(&quot;Init&quot;);&#xD;
linkWriterActivity.addNode(initialNode);&#xD;
&#xD;
CreateObjectAction createActionA = new CreateObjectAction();&#xD;
createActionA.setName(&quot;Create A&quot;);&#xD;
createActionA.setClassifier(classA);&#xD;
createActionA.setResult(this.makeOutputPin(createActionA.name + &quot;.a&quot;, 1, 1));&#xD;
linkWriterActivity.addNode(createActionA);&#xD;
&#xD;
CreateObjectAction createActionB1 = new CreateObjectAction();&#xD;
createActionB1.setName(&quot;Create B1&quot;);&#xD;
createActionB1.setClassifier(classB);&#xD;
createActionB1.setResult(this.makeOutputPin(createActionB1.name + &quot;.b&quot;, 1, 1));&#xD;
linkWriterActivity.addNode(createActionB1);&#xD;
&#xD;
CreateObjectAction createActionB2 = new CreateObjectAction();&#xD;
createActionB2.setName(&quot;Create B2&quot;);&#xD;
createActionB2.setClassifier(classB);&#xD;
createActionB2.setResult(this.makeOutputPin(createActionB2.name + &quot;.b&quot;, 1, 1));&#xD;
linkWriterActivity.addNode(createActionB2);&#xD;
&#xD;
ForkNode forkNodeA = new ForkNode();&#xD;
forkNodeA.setName(&quot;ForkA&quot;);&#xD;
linkWriterActivity.addNode(forkNodeA);&#xD;
&#xD;
ForkNode forkNodeB = new ForkNode();&#xD;
forkNodeB.setName(&quot;ForkB&quot;);&#xD;
linkWriterActivity.addNode(forkNodeB);&#xD;
&#xD;
ActivityParameterNode outputNodeA = new ActivityParameterNode();&#xD;
outputNodeA.setName(&quot;Parameter(outputA)&quot;);&#xD;
outputNodeA.setParameter(this.addParameter(linkWriterActivity, &quot;outputA&quot;, ParameterDirectionKind.out, classA));&#xD;
linkWriterActivity.addNode(outputNodeA);&#xD;
&#xD;
ActivityParameterNode outputNodeB = new ActivityParameterNode();&#xD;
outputNodeB.setName(&quot;Parameter(outputB)&quot;);&#xD;
outputNodeB.setParameter(this.addParameter(linkWriterActivity, &quot;outputB&quot;, ParameterDirectionKind.out, classB));&#xD;
linkWriterActivity.addNode(outputNodeB);&#xD;
&#xD;
AddStructuralFeatureValueAction writeAction1 = new AddStructuralFeatureValueAction();&#xD;
writeAction1.setName(&quot;Write 1&quot;);&#xD;
writeAction1.setStructuralFeature(endB);&#xD;
writeAction1.setObject(this.makeInputPin(writeAction1.name + &quot;.object&quot;, 1, 1));&#xD;
writeAction1.setValue(this.makeInputPin(writeAction1.name + &quot;.value&quot;, 1, 1));&#xD;
writeAction1.setResult(this.makeOutputPin(writeAction1.name + &quot;.result&quot;, 1, 1));&#xD;
linkWriterActivity.addNode(writeAction1);&#xD;
&#xD;
AddStructuralFeatureValueAction writeAction2 = new AddStructuralFeatureValueAction();&#xD;
writeAction2.setName(&quot;Write 2&quot;);&#xD;
writeAction2.setStructuralFeature(endB);&#xD;
writeAction2.setObject(this.makeInputPin(writeAction2.name + &quot;.object&quot;, 1, 1));&#xD;
writeAction2.setValue(this.makeInputPin(writeAction2.name + &quot;.value&quot;, 1, 1));&#xD;
linkWriterActivity.addNode(writeAction2);&#xD;
&#xD;
this.addEdge(linkWriterActivity, new ObjectFlow(), createActionA.result, forkNodeA, null);&#xD;
this.addEdge(linkWriterActivity, new ObjectFlow(), createActionB1.result, forkNodeB, null);&#xD;
this.addEdge(linkWriterActivity, new ObjectFlow(), createActionB2.result, writeAction2.value, null);&#xD;
this.addEdge(linkWriterActivity, new ObjectFlow(), forkNodeA, outputNodeA, null);&#xD;
this.addEdge(linkWriterActivity, new ObjectFlow(), forkNodeA, writeAction1.object, null);&#xD;
this.addEdge(linkWriterActivity, new ObjectFlow(), forkNodeA, writeAction2.object, null);&#xD;
this.addEdge(linkWriterActivity, new ObjectFlow(), forkNodeB, outputNodeB, null);&#xD;
this.addEdge(linkWriterActivity, new ObjectFlow(), forkNodeB, writeAction1.value, null);&#xD;
this.addEdge(linkWriterActivity, new ControlFlow(), writeAction1, writeAction2, null);&#xD;
&#xD;
if (endB.multiplicityElement.isOrdered) {&#xD;
    ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
    valueAction.setName(&quot;Value(1)&quot;);&#xD;
    valueAction.setValue(this.createLiteralUnlimitedNatural(&quot;&quot;, 1));&#xD;
    valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;,1,1));&#xD;
    linkWriterActivity.addNode(valueAction);&#xD;
&#xD;
    ForkNode forkNode1 = new ForkNode();&#xD;
    forkNode1.setName(&quot;Fork(1)&quot;);&#xD;
    linkWriterActivity.addNode(forkNode1);&#xD;
&#xD;
    writeAction1.setInsertAt(this.makeInputPin(writeAction1.name + &quot;.insertAt&quot;, 1, 1));&#xD;
    writeAction2.setInsertAt(this.makeInputPin(writeAction2.name + &quot;.insertAt&quot;, 1, 1));&#xD;
&#xD;
    this.addEdge(linkWriterActivity, new ObjectFlow(), valueAction.result, forkNode1, null);&#xD;
    this.addEdge(linkWriterActivity, new ObjectFlow(), forkNode1, writeAction1.insertAt, null);&#xD;
    this.addEdge(linkWriterActivity, new ObjectFlow(), forkNode1, writeAction2.insertAt, null);&#xD;
}&#xD;
&#xD;
this.environment.addElement(linkWriterActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZaRRBEd-0fNU76fYmlA" name="associationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZahRBEd-0fNU76fYmlA" name="createLinkRemover">
          <ownedComment xmi:id="_17RZaxRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(associationName);&#xD;
&#xD;
if (element == null || !(element instanceof Association)) {&#xD;
    Debug.println(&quot;[createLinkRemover] &quot; + associationName + &quot; not found or is not an asssociation.&quot;);&#xD;
   return;&#xD;
}&#xD;
&#xD;
Association association = (Association)element;&#xD;
Property endA = association.memberEnd.getValue(0);&#xD;
Property endB = association.memberEnd.getValue(1);&#xD;
&#xD;
Activity linkRemoverActivity = new Activity();&#xD;
linkRemoverActivity.setName(associationName + &quot;LinkRemover&quot;);&#xD;
&#xD;
String linkWriterName = associationName + &quot;LinkWriter&quot;;&#xD;
NamedElement linkWriterActivity = this.environment.getElement(linkWriterName);&#xD;
&#xD;
if ((linkWriterActivity == null) || !(linkWriterActivity instanceof Activity)) {&#xD;
    if (linkWriterActivity == null) {&#xD;
        Debug.println(&quot;[createLinkRemover] Creating a &quot; + linkWriterName + &quot; activity.&quot;);&#xD;
    }&#xD;
    else {&#xD;
        Debug.println(&quot;[createLinkRemover] Replacing the existing &quot; + linkWriterName + &quot; element with an activity.&quot;);&#xD;
        this.environment.removeElement(linkWriterActivity);&#xD;
     }&#xD;
&#xD;
    this.createLinkWriter(associationName);&#xD;
    linkWriterActivity = this.environment.getElement(linkWriterName);&#xD;
&#xD;
    if (linkWriterActivity == null) {&#xD;
        return;&#xD;
    }&#xD;
}&#xD;
&#xD;
CallBehaviorAction callAction = new CallBehaviorAction();&#xD;
callAction.setName(&quot;Call(&quot; + linkWriterName + &quot;)&quot;);&#xD;
callAction.setBehavior((Activity)linkWriterActivity);&#xD;
callAction.addResult(this.makeOutputPin(callAction.name + &quot;.result(a)&quot;, 1, 1));&#xD;
callAction.addResult(this.makeOutputPin(callAction.name + &quot;.result(b)&quot;, 1, 1));&#xD;
linkRemoverActivity.addNode(callAction);&#xD;
&#xD;
ForkNode forkNodeA = new ForkNode();&#xD;
forkNodeA.setName(&quot;ForkA&quot;);&#xD;
linkRemoverActivity.addNode(forkNodeA);&#xD;
&#xD;
ForkNode forkNodeB = new ForkNode();&#xD;
forkNodeA.setName(&quot;ForkB&quot;);&#xD;
linkRemoverActivity.addNode(forkNodeB);&#xD;
&#xD;
RemoveStructuralFeatureValueAction removeAction = new RemoveStructuralFeatureValueAction();&#xD;
removeAction.setName(&quot;Remove(&quot; + endB.name + &quot;)&quot;);&#xD;
removeAction.setStructuralFeature(endB);&#xD;
removeAction.setObject(this.makeInputPin(removeAction.name + &quot;.object&quot;, 1, 1));&#xD;
linkRemoverActivity.addNode(removeAction);&#xD;
&#xD;
ActivityParameterNode outputNodeA = new ActivityParameterNode();&#xD;
outputNodeA.setName(&quot;Parameter(outputA)&quot;);&#xD;
outputNodeA.setParameter(this.addParameter(linkRemoverActivity, &quot;outputA&quot;, ParameterDirectionKind.out, endA.typedElement.type));&#xD;
linkRemoverActivity.addNode(outputNodeA);&#xD;
&#xD;
ActivityParameterNode outputNodeB = new ActivityParameterNode();&#xD;
outputNodeB.setName(&quot;Parameter(outputB)&quot;);&#xD;
outputNodeB.setParameter(this.addParameter(linkRemoverActivity, &quot;outputB&quot;, ParameterDirectionKind.out, endB.typedElement.type));&#xD;
linkRemoverActivity.addNode(outputNodeB);&#xD;
&#xD;
this.addEdge(linkRemoverActivity, new ObjectFlow(), callAction.result.getValue(0), forkNodeA, null);&#xD;
this.addEdge(linkRemoverActivity, new ObjectFlow(), callAction.result.getValue(1), forkNodeB, null);&#xD;
this.addEdge(linkRemoverActivity, new ObjectFlow(), forkNodeA, removeAction.object, null);&#xD;
this.addEdge(linkRemoverActivity, new ObjectFlow(), forkNodeA, outputNodeA, null);&#xD;
this.addEdge(linkRemoverActivity, new ObjectFlow(), forkNodeB, outputNodeB, null);&#xD;
&#xD;
if (!endB.multiplicityElement.isOrdered || endB.multiplicityElement.isUnique) {&#xD;
    removeAction.setValue(this.makeInputPin(removeAction.name + &quot;.value&quot;, 1, 1));&#xD;
    this.addEdge(linkRemoverActivity, new ObjectFlow(), forkNodeB, removeAction.value, null);&#xD;
} else {&#xD;
    ValueSpecificationAction valueAction = new ValueSpecificationAction();&#xD;
    valueAction.setName(&quot;Value(1)&quot;);&#xD;
    valueAction.setValue(this.createLiteralUnlimitedNatural(&quot;&quot;, 1));&#xD;
    valueAction.setResult(this.makeOutputPin(valueAction.name + &quot;.result&quot;,1,1));&#xD;
    linkRemoverActivity.addNode(valueAction);&#xD;
&#xD;
    removeAction.setRemoveAt(this.makeInputPin(removeAction.name + &quot;.removeAt&quot;, 1, 1));&#xD;
    this.addEdge(linkRemoverActivity, new ObjectFlow(), valueAction.result, removeAction.removeAt, null);&#xD;
}&#xD;
&#xD;
this.environment.addElement(linkRemoverActivity);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZbBRBEd-0fNU76fYmlA" name="associationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RZbRRBEd-0fNU76fYmlA" name="Test">
        <ownedAttribute xmi:id="_17RZbhRBEd-0fNU76fYmlA" name="environment" type="_17RYFhRBEd-0fNU76fYmlA" association="_17RYhRRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RZbxRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RZcBRBEd-0fNU76fYmlA" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_17RZcRRBEd-0fNU76fYmlA" name="Test">
          <ownedComment xmi:id="_17RZchRBEd-0fNU76fYmlA" annotatedElement="_17RZcRRBEd-0fNU76fYmlA">
            <body>return;&#xD;
</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RZcxRBEd-0fNU76fYmlA" name="Variable">
        <ownedAttribute xmi:id="_17RZdBRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA" association="_17RYCBRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RZdRRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RZdhRBEd-0fNU76fYmlA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_17RZdxRBEd-0fNU76fYmlA" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RZeBRBEd-0fNU76fYmlA" name="VariableUtility">
        <ownedComment xmi:id="_17RZeRRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="_17RZehRBEd-0fNU76fYmlA" general="_17RZbRRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17RZexRBEd-0fNU76fYmlA" name="VariableUtility">
          <ownedComment xmi:id="_17RZfBRBEd-0fNU76fYmlA" annotatedElement="_17RZexRBEd-0fNU76fYmlA">
            <body>this.environment = environment;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZfRRBEd-0fNU76fYmlA" name="environment" type="_17RYFhRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZfhRBEd-0fNU76fYmlA" name="setValue">
          <ownedComment xmi:id="_17RZfxRBEd-0fNU76fYmlA" annotatedElement="_17RZfhRBEd-0fNU76fYmlA">
            <body>BooleanValue newValue = new BooleanValue();&#xD;
newValue.type = environment.primitiveTypes.Boolean;&#xD;
newValue.value = value;&#xD;
environment.setVariable(variable, newValue);</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZgBRBEd-0fNU76fYmlA" name="variable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZgRRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZghRBEd-0fNU76fYmlA" name="setValue">
          <ownedComment xmi:id="_17RZgxRBEd-0fNU76fYmlA" annotatedElement="_17RZghRBEd-0fNU76fYmlA">
            <body>IntegerValue newValue = new IntegerValue();&#xD;
newValue.type = environment.primitiveTypes.Integer;&#xD;
newValue.value = value;&#xD;
environment.setVariable(variable, newValue);</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZhBRBEd-0fNU76fYmlA" name="variable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZhRRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZhhRBEd-0fNU76fYmlA" name="setValue">
          <ownedComment xmi:id="_17RZhxRBEd-0fNU76fYmlA" annotatedElement="_17RZhhRBEd-0fNU76fYmlA">
            <body>StringValue newValue = new StringValue();&#xD;
newValue.type = environment.primitiveTypes.String;&#xD;
newValue.value = value;&#xD;
environment.setVariable(variable, newValue);</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZiBRBEd-0fNU76fYmlA" name="variable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZiRRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZihRBEd-0fNU76fYmlA" name="clearValue">
          <ownedComment xmi:id="_17RZixRBEd-0fNU76fYmlA" annotatedElement="_17RZihRBEd-0fNU76fYmlA">
            <body>environment.setVariable(variable, null);&#xD;
&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZjBRBEd-0fNU76fYmlA" name="variable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZjRRBEd-0fNU76fYmlA" name="copyValue">
          <ownedComment xmi:id="_17RZjhRBEd-0fNU76fYmlA" annotatedElement="_17RZjRRBEd-0fNU76fYmlA">
            <body>Variable sourceVariable = environment.getVariable(source);&#xD;
&#xD;
if (sourceVariable == null) {&#xD;
    Debug.println(&quot;[copyValue] Variable &quot; + source + &quot; not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
environment.setVariable(target, sourceVariable.value.copy());&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZjxRBEd-0fNU76fYmlA" name="target">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZkBRBEd-0fNU76fYmlA" name="source">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZkRRBEd-0fNU76fYmlA" name="setEnumerationValue">
          <ownedComment xmi:id="_17RZkhRBEd-0fNU76fYmlA" annotatedElement="_17RZkRRBEd-0fNU76fYmlA">
            <body>NamedElement element =environment.getElement(typeName);&#xD;
&#xD;
if (element == null) {&#xD;
    Debug.println(&quot;[createEnumerationValue] &quot; + typeName + &quot; not found.&quot;);&#xD;
}&#xD;
else if (!(element instanceof Enumeration)) {&#xD;
    Debug.println(&quot;[createEnumerationValue] &quot; + typeName + &quot; is not an enumeration.&quot;);&#xD;
}&#xD;
else {&#xD;
    Enumeration enumeration = (Enumeration)element;&#xD;
&#xD;
    for (int i = 0; i &lt; enumeration.ownedLiteral.size(); i++) {&#xD;
        if (enumeration.ownedLiteral.getValue(i).name.equals(literalName)) {&#xD;
            EnumerationValue newValue = new EnumerationValue();&#xD;
            newValue.type = enumeration;&#xD;
            newValue.literal = enumeration.ownedLiteral.getValue(i);&#xD;
            environment.setVariable(variable, newValue);&#xD;
            return;&#xD;
        }&#xD;
    }&#xD;
&#xD;
    Debug.println(&quot;[createEnumerationValue] &quot; + literalName + &quot; is not an owned literal of &quot; + typeName + &quot;.&quot;);&#xD;
}</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZkxRBEd-0fNU76fYmlA" name="variable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZlBRBEd-0fNU76fYmlA" name="typeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZlRRBEd-0fNU76fYmlA" name="literalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZlhRBEd-0fNU76fYmlA" name="setDefaultValue">
          <ownedComment xmi:id="_17RZlxRBEd-0fNU76fYmlA" annotatedElement="_17RZlhRBEd-0fNU76fYmlA">
            <body>Classifier type = environment.getType(typeName);&#xD;
&#xD;
if (type == null) {&#xD;
    Debug.println(&quot;[setDefaultValue] &quot; + typeName + &quot; not found or not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Value value = environment.makeValue(type);&#xD;
environment.setVariable(variable, value);&#xD;
&#xD;
Debug.println(value.toString());&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZmBRBEd-0fNU76fYmlA" name="variable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZmRRBEd-0fNU76fYmlA" name="typeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZmhRBEd-0fNU76fYmlA" name="printVariables">
          <ownedComment xmi:id="_17RZmxRBEd-0fNU76fYmlA" annotatedElement="_17RZmhRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(this.environment.variables.size() + &quot; variable(s)&quot;);&#xD;
Debug.println(&quot;----------&quot;);&#xD;
&#xD;
for (int i = 0; i &lt; this.environment.variables.size(); i++)&#xD;
{&#xD;
    Variable variable = this.environment.variables.getValue(i);&#xD;
    this.printVariable(variable.name);&#xD;
//    Value value = variable.value;&#xD;
&#xD;
//    if (value == null) {&#xD;
//        Debug.println(variable.name + &quot;: value = null&quot;);&#xD;
//    }&#xD;
//    else {&#xD;
//        ClassifierList types = value.getTypes();&#xD;
//        StringBuffer typeNames = new StringBuffer(); &#xD;
//&#xD;
//        for (int j=0; j &lt; types.size(); j++) {&#xD;
//            typeNames.append(&quot; &quot;).append(types.getValue(j).name);&#xD;
//        }&#xD;
&#xD;
//        Debug.println(variable.name + &quot;: value = &quot; + value + &quot;, types (&quot; + types.size() + &quot;) =&quot; + typeNames);&#xD;
//    }&#xD;
}&#xD;
&#xD;
Debug.println(&quot;&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZnBRBEd-0fNU76fYmlA" name="printVariable">
          <ownedComment xmi:id="_17RZnRRBEd-0fNU76fYmlA" annotatedElement="_17RZnBRBEd-0fNU76fYmlA">
            <body>Variable variable = this.environment.getVariable(variableName);&#xD;
&#xD;
if (variable == null) {&#xD;
    Debug.println(&quot;[printVariable] &quot; + variableName + &quot;does not exist.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Debug.println(variableName + &quot; = &quot; + variable.value);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZnhRBEd-0fNU76fYmlA" name="variableName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZnxRBEd-0fNU76fYmlA" name="copyToAttribute">
          <ownedComment xmi:id="_17RZoBRBEd-0fNU76fYmlA" annotatedElement="_17RZnxRBEd-0fNU76fYmlA">
            <body>Variable sourceVariable = this.environment.getVariable(source);&#xD;
&#xD;
if (sourceVariable == null) {&#xD;
    Debug.println(&quot;[copyToAttribute] &quot; + source + &quot; does not exist.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
this.setAttributeValue(target, attributeName, sourceVariable.value.copy());&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZoRRBEd-0fNU76fYmlA" name="target">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZohRBEd-0fNU76fYmlA" name="attributeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZoxRBEd-0fNU76fYmlA" name="source">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZpBRBEd-0fNU76fYmlA" name="setAttributeValue" visibility="protected">
          <ownedComment xmi:id="_17RZpRRBEd-0fNU76fYmlA" annotatedElement="_17RZpBRBEd-0fNU76fYmlA">
            <body>Variable targetVariable = this.environment.getVariable(target);&#xD;
&#xD;
if (targetVariable == null) {&#xD;
    Debug.println(&quot;[setAttribute] &quot; + target + &quot; does not exist.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Value value = targetVariable.value;&#xD;
&#xD;
if (!(value instanceof StructuredValue)) {&#xD;
    Debug.println(&quot;[setAttribute] &quot; + target + &quot;does not hold a structured value.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
StructuredValue targetValue = (StructuredValue)value;&#xD;
ClassifierList types = targetValue.getTypes();&#xD;
&#xD;
Property attribute = null;&#xD;
&#xD;
for (int i = 0; i &lt; types.size(); i++) {&#xD;
    PropertyList attributes = types.getValue(i).attribute;&#xD;
    for (int j = 0; j &lt; attributes.size(); j++) {&#xD;
        if (attributes.getValue(j).name.equals(attributeName)) {&#xD;
            attribute = attributes.getValue(j);&#xD;
            break;&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
if (attribute == null) {&#xD;
    Debug.println(&quot;[setAttribute] &quot; + attributeName + &quot; not found.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
ValueList values = new ValueList();&#xD;
values.addValue(sourceValue);&#xD;
targetValue.setFeatureValue(attribute, values, 0);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZphRBEd-0fNU76fYmlA" name="target">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZpxRBEd-0fNU76fYmlA" name="attributeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZqBRBEd-0fNU76fYmlA" name="sourceValue" type="_17RKJhRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZqRRBEd-0fNU76fYmlA" name="setAttributeValue">
          <ownedComment xmi:id="_17RZqhRBEd-0fNU76fYmlA" annotatedElement="_17RZqRRBEd-0fNU76fYmlA">
            <body>IntegerValue integerValue = new IntegerValue();&#xD;
integerValue.value = value;&#xD;
&#xD;
this.setAttributeValue(target, attributeName, integerValue);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZqxRBEd-0fNU76fYmlA" name="target">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZrBRBEd-0fNU76fYmlA" name="attributeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZrRRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZrhRBEd-0fNU76fYmlA" name="setAttributeValue">
          <ownedComment xmi:id="_17RZrxRBEd-0fNU76fYmlA" annotatedElement="_17RZrhRBEd-0fNU76fYmlA">
            <body>BooleanValue booleanValue = new BooleanValue();&#xD;
booleanValue.value = value;&#xD;
&#xD;
this.setAttributeValue(target, attributeName, booleanValue);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZsBRBEd-0fNU76fYmlA" name="target">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZsRRBEd-0fNU76fYmlA" name="attributeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZshRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZsxRBEd-0fNU76fYmlA" name="setAttributeValue">
          <ownedComment xmi:id="_17RZtBRBEd-0fNU76fYmlA" annotatedElement="_17RZsxRBEd-0fNU76fYmlA">
            <body>StringValue stringValue = new StringValue();&#xD;
stringValue.value = value;&#xD;
&#xD;
this.setAttributeValue(target, attributeName, stringValue);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZtRRBEd-0fNU76fYmlA" name="target">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZthRBEd-0fNU76fYmlA" name="attributeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZtxRBEd-0fNU76fYmlA" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZuBRBEd-0fNU76fYmlA" name="run">
          <ownedComment xmi:id="_17RZuRRBEd-0fNU76fYmlA" annotatedElement="_17RZuBRBEd-0fNU76fYmlA">
            <body>Variable variable = this.environment. getVariable(variableName);&#xD;
&#xD;
if (variable == null || variable.value == null || !(variable.value instanceof Reference) || &#xD;
    !(((Reference)(variable.value)).referent instanceof Execution)) {&#xD;
    Debug.println(&quot;[run] &quot; + variableName + &quot; not found or does not have an execution as its value.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Execution execution = (Execution)(((Reference)(variable.value)).referent);&#xD;
&#xD;
Debug.println(&quot;[run] Executing &quot; + variableName + &quot;...&quot;);&#xD;
&#xD;
// try {&#xD;
    execution.execute();&#xD;
    &#xD;
    ParameterValueList outputParameterValues = execution.getOutputParameterValues();&#xD;
&#xD;
    for (int i = 0; i &lt; outputParameterValues.size(); i++) {&#xD;
        ParameterValue outputParameterValue = outputParameterValues.getValue(i);&#xD;
        Debug.println(&quot;[run] Output parameter &quot; + outputParameterValue.parameter.name + &quot; has &quot; + outputParameterValue.values.size() + &quot; value(s):&quot;);&#xD;
        for (int j = 0; j &lt; outputParameterValue.values.size(); j++) {&#xD;
            Debug.println(&quot;[run] value [&quot; + j + &quot;] = &quot; + outputParameterValue.values.getValue(j));&#xD;
       }&#xD;
    }&#xD;
// }&#xD;
// catch (Throwable e) {&#xD;
//    Debug.println(&quot;[run] Execution terminated due to &quot; + e.getClass().getName() + &quot;...&quot;);&#xD;
//    StackTraceElement [] stackTrace = e.getStackTrace();&#xD;
//    if (stackTrace.length > 0) Debug.println(stackTrace[0] + &quot;.&quot;);&#xD;
// }&#xD;
&#xD;
Debug.println(&quot;&quot;);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZuhRBEd-0fNU76fYmlA" name="variableName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RZuxRBEd-0fNU76fYmlA" name="ClassifierFactory">
        <ownedComment xmi:id="_17RZvBRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="_17RZvRRBEd-0fNU76fYmlA" general="_17RZbRRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17RZvhRBEd-0fNU76fYmlA" name="ClassifierFactory">
          <ownedComment xmi:id="_17RZvxRBEd-0fNU76fYmlA" annotatedElement="_17RZvhRBEd-0fNU76fYmlA">
            <body>this.environment = environment;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZwBRBEd-0fNU76fYmlA" name="environment" type="_17RYFhRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZwRRBEd-0fNU76fYmlA" name="createEnumerationType">
          <ownedComment xmi:id="_17RZwhRBEd-0fNU76fYmlA" annotatedElement="_17RZwRRBEd-0fNU76fYmlA">
            <body>Enumeration type = new Enumeration();&#xD;
&#xD;
type.setName(typeName);&#xD;
&#xD;
for (int i = 0; i &lt; numberOfLiterals; i++) {&#xD;
    EnumerationLiteral literal = new EnumerationLiteral();&#xD;
&#xD;
    literal.setName(typeName + &quot;_&quot; + String.valueOf(i));&#xD;
    type.addOwnedLiteral(literal);&#xD;
}&#xD;
&#xD;
environment.addElement(type);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZwxRBEd-0fNU76fYmlA" name="typeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZxBRBEd-0fNU76fYmlA" name="numberOfLiterals">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZxRRBEd-0fNU76fYmlA" name="createDataType">
          <ownedComment xmi:id="_17RZxhRBEd-0fNU76fYmlA" annotatedElement="_17RZxRRBEd-0fNU76fYmlA">
            <body>DataType dataType = new DataType();&#xD;
dataType.setName(name);&#xD;
environment.addElement(dataType);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZxxRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZyBRBEd-0fNU76fYmlA" name="createClass">
          <ownedComment xmi:id="_17RZyRRBEd-0fNU76fYmlA" annotatedElement="_17RZyBRBEd-0fNU76fYmlA">
            <body>Class_ class_ = new Class_();&#xD;
class_.setName(name);&#xD;
environment.addElement(class_);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZyhRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZyxRBEd-0fNU76fYmlA" name="createSignal">
          <ownedComment xmi:id="_17RZzBRBEd-0fNU76fYmlA">
            <body>Signal signal = new Signal();&#xD;
signal.setName(name);&#xD;
this.environment.addElement(signal);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZzRRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZzhRBEd-0fNU76fYmlA" name="createAssociation">
          <ownedComment xmi:id="_17RZzxRBEd-0fNU76fYmlA">
            <body>Association association = new Association();&#xD;
association.setName(name);&#xD;
environment.addElement(association);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZ0BRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZ0RRBEd-0fNU76fYmlA" name="addAttribute">
          <ownedComment xmi:id="_17RZ0hRBEd-0fNU76fYmlA" annotatedElement="_17RZ0RRBEd-0fNU76fYmlA">
            <body>Classifier type = environment.getType(classifierName);&#xD;
&#xD;
if (type == null) {&#xD;
    Debug.println(&quot;[addAttribute] &quot; + classifierName + &quot; not found or not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Classifier attributeType = environment.getType(attributeTypeName);&#xD;
&#xD;
if (attributeType == null) {&#xD;
    Debug.println(&quot;[addAttribute] &quot; + attributeTypeName + &quot; not found or not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Property attribute = new Property();&#xD;
attribute.setName(attributeName);&#xD;
attribute.setType(attributeType);&#xD;
attribute.setIsOrdered(false);&#xD;
attribute.setIsUnique(true);&#xD;
attribute.setLower(1);&#xD;
attribute.setUpper(1);&#xD;
&#xD;
if (isComposite) {&#xD;
    attribute.setAggregation(AggregationKind.composite);&#xD;
}&#xD;
else {&#xD;
    attribute.setAggregation( AggregationKind.none);&#xD;
}&#xD;
&#xD;
if (type instanceof DataType) {&#xD;
    // Debug.println(&quot;[addAttribute] &quot; + type.name + &quot; is a data type.&quot;);&#xD;
    ((DataType)type).addOwnedAttribute(attribute);&#xD;
} else if (type instanceof Class_) {&#xD;
    // Debug.println(&quot;[addAttribute] &quot; + type.name + &quot; is a class.&quot;);&#xD;
    ((Class_)type).addOwnedAttribute(attribute);&#xD;
} else if (type instanceof Signal) {&#xD;
    ((Signal)type).addOwnedAttribute(attribute);&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZ0xRBEd-0fNU76fYmlA" name="classifierName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ1BRBEd-0fNU76fYmlA" name="attributeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ1RRBEd-0fNU76fYmlA" name="attributeTypeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ1hRBEd-0fNU76fYmlA" name="isComposite">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZ1xRBEd-0fNU76fYmlA" name="addEnd">
          <ownedComment xmi:id="_17RZ2BRBEd-0fNU76fYmlA">
            <body>Classifier type = environment.getType(associationName);&#xD;
&#xD;
if (type == null || !(type instanceof Association)) {&#xD;
    Debug.println(&quot;[addEnd] &quot; + associationName + &quot; not found or not an association.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Association association = (Association)type;&#xD;
&#xD;
Classifier endType = environment.getType(endTypeName);&#xD;
&#xD;
if (endType == null) {&#xD;
    Debug.println(&quot;[addEnd] &quot; + endTypeName + &quot; not found or not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Property end = new Property();&#xD;
end.setName(endName);&#xD;
end.setType(endType);&#xD;
end.setIsOrdered(false);&#xD;
end.setIsUnique(true);&#xD;
end.setLower(1);&#xD;
end.setUpper(1);&#xD;
&#xD;
if (isComposite) {&#xD;
    end.setAggregation(AggregationKind.composite);&#xD;
}&#xD;
else {&#xD;
    end.setAggregation( AggregationKind.none);&#xD;
}&#xD;
&#xD;
association.addOwnedEnd(end);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZ2RRBEd-0fNU76fYmlA" name="associationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ2hRBEd-0fNU76fYmlA" name="endName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ2xRBEd-0fNU76fYmlA" name="endTypeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ3BRBEd-0fNU76fYmlA" name="isComposite">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZ3RRBEd-0fNU76fYmlA" name="addClassifierBehavior">
          <ownedComment xmi:id="_17RZ3hRBEd-0fNU76fYmlA" annotatedElement="_17RZ3RRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(className);&#xD;
&#xD;
if (element == null || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[addClassifierBehavior] &quot; + className + &quot; not found or not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ classifier = (Class_)element;&#xD;
&#xD;
element = this.environment.getElement(behaviorName);&#xD;
&#xD;
if (element == null || !(element instanceof Behavior)) {&#xD;
    Debug.println(&quot;[addClassifierBehavior] &quot; + behaviorName + &quot; not found or not a behavior.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Behavior behavior = (Behavior)element;&#xD;
this.environment.removeElement(element);&#xD;
&#xD;
classifier.addOwnedBehavior(behavior);&#xD;
classifier.setClassifierBehavior(behavior);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZ3xRBEd-0fNU76fYmlA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ4BRBEd-0fNU76fYmlA" name="behaviorName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZ4RRBEd-0fNU76fYmlA" name="addOperation">
          <ownedComment xmi:id="_17RZ4hRBEd-0fNU76fYmlA">
            <body>NamedElement element = this.environment.getElement(className);&#xD;
&#xD;
if (element == null || !(element instanceof Class_)) {&#xD;
    Debug.println(&quot;[addOperation] &quot; + className + &quot; not found or not a class.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Class_ classifier = (Class_)element;&#xD;
&#xD;
Operation operation = new Operation();&#xD;
operation.setName(operationName);&#xD;
&#xD;
if (!baseClassName.equals(&quot;&quot;)) {&#xD;
    element = this.environment.getElement(baseClassName);&#xD;
&#xD;
    if (element == null || !(element instanceof Class_)) {&#xD;
        Debug.println(&quot;[addOperation] &quot; + baseClassName + &quot; not found or not a class.&quot;);&#xD;
        return;&#xD;
    }&#xD;
&#xD;
    Class_ baseClass = (Class_)element;&#xD;
    Operation redefinedOperation = this.getOperation(baseClass, operationName);&#xD;
&#xD;
    if (redefinedOperation == null) {&#xD;
        Debug.println(&quot;[addOperation] &quot; + operationName + &quot; is not an operation of &quot; + baseClassName + &quot;.&quot;);&#xD;
        return;&#xD;
    }&#xD;
&#xD;
    operation.addRedefinedOperation(redefinedOperation);&#xD;
}&#xD;
&#xD;
if (methodName.equals(&quot;&quot;)) {&#xD;
    operation.setIsAbstract(true);&#xD;
} else {&#xD;
    element = this.environment.getElement(methodName);&#xD;
&#xD;
    if (element == null || !(element instanceof Behavior)) {&#xD;
        Debug.println(&quot;[addOperation] &quot; + methodName + &quot; not found or not a behavior.&quot;);&#xD;
        return;&#xD;
    }&#xD;
&#xD;
    Behavior behavior = (Behavior)element;&#xD;
    this.environment.removeElement(element);&#xD;
    classifier.addOwnedBehavior(behavior);&#xD;
&#xD;
    operation.addMethod(behavior);&#xD;
}&#xD;
&#xD;
classifier.addOwnedOperation(operation);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZ4xRBEd-0fNU76fYmlA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ5BRBEd-0fNU76fYmlA" name="baseClassName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ5RRBEd-0fNU76fYmlA" name="operationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ5hRBEd-0fNU76fYmlA" name="methodName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZ5xRBEd-0fNU76fYmlA" name="addGeneralization">
          <ownedComment xmi:id="_17RZ6BRBEd-0fNU76fYmlA">
            <body>Classifier subtype = this.environment.getType(subtypeName);&#xD;
&#xD;
if (subtype == null) {&#xD;
    Debug.println(&quot;[addGeneralization] &quot; + subtypeName + &quot; not found or not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Classifier supertype = this.environment.getType(supertypeName);&#xD;
&#xD;
if (supertype == null) {&#xD;
    Debug.println(&quot;[addGeneralization] &quot; + supertypeName + &quot; not found or not a classifier.&quot;);&#xD;
    return;&#xD;
}&#xD;
&#xD;
Generalization generalization = new Generalization();&#xD;
generalization.setGeneral(supertype);&#xD;
subtype.addGeneralization(generalization);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZ6RRBEd-0fNU76fYmlA" name="subtypeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ6hRBEd-0fNU76fYmlA" name="supertypeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RZ6xRBEd-0fNU76fYmlA" name="getOperation" visibility="protected">
          <ownedComment xmi:id="_17RZ7BRBEd-0fNU76fYmlA" annotatedElement="_17RZ6xRBEd-0fNU76fYmlA">
            <body>for (int i = 0; i &lt; class_.member.size(); i++) {&#xD;
    NamedElement member = class_.member.getValue(i);&#xD;
    if (member.name.equals(operationName)) {&#xD;
        if (!(member instanceof Operation)) {&#xD;
            return null;&#xD;
        }&#xD;
        return (Operation)member;&#xD;
    }&#xD;
}&#xD;
&#xD;
return null;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RZ7RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RP6RRBEd-0fNU76fYmlA" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RZ7hRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RZ7xRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RZ8BRBEd-0fNU76fYmlA" name="class_" type="_17RQ2RRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RZ8RRBEd-0fNU76fYmlA" name="operationName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RZ8hRBEd-0fNU76fYmlA" name="TestSuite">
        <ownedComment xmi:id="_17RZ8xRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="_17RZ9BRBEd-0fNU76fYmlA" general="_17RZbRRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RZ9RRBEd-0fNU76fYmlA" name="activityFactory" visibility="private" type="_17RYiRRBEd-0fNU76fYmlA" association="_17RaJBRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RZ9hRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RZ9xRBEd-0fNU76fYmlA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_17RZ-BRBEd-0fNU76fYmlA" name="classifierFactory" visibility="private" type="_17RZuxRBEd-0fNU76fYmlA" association="_17RaKBRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RZ-RRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RZ-hRBEd-0fNU76fYmlA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_17RZ-xRBEd-0fNU76fYmlA" name="executorTest" visibility="private" type="_17RYbhRBEd-0fNU76fYmlA" association="_17RaLBRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RZ_BRBEd-0fNU76fYmlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RZ_RRBEd-0fNU76fYmlA"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_17RZ_hRBEd-0fNU76fYmlA" name="TestSuite">
          <ownedComment xmi:id="_17RZ_xRBEd-0fNU76fYmlA">
            <body>this.environment = environment;&#xD;
this.activityFactory = activityFactory;&#xD;
this.classifierFactory = classifierFactory;&#xD;
this.executorTest = executorTest;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RaABRBEd-0fNU76fYmlA" name="environment" type="_17RYFhRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RaARRBEd-0fNU76fYmlA" name="activityFactory" type="_17RYiRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RaAhRBEd-0fNU76fYmlA" name="classifierFactory" type="_17RZuxRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RaAxRBEd-0fNU76fYmlA" name="executorTest" type="_17RYbhRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaBBRBEd-0fNU76fYmlA" name="testSimpleActivites">
          <ownedComment xmi:id="_17RaBRRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(&quot;[testSimpleActivites] Setting up...&quot;);&#xD;
&#xD;
this.activityFactory.createCopier();&#xD;
this.activityFactory.createCaller(&quot;Copier&quot;);&#xD;
this.activityFactory.createSimpleDecision(0);&#xD;
this.activityFactory.createSimpleDecision(1);&#xD;
this.activityFactory.createForkJoin();&#xD;
this.activityFactory.createDecisionJoin();&#xD;
this.activityFactory.createForkMerge();&#xD;
this.activityFactory.createForkMergeData();&#xD;
this.activityFactory.createSelfReader();&#xD;
&#xD;
Debug.println(&quot;[testSimpleActivities] Testing...&quot;);&#xD;
&#xD;
this.executorTest.testExecute(&quot;Copier&quot;);&#xD;
this.executorTest.testExecute(&quot;CopierCaller&quot;);&#xD;
this.executorTest.testExecute(&quot;SimpleDecision0&quot;);&#xD;
this.executorTest.testExecute(&quot;SimpleDecision1&quot;);&#xD;
this.executorTest.testExecute(&quot;ForkJoin&quot;);&#xD;
this.executorTest.testExecute(&quot;DecisionJoin&quot;);&#xD;
this.executorTest.testExecute(&quot;ForkMerge&quot;);&#xD;
this.executorTest.testExecute(&quot;ForkMergeData&quot;);&#xD;
this.executorTest.testExecute(&quot;SelfReader&quot;);&#xD;
&#xD;
Debug.println(&quot;[testSimpleActivities] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaBhRBEd-0fNU76fYmlA" name="testHelloWorld">
          <ownedComment xmi:id="_17RaBxRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(&quot;[testHelloWorld] Setting up...&quot;);&#xD;
this.activityFactory.createHelloWorld2();&#xD;
&#xD;
Debug.println(&quot;[testHelloWorld] Testing...&quot;);&#xD;
this.executorTest.testExecute(&quot;HelloWorld2&quot;);&#xD;
&#xD;
Debug.println(&quot;[testHelloWorld] Done!&quot;);&#xD;
&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaCBRBEd-0fNU76fYmlA" name="testPolymorphicOperationCall">
          <ownedComment xmi:id="_17RaCRRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(&quot;[testPolymorphicOperationCall] Setting up...&quot;);&#xD;
&#xD;
if (activityFactory.getActivity(superclassMethodName)==null) return;&#xD;
if (activityFactory.getActivity(subclassMethodName)==null) return;&#xD;
&#xD;
String superclassName = &quot;Super_&quot; + superclassMethodName;&#xD;
String subclassName = &quot;Sub_&quot; + subclassMethodName;&#xD;
&#xD;
if (this.environment.getElement(superclassName)!=null) {&#xD;
    Debug.println(&quot;[testPolymorphicOperationCall] Replacing class &quot; + superclassName + &quot;.&quot;);&#xD;
    this.environment.removeElement(superclassName);&#xD;
}&#xD;
&#xD;
if (this.environment.getElement(subclassName)!=null) {&#xD;
    Debug.println(&quot;[testPolymorphicOperationCall] Replacing class &quot; + subclassName + &quot;.&quot;);&#xD;
   this.environment.removeElement(subclassName);&#xD;
}&#xD;
&#xD;
this.classifierFactory.createClass(superclassName);&#xD;
this.classifierFactory.addOperation(superclassName,&quot;&quot;,&quot;test&quot;,superclassMethodName);&#xD;
&#xD;
this.classifierFactory.createClass(subclassName);&#xD;
this.classifierFactory.addOperation(subclassName,superclassName,&quot;test&quot;,subclassMethodName);&#xD;
&#xD;
this.activityFactory.createPolymorphicOperationCaller(subclassName,superclassName,&quot;test&quot;);&#xD;
&#xD;
Debug.println(&quot;[testPolymorphicOperationCall] Testing...&quot;);&#xD;
&#xD;
this.executorTest.testExecute(subclassName + superclassName + &quot;testCaller&quot;);&#xD;
&#xD;
Debug.println(&quot;[testPolymorphicOperationCall] Done!&quot;);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RaChRBEd-0fNU76fYmlA" name="superclassMethodName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RaCxRBEd-0fNU76fYmlA" name="subclassMethodName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaDBRBEd-0fNU76fYmlA" name="testSuperCall">
          <ownedComment xmi:id="_17RaDRRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(&quot;[testSuperCall] Setting up...&quot;);&#xD;
&#xD;
if (activityFactory.getActivity(superclassMethodName)==null) return;&#xD;
if (activityFactory.getActivity(subclassMethodName)==null) return;&#xD;
&#xD;
String superclassName = &quot;Super_&quot; + superclassMethodName;&#xD;
String subclassName = &quot;Sub_&quot; + subclassMethodName;&#xD;
&#xD;
if (this.environment.getElement(superclassName)!=null) {&#xD;
    Debug.println(&quot;[testSuperCall] Replacing class &quot; + superclassName + &quot;.&quot;);&#xD;
    this.environment.removeElement(superclassName);&#xD;
}&#xD;
&#xD;
if (this.environment.getElement(subclassName)!=null) {&#xD;
    Debug.println(&quot;[testSuperCall] Replacing class &quot; + subclassName + &quot;.&quot;);&#xD;
    this.environment.removeElement(subclassName);&#xD;
}&#xD;
&#xD;
// Debug.println(&quot;[testSuperCall] Creating class &quot; + superclassName + &quot;...&quot;);&#xD;
&#xD;
this.classifierFactory.createClass(superclassName);&#xD;
this.classifierFactory.addOperation(superclassName,&quot;&quot;,&quot;test&quot;,superclassMethodName);&#xD;
this.activityFactory.createSelfCaller(superclassName,&quot;test&quot;);&#xD;
// Activity callTestMethod = (Activity)(this.environment.getElement(superclassName+&quot;testSelfCaller&quot;));&#xD;
this.classifierFactory.addOperation(superclassName,&quot;&quot;,&quot;callTest&quot;,superclassName+&quot;testSelfCaller&quot;);&#xD;
// Debug.println(&quot;[testSuperCall] &quot; + superclassName + &quot;::&quot; + &quot;callTest method = &quot; + callTestMethod.name + &quot;, context = &quot; + callTestMethod.context);&#xD;
&#xD;
//Debug.println(&quot;[testSuperCall] Creating class &quot; + subclassName + &quot;...&quot;);&#xD;
&#xD;
this.classifierFactory.createClass(subclassName);&#xD;
this.classifierFactory.addOperation(subclassName,superclassName,&quot;test&quot;,subclassMethodName);&#xD;
this.activityFactory.createMethodCaller(superclassName,&quot;callTest&quot;);&#xD;
this.classifierFactory.addOperation(subclassName,superclassName,&quot;callTest&quot;,superclassName+&quot;callTestMethodCaller&quot;);&#xD;
&#xD;
// Debug.println(&quot;[testSuperCall] Adding generalization...&quot;);&#xD;
this.classifierFactory.addGeneralization(subclassName,superclassName);&#xD;
&#xD;
// Debug.println(&quot;[testSuperCall] Creating operation caller activity...&quot;);&#xD;
this.activityFactory.createOperationCaller(subclassName,&quot;callTest&quot;);&#xD;
&#xD;
Debug.println(&quot;[testSuperCall] Testing...&quot;);&#xD;
&#xD;
this.executorTest.testExecute(subclassName+&quot;callTestCaller&quot;);&#xD;
&#xD;
Debug.println(&quot;[testSuperCall] Done!&quot;);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RaDhRBEd-0fNU76fYmlA" name="superclassMethodName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RaDxRBEd-0fNU76fYmlA" name="subclassMethodName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaEBRBEd-0fNU76fYmlA" name="testSignalSend">
          <ownedComment xmi:id="_17RaERRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;[testSignalSend] Setting up...&quot;);&#xD;
&#xD;
classifierFactory.createSignal(&quot;TestSignal&quot;);&#xD;
activityFactory.createSender(&quot;TestSignal&quot;);&#xD;
&#xD;
Debug.println(&quot;[testSignalSend] Testing...&quot;);&#xD;
&#xD;
executorTest.testExecute(&quot;TestSignalSender&quot;);&#xD;
&#xD;
Debug.println(&quot;[testSignalSend] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaEhRBEd-0fNU76fYmlA" name="testStructuredNode">
          <ownedComment xmi:id="_17RaExRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(&quot;[testStructuredNode] Setting up...&quot;);&#xD;
this.activityFactory.createStructuredNodeTester(&quot;ForkMergeInput&quot;);&#xD;
&#xD;
Debug.println(&quot;[testStructuredNode] Testing...&quot;);&#xD;
this.executorTest.testExecute(&quot;StructuredForkMergeInput&quot;);&#xD;
&#xD;
Debug.println(&quot;[testStructuredNode] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaFBRBEd-0fNU76fYmlA" name="testConditionalNode">
          <ownedComment xmi:id="_17RaFRRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(&quot;[testConditionalNode] Setting up...&quot;);&#xD;
this.activityFactory.createConditionalNodeTester(0);&#xD;
this.activityFactory.createConditionalNodeTester(1);&#xD;
this.activityFactory.createConditionalNodeTester(2);&#xD;
&#xD;
Debug.println(&quot;[testConditionalNode] Testing...&quot;);&#xD;
this.executorTest.testExecute(&quot;ConditionalNodeTester_0&quot;);&#xD;
this.executorTest.testExecute(&quot;ConditionalNodeTester_1&quot;);&#xD;
this.executorTest.testExecute(&quot;ConditionalNodeTester_2&quot;);&#xD;
&#xD;
Debug.println(&quot;[testConditionalNode] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaFhRBEd-0fNU76fYmlA" name="testLoopNode">
          <ownedComment xmi:id="_17RaFxRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(&quot;[testLoopNode] Setting up...&quot;);&#xD;
this.activityFactory.createLoopNodeTester(0);&#xD;
this.activityFactory.createLoopNodeTester(1);&#xD;
this.activityFactory.createLoopNodeTester(2);&#xD;
&#xD;
Debug.println(&quot;[testLoopNode] Testing...&quot;);&#xD;
this.executorTest.testExecute(&quot;LoopNodeTester_0&quot;);&#xD;
this.executorTest.testExecute(&quot;LoopNodeTester_1&quot;);&#xD;
this.executorTest.testExecute(&quot;LoopNodeTester_2&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLoopNode] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaGBRBEd-0fNU76fYmlA" name="testExpansionRegion">
          <ownedComment xmi:id="_17RaGRRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;&quot;);&#xD;
Debug.println(&quot;[testExpansionRegion] Setting up...&quot;);&#xD;
this.activityFactory.createExpansionRegionTester(0);&#xD;
this.activityFactory.createExpansionRegionTester(1);&#xD;
this.activityFactory.createExpansionRegionTester(2);&#xD;
&#xD;
Debug.println(&quot;[testExpansionRegion] Testing...&quot;);&#xD;
this.executorTest.testExecute(&quot;ExpansionRegionTester_0&quot;);&#xD;
this.executorTest.testExecute(&quot;ExpansionRegionTester_1&quot;);&#xD;
this.executorTest.testExecute(&quot;ExpansionRegionTester_2&quot;);&#xD;
&#xD;
Debug.println(&quot;[testExpansionRegion] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaGhRBEd-0fNU76fYmlA" name="testLinkCreator">
          <ownedComment xmi:id="_17RaGxRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;[testLinkCreator] Setting up...&quot;);&#xD;
&#xD;
classifierFactory.createClass(&quot;A&quot;);&#xD;
classifierFactory.createClass(&quot;B&quot;);&#xD;
&#xD;
this.environment.removeElement(&quot;AB&quot;);&#xD;
&#xD;
classifierFactory.createAssociation(&quot;AB&quot;);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;a&quot;, &quot;A&quot;, false);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;b&quot;, &quot;B&quot;, false);&#xD;
&#xD;
activityFactory.createLinkCreator(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkCreator] Testing...&quot;);&#xD;
&#xD;
executorTest.testExecute(&quot;ABLinkCreator&quot;);&#xD;
this.environment.printExtent(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkCreator] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaHBRBEd-0fNU76fYmlA" name="testLinkDestroyer">
          <ownedComment xmi:id="_17RaHRRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;[testLinkDestroyer] Setting up...&quot;);&#xD;
&#xD;
classifierFactory.createClass(&quot;A&quot;);&#xD;
classifierFactory.createClass(&quot;B&quot;);&#xD;
&#xD;
this.environment.removeElement(&quot;AB&quot;);&#xD;
&#xD;
classifierFactory.createAssociation(&quot;AB&quot;);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;a&quot;, &quot;A&quot;, false);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;b&quot;, &quot;B&quot;, false);&#xD;
&#xD;
activityFactory.createLinkDestroyer(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkDestroyer] Testing...&quot;);&#xD;
&#xD;
executorTest.testExecute(&quot;ABLinkDestroyer&quot;);&#xD;
this.environment.printExtent(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkDestroyer] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaHhRBEd-0fNU76fYmlA" name="testLinkReader">
          <ownedComment xmi:id="_17RaHxRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;[testLinkReader] Setting up...&quot;);&#xD;
&#xD;
classifierFactory.createClass(&quot;A&quot;);&#xD;
classifierFactory.createClass(&quot;B&quot;);&#xD;
&#xD;
this.environment.removeElement(&quot;AB&quot;);&#xD;
&#xD;
classifierFactory.createAssociation(&quot;AB&quot;);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;a&quot;, &quot;A&quot;, false);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;b&quot;, &quot;B&quot;, false);&#xD;
((Association)this.environment.getElement(&quot;AB&quot;)).memberEnd.getValue(1).multiplicityElement.setIsOrdered(true);&#xD;
&#xD;
activityFactory.createLinkReader(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkReader] Testing...&quot;);&#xD;
&#xD;
executorTest.testExecute(&quot;ABLinkReader&quot;);&#xD;
this.environment.printExtent(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkReader] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaIBRBEd-0fNU76fYmlA" name="testLinkWriter">
          <ownedComment xmi:id="_17RaIRRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;[testLinkWriter] Setting up...&quot;);&#xD;
&#xD;
classifierFactory.createClass(&quot;A&quot;);&#xD;
classifierFactory.createClass(&quot;B&quot;);&#xD;
&#xD;
this.environment.removeElement(&quot;AB&quot;);&#xD;
&#xD;
classifierFactory.createAssociation(&quot;AB&quot;);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;a&quot;, &quot;A&quot;, false);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;b&quot;, &quot;B&quot;, false);&#xD;
((Association)this.environment.getElement(&quot;AB&quot;)).memberEnd.getValue(1).multiplicityElement.setIsOrdered(true);&#xD;
&#xD;
activityFactory.createLinkWriter(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkWriter] Testing...&quot;);&#xD;
&#xD;
executorTest.testExecute(&quot;ABLinkWriter&quot;);&#xD;
this.environment.printExtent(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkWriter] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaIhRBEd-0fNU76fYmlA" name="testLinkRemover">
          <ownedComment xmi:id="_17RaIxRBEd-0fNU76fYmlA">
            <body>Debug.println(&quot;[testLinkRemover] Setting up (unordered end)...&quot;);&#xD;
&#xD;
classifierFactory.createClass(&quot;A&quot;);&#xD;
classifierFactory.createClass(&quot;B&quot;);&#xD;
&#xD;
this.environment.removeElement(&quot;AB&quot;);&#xD;
&#xD;
classifierFactory.createAssociation(&quot;AB&quot;);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;a&quot;, &quot;A&quot;, false);&#xD;
classifierFactory.addEnd(&quot;AB&quot;, &quot;b&quot;, &quot;B&quot;, false);&#xD;
&#xD;
activityFactory.createLinkRemover(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkRemover] Testing (unordered end)...&quot;);&#xD;
&#xD;
executorTest.testExecute(&quot;ABLinkRemover&quot;);&#xD;
this.environment.printExtent(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkRemover] Setting up (ordered end)...&quot;);&#xD;
&#xD;
this.environment.locus.extensionalValues.clear();&#xD;
((Association)this.environment.getElement(&quot;AB&quot;)).memberEnd.getValue(1).multiplicityElement.setIsOrdered(true);&#xD;
((Association)this.environment.getElement(&quot;AB&quot;)).memberEnd.getValue(1).multiplicityElement.setIsUnique(false);&#xD;
&#xD;
this.environment.removeElement(&quot;ABLinkWriter&quot;);&#xD;
this.environment.removeElement(&quot;ABLinkRemover&quot;);&#xD;
activityFactory.createLinkRemover(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkRemover] Testing (ordered end)...&quot;);&#xD;
&#xD;
executorTest.testExecute(&quot;ABLinkRemover&quot;);&#xD;
this.environment.printExtent(&quot;AB&quot;);&#xD;
&#xD;
Debug.println(&quot;[testLinkRemover] Done!&quot;);&#xD;
</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RaJBRBEd-0fNU76fYmlA" name="A_activityFactory_" memberEnd="_17RZ9RRBEd-0fNU76fYmlA _17RaJRRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RaJRRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RZ8hRBEd-0fNU76fYmlA" association="_17RaJBRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RaJhRBEd-0fNU76fYmlA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RaJxRBEd-0fNU76fYmlA"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RaKBRBEd-0fNU76fYmlA" name="A_classifierFactory_" memberEnd="_17RZ-BRBEd-0fNU76fYmlA _17RaKRRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RaKRRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RZ8hRBEd-0fNU76fYmlA" association="_17RaKBRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RaKhRBEd-0fNU76fYmlA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RaKxRBEd-0fNU76fYmlA"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_17RaLBRBEd-0fNU76fYmlA" name="A_executorTest_" memberEnd="_17RZ-xRBEd-0fNU76fYmlA _17RaLRRBEd-0fNU76fYmlA">
        <ownedEnd xmi:id="_17RaLRRBEd-0fNU76fYmlA" name="" visibility="private" type="_17RZ8hRBEd-0fNU76fYmlA" association="_17RaLBRBEd-0fNU76fYmlA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RaLhRBEd-0fNU76fYmlA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RaLxRBEd-0fNU76fYmlA"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_17RaMBRBEd-0fNU76fYmlA" name="Library">
      <packagedElement xmi:type="uml:Class" xmi:id="_17RaMRRBEd-0fNU76fYmlA" name="PrimitiveTypes">
        <ownedAttribute xmi:id="_17RaMhRBEd-0fNU76fYmlA" name="Boolean" type="_17RQYhRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RaMxRBEd-0fNU76fYmlA" name="String" type="_17RQYhRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RaNBRBEd-0fNU76fYmlA" name="Integer" type="_17RQYhRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RaNRRBEd-0fNU76fYmlA" name="UnlimitedNatural" type="_17RQYhRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17RaNhRBEd-0fNU76fYmlA" name="PrimitiveTypes">
          <ownedComment xmi:id="_17RaNxRBEd-0fNU76fYmlA" annotatedElement="_17RaNhRBEd-0fNU76fYmlA">
            <body>this.Boolean = this.createBuiltInType(&quot;Boolean&quot;, factory);&#xD;
this.String = this.createBuiltInType(&quot;String&quot;, factory);&#xD;
this.Integer = this.createBuiltInType(&quot;Integer&quot;, factory);&#xD;
this.UnlimitedNatural = this.createBuiltInType(&quot;UnlimitedNatural&quot;, factory);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RaOBRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RaORRBEd-0fNU76fYmlA" name="createBuiltInType">
          <ownedComment xmi:id="_17RaOhRBEd-0fNU76fYmlA" annotatedElement="_17RaORRBEd-0fNU76fYmlA">
            <body>fUML.Syntax.Classes.Kernel.PrimitiveType type = new fUML.Syntax.Classes.Kernel.PrimitiveType(); &#xD;
type.name = name; &#xD;
factory.addBuiltInType(type);&#xD;
&#xD;
return type;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RaOxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQYhRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RaPBRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RaPRRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RaPhRBEd-0fNU76fYmlA" name="IntegerFunctionImplementation">
        <packagedElement xmi:type="uml:Class" xmi:id="_17RaPxRBEd-0fNU76fYmlA" name="IntegerFunctionBehaviorExecution" isAbstract="true">
          <ownedComment xmi:id="_17RaQBRBEd-0fNU76fYmlA">
            <body>import fUML.Semantics.Classes.Kernel.*;&#xD;
</body>
          </ownedComment>
          <generalization xmi:id="_17RaQRRBEd-0fNU76fYmlA" general="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RaQhRBEd-0fNU76fYmlA" name="doBody">
            <ownedComment xmi:id="_17RaQxRBEd-0fNU76fYmlA" annotatedElement="_17RaQhRBEd-0fNU76fYmlA">
              <body>// Extract integer arguments and perform an integer function on them.&#xD;
&#xD;
intList integerArguments = new intList();&#xD;
&#xD;
for (int i = 0; i &lt; inputParameters.size(); i++) {&#xD;
    int value = ((IntegerValue)(inputParameters.getValue(i)).values.getValue(0)).value;&#xD;
    Debug.println(&quot;[doBody] argument = &quot; + value);&#xD;
    integerArguments.addValue(value);&#xD;
}&#xD;
&#xD;
IntegerValue result = new IntegerValue();&#xD;
result.value = this.doIntegerFunction(integerArguments);&#xD;
&#xD;
Debug.println(&quot;[doBody] result = &quot; + result.value);&#xD;
&#xD;
ValueList values = new ValueList();&#xD;
values.addValue(result);&#xD;
outputParameters.getValue(0).values = values;&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RaRBRBEd-0fNU76fYmlA" name="inputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RaRRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RaRhRBEd-0fNU76fYmlA"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RaRxRBEd-0fNU76fYmlA" name="outputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RaSBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RaSRRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RaShRBEd-0fNU76fYmlA" name="doIntegerFunction" isAbstract="true">
            <ownedParameter xmi:id="_17RaSxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RaTBRBEd-0fNU76fYmlA" name="arguments">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RaTRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RaThRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RaTxRBEd-0fNU76fYmlA" name="IntegerPlusFunctionBehaviorExecution">
          <generalization xmi:id="_17RaUBRBEd-0fNU76fYmlA" general="_17RaPxRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RaURRBEd-0fNU76fYmlA" name="doIntegerFunction">
            <ownedComment xmi:id="_17RaUhRBEd-0fNU76fYmlA" annotatedElement="_17RaURRBEd-0fNU76fYmlA">
              <body>// Compute the integer plus function.&#xD;
&#xD;
// Debug.println(&quot;[doIntegerFunction] arguments[0] = &quot; + arguments.getValue(0) + &quot;, arguments[1] = &quot; + arguments.getValue(1));&#xD;
// Debug.println(&quot;[doIntegerFunction] sum = &quot; + (arguments.getValue(0) + arguments.getValue(1)));&#xD;
&#xD;
return arguments.getValue(0) + arguments.getValue(1);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RaUxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RaVBRBEd-0fNU76fYmlA" name="arguments">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RaVRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RaVhRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RaVxRBEd-0fNU76fYmlA" name="new_">
            <ownedComment xmi:id="_17RaWBRBEd-0fNU76fYmlA" annotatedElement="_17RaVxRBEd-0fNU76fYmlA">
              <body>// Create a new instance of this kind of function behavior execution.&#xD;
&#xD;
return new IntegerPlusFunctionBehaviorExecution();&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RaWRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RaWhRBEd-0fNU76fYmlA" name="IntegerMinusFunctionBehaviorExecution">
          <generalization xmi:id="_17RaWxRBEd-0fNU76fYmlA" general="_17RaPxRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RaXBRBEd-0fNU76fYmlA" name="doIntegerFunction">
            <ownedComment xmi:id="_17RaXRRBEd-0fNU76fYmlA" annotatedElement="_17RaXBRBEd-0fNU76fYmlA">
              <body>// Compute the integer minus function.&#xD;
&#xD;
return arguments.getValue(0) - arguments.getValue(1);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RaXhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RaXxRBEd-0fNU76fYmlA" name="arguments">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RaYBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RaYRRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RaYhRBEd-0fNU76fYmlA" name="new_">
            <ownedComment xmi:id="_17RaYxRBEd-0fNU76fYmlA" annotatedElement="_17RaYhRBEd-0fNU76fYmlA">
              <body>// Create a new instance of this kind of function behavior execution.&#xD;
&#xD;
return new IntegerMinusFunctionBehaviorExecution();&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RaZBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RaZRRBEd-0fNU76fYmlA" name="IntegerTimesFunctionBehaviorExecution">
          <generalization xmi:id="_17RaZhRBEd-0fNU76fYmlA" general="_17RaPxRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RaZxRBEd-0fNU76fYmlA" name="doIntegerFunction">
            <ownedComment xmi:id="_17RaaBRBEd-0fNU76fYmlA" annotatedElement="_17RaZxRBEd-0fNU76fYmlA">
              <body>// Compute the integer times function.&#xD;
&#xD;
return arguments.getValue(0) * arguments.getValue(1);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RaaRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RaahRBEd-0fNU76fYmlA" name="arguments">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RaaxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RabBRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RabRRBEd-0fNU76fYmlA" name="new_">
            <ownedComment xmi:id="_17RabhRBEd-0fNU76fYmlA" annotatedElement="_17RabRRBEd-0fNU76fYmlA">
              <body>// Create a new instance of this kind of function behavior execution.&#xD;
&#xD;
return new IntegerTimesFunctionBehaviorExecution();&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RabxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RacBRBEd-0fNU76fYmlA" name="IntegerDivideFunctionBehaviorExecution">
          <generalization xmi:id="_17RacRRBEd-0fNU76fYmlA" general="_17RaPxRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RachRBEd-0fNU76fYmlA" name="doIntegerFunction">
            <ownedComment xmi:id="_17RacxRBEd-0fNU76fYmlA" annotatedElement="_17RachRBEd-0fNU76fYmlA">
              <body>// Compute the integer divide function.&#xD;
&#xD;
return arguments.getValue(0) / arguments.getValue(1);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RadBRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RadRRBEd-0fNU76fYmlA" name="arguments">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RadhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RadxRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RaeBRBEd-0fNU76fYmlA" name="new_">
            <ownedComment xmi:id="_17RaeRRBEd-0fNU76fYmlA" annotatedElement="_17RaeBRBEd-0fNU76fYmlA">
              <body>// Create a new instance of this kind of function behavior execution.&#xD;
&#xD;
return new IntegerDivideFunctionBehaviorExecution();&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RaehRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RaexRBEd-0fNU76fYmlA" name="IntegerNegateFunctionBehaviorExecution">
          <generalization xmi:id="_17RafBRBEd-0fNU76fYmlA" general="_17RaPxRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RafRRBEd-0fNU76fYmlA" name="doIntegerFunction">
            <ownedComment xmi:id="_17RafhRBEd-0fNU76fYmlA" annotatedElement="_17RafRRBEd-0fNU76fYmlA">
              <body>// Compute the integer plus function.&#xD;
&#xD;
return - arguments.getValue(0);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RafxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RagBRBEd-0fNU76fYmlA" name="arguments">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RagRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RaghRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RagxRBEd-0fNU76fYmlA" name="new_">
            <ownedComment xmi:id="_17RahBRBEd-0fNU76fYmlA" annotatedElement="_17RagxRBEd-0fNU76fYmlA">
              <body>// Create a new instance of this kind of function behavior execution.&#xD;
&#xD;
return new IntegerNegateFunctionBehaviorExecution();&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RahRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RahhRBEd-0fNU76fYmlA" name="IntegerGreaterFunctionBehaviorExecution">
          <ownedComment xmi:id="_17RahxRBEd-0fNU76fYmlA">
            <body>import fUML.Semantics.Classes.Kernel.*;&#xD;
</body>
          </ownedComment>
          <generalization xmi:id="_17RaiBRBEd-0fNU76fYmlA" general="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RaiRRBEd-0fNU76fYmlA" name="doBody">
            <ownedComment xmi:id="_17RaihRBEd-0fNU76fYmlA">
              <body>int value0 =  ((IntegerValue)inputParameters.getValue(0).values.getValue(0)).value;&#xD;
int value1 =  ((IntegerValue)inputParameters.getValue(1).values.getValue(0)).value;&#xD;
&#xD;
BooleanValue result = new BooleanValue();&#xD;
result.value = value0 > value1;&#xD;
&#xD;
Debug.println(&quot;[doBody] result = &quot; + result.value);&#xD;
&#xD;
ValueList values = new ValueList();&#xD;
values.addValue(result);&#xD;
outputParameters.getValue(0).values = values;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RaixRBEd-0fNU76fYmlA" name="inputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RajBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RajRRBEd-0fNU76fYmlA"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RajhRBEd-0fNU76fYmlA" name="outputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RajxRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RakBRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RakRRBEd-0fNU76fYmlA" name="new_">
            <ownedComment xmi:id="_17RakhRBEd-0fNU76fYmlA">
              <body>// Create a new instance of this kind of function behavior execution.&#xD;
&#xD;
return new IntegerGreaterFunctionBehaviorExecution();&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RakxRBEd-0fNU76fYmlA" name="Parameter1" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RalBRBEd-0fNU76fYmlA" name="PrimitiveFunctions" isAbstract="true">
        <ownedComment xmi:id="_17RalRRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="_17RalhRBEd-0fNU76fYmlA" general="_17Ra1xRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17RalxRBEd-0fNU76fYmlA" name="createBinaryOperator" visibility="protected">
          <ownedComment xmi:id="_17RamBRBEd-0fNU76fYmlA" annotatedElement="_17RalxRBEd-0fNU76fYmlA">
            <body>// Create a binary operator for the given type.&#xD;
&#xD;
ParameterList parameters = new ParameterList();&#xD;
parameters.addValue(this.createInputParameter(&quot;first&quot;, type, 1, 1));&#xD;
parameters.addValue(this.createInputParameter(&quot;second&quot;, type, 1, 1));&#xD;
parameters.addValue(this.createReturnParameter(type, 1, 1));&#xD;
&#xD;
return this.createPrimitiveFunction(name, parameters, implementation, factory);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RamRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RONRRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RamhRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RamxRBEd-0fNU76fYmlA" name="type" type="_17RRHRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RanBRBEd-0fNU76fYmlA" name="implementation" type="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RanRRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RanhRBEd-0fNU76fYmlA" name="createUnaryOperator" visibility="protected">
          <ownedComment xmi:id="_17RanxRBEd-0fNU76fYmlA" annotatedElement="_17RanhRBEd-0fNU76fYmlA">
            <body>// Create a unary operator for the given type.&#xD;
&#xD;
ParameterList parameters = new ParameterList();&#xD;
parameters.addValue(this.createInputParameter(&quot;argument&quot;, type, 1, 1));&#xD;
parameters.addValue(this.createReturnParameter(type, 1, 1));&#xD;
&#xD;
return this.createPrimitiveFunction(name, parameters, implementation, factory);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RaoBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RONRRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RaoRRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RaohRBEd-0fNU76fYmlA" name="type" type="_17RRHRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RaoxRBEd-0fNU76fYmlA" name="implementation" type="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RapBRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RapRRBEd-0fNU76fYmlA" name="createComparisonOperator">
          <ownedComment xmi:id="_17RaphRBEd-0fNU76fYmlA">
            <body>// Create a comparison operator for the given type.&#xD;
&#xD;
ParameterList parameters = new ParameterList();&#xD;
parameters.addValue(this.createInputParameter(&quot;first&quot;, type, 1, 1));&#xD;
parameters.addValue(this.createInputParameter(&quot;second&quot;, type, 1, 1));&#xD;
parameters.addValue(this.createReturnParameter(booleanType, 1, 1));&#xD;
&#xD;
return this.createPrimitiveFunction(name, parameters, implementation, factory);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RapxRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RaqBRBEd-0fNU76fYmlA" name="type" type="_17RRHRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RaqRRBEd-0fNU76fYmlA" name="booleanType" type="_17RQYhRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RaqhRBEd-0fNU76fYmlA" name="implementation" type="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RaqxRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RarBRBEd-0fNU76fYmlA" name="Parameter1" type="_17RONRRBEd-0fNU76fYmlA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17RarRRBEd-0fNU76fYmlA" name="createPrimitiveFunction" visibility="protected">
          <ownedComment xmi:id="_17RarhRBEd-0fNU76fYmlA" annotatedElement="_17RarRRBEd-0fNU76fYmlA">
            <body>// Create a primitive function behavior and add its implementation to the given locus.&#xD;
&#xD;
return (FunctionBehavior)(this.addPrimitiveBehavior(name, parameters, new FunctionBehavior(), implementation, factory));&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RarxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RONRRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17RasBRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RasRRBEd-0fNU76fYmlA" name="parameters" type="_17RQQhRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RashRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RasxRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17RatBRBEd-0fNU76fYmlA" name="implementation" type="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RatRRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17RathRBEd-0fNU76fYmlA" name="IntegerFunctions">
        <generalization xmi:id="_17RatxRBEd-0fNU76fYmlA" general="_17RalBRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RauBRBEd-0fNU76fYmlA" name="integerPlus" type="_17RONRRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RauRRBEd-0fNU76fYmlA" name="integerMinus" type="_17RONRRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RauhRBEd-0fNU76fYmlA" name="integerTimes" type="_17RONRRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RauxRBEd-0fNU76fYmlA" name="integerDivide" type="_17RONRRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RavBRBEd-0fNU76fYmlA" name="integerNegate" type="_17RONRRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17RavRRBEd-0fNU76fYmlA" name="integerGreater" visibility="public" type="_17RONRRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17RavhRBEd-0fNU76fYmlA" name="IntegerFunctions">
          <ownedComment xmi:id="_17RavxRBEd-0fNU76fYmlA" annotatedElement="_17RavhRBEd-0fNU76fYmlA">
            <body>this.integerPlus = this.createBinaryOperator(&quot;IntegerPlus&quot;, integerType, new fUML.Library.IntegerFunctionImplementation.IntegerPlusFunctionBehaviorExecution(), factory);&#xD;
this.integerMinus = this.createBinaryOperator(&quot;IntegerMinus&quot;, integerType, new fUML.Library.IntegerFunctionImplementation.IntegerMinusFunctionBehaviorExecution(), factory);&#xD;
this.integerTimes = this.createBinaryOperator(&quot;IntegerTimes&quot;, integerType, new fUML.Library.IntegerFunctionImplementation.IntegerTimesFunctionBehaviorExecution(), factory);&#xD;
this.integerDivide = this.createBinaryOperator(&quot;IntegerDivide&quot;, integerType, new fUML.Library.IntegerFunctionImplementation.IntegerDivideFunctionBehaviorExecution(), factory);&#xD;
this.integerNegate = this.createUnaryOperator(&quot;IntegerNegate&quot;, integerType, new fUML.Library.IntegerFunctionImplementation.IntegerNegateFunctionBehaviorExecution(), factory);&#xD;
this.integerGreater = this.createComparisonOperator(&quot;IntegerGreater&quot;, integerType, booleanType, new fUML.Library.IntegerFunctionImplementation.IntegerGreaterFunctionBehaviorExecution(), factory);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17RawBRBEd-0fNU76fYmlA" name="integerType" type="_17RQYhRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RawRRBEd-0fNU76fYmlA" name="booleanType" type="_17RQYhRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RawhRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RawxRBEd-0fNU76fYmlA" name="SystemIOImplementation">
        <packagedElement xmi:type="uml:Class" xmi:id="_17RaxBRBEd-0fNU76fYmlA" name="SystemWriteLineBehaviorExecution">
          <generalization xmi:id="_17RaxRRBEd-0fNU76fYmlA" general="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RaxhRBEd-0fNU76fYmlA" name="doBody">
            <ownedComment xmi:id="_17RaxxRBEd-0fNU76fYmlA" annotatedElement="_17RaxhRBEd-0fNU76fYmlA">
              <body>// Print the string representation all values of the first input parameter.&#xD;
&#xD;
fUML.Semantics.Classes.Kernel.ValueList values = inputParameters.getValue(0).values;&#xD;
&#xD;
for (int i = 0; i &lt; values.size(); i++) {&#xD;
//    Debug.println(&quot;>>>>>>>> &quot; + values.getValue(i));&#xD;
    fUML.Library.ChannelImplementation.StandardOutputChannelObject standardOutput = new fUML.Library.ChannelImplementation.StandardOutputChannelObject();&#xD;
    standardOutput.open();&#xD;
    standardOutput.writeLine(values.getValue(i).toString());&#xD;
}&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RayBRBEd-0fNU76fYmlA" name="inputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RayRRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RayhRBEd-0fNU76fYmlA"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17RayxRBEd-0fNU76fYmlA" name="outputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17RazBRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17RazRRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RazhRBEd-0fNU76fYmlA" name="new_">
            <ownedComment xmi:id="_17RazxRBEd-0fNU76fYmlA" annotatedElement="_17RazhRBEd-0fNU76fYmlA">
              <body>// Create a new execution object.&#xD;
&#xD;
return new SystemWriteLineBehaviorExecution();&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17Ra0BRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17Ra0RRBEd-0fNU76fYmlA" name="SystemIO">
        <generalization xmi:id="_17Ra0hRBEd-0fNU76fYmlA" general="_17Ra1xRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17Ra0xRBEd-0fNU76fYmlA" name="WriteLine" type="_17ROIRRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17Ra1BRBEd-0fNU76fYmlA" name="SystemIO">
          <ownedComment xmi:id="_17Ra1RRBEd-0fNU76fYmlA" annotatedElement="_17Ra1BRBEd-0fNU76fYmlA">
            <body>fUML.Syntax.Classes.Kernel.ParameterList parameters = new fUML.Syntax.Classes.Kernel.ParameterList();&#xD;
parameters.addValue(this.createInputParameter(&quot;value&quot;, null, 1, 1));&#xD;
this.WriteLine = this.createPrimitiveBehavior(&quot;WriteLine&quot;, parameters, new fUML.Library.SystemIOImplementation.SystemWriteLineBehaviorExecution(), factory);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17Ra1hRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17Ra1xRBEd-0fNU76fYmlA" name="PrimitiveBehaviors" isAbstract="true">
        <ownedComment xmi:id="_17Ra2BRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
        </ownedComment>
        <ownedOperation xmi:id="_17Ra2RRBEd-0fNU76fYmlA" name="createPrimitiveBehavior" visibility="protected">
          <ownedComment xmi:id="_17Ra2hRBEd-0fNU76fYmlA" annotatedElement="_17Ra2RRBEd-0fNU76fYmlA">
            <body>// Create a primitive (opaque) behavior and add its implementation to the given factory.&#xD;
&#xD;
return this.addPrimitiveBehavior(name, parameters, new OpaqueBehavior(), implementation, factory);&#xD;
&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17Ra2xRBEd-0fNU76fYmlA" name="ReturnResult" type="_17ROIRRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17Ra3BRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra3RRBEd-0fNU76fYmlA" name="parameters" type="_17RQQhRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17Ra3hRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17Ra3xRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra4BRBEd-0fNU76fYmlA" name="implementation" type="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17Ra4RRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17Ra4hRBEd-0fNU76fYmlA" name="createInputParameter" visibility="protected">
          <ownedComment xmi:id="_17Ra4xRBEd-0fNU76fYmlA" annotatedElement="_17Ra4hRBEd-0fNU76fYmlA">
            <body>// Create an input parameter with the given name, type and multiplicity bounds.&#xD;
&#xD;
Parameter parameter = new Parameter();&#xD;
parameter.name = name;&#xD;
parameter.type = type;&#xD;
parameter.direction = ParameterDirectionKind.in;&#xD;
parameter.multiplicityElement = new MultiplicityElement();&#xD;
this.setMultiplicity(parameter.multiplicityElement, lower, upper);&#xD;
&#xD;
return parameter;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17Ra5BRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQQhRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17Ra5RRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra5hRBEd-0fNU76fYmlA" name="type" type="_17RRHRRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17Ra5xRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17Ra6BRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra6RRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra6hRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17Ra6xRBEd-0fNU76fYmlA" name="createReturnParameter" visibility="protected">
          <ownedComment xmi:id="_17Ra7BRBEd-0fNU76fYmlA" annotatedElement="_17Ra6xRBEd-0fNU76fYmlA">
            <body>// Create a return parameter with the given type and multiplicity bounds.&#xD;
&#xD;
Parameter parameter = new Parameter();&#xD;
parameter.name = &quot;result&quot;;&#xD;
parameter.type = type;&#xD;
parameter.direction = ParameterDirectionKind.return_;&#xD;
parameter.multiplicityElement = new MultiplicityElement();&#xD;
this.setMultiplicity(parameter.multiplicityElement, lower, upper);&#xD;
&#xD;
return parameter;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17Ra7RRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQQhRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17Ra7hRBEd-0fNU76fYmlA" name="type" type="_17RRHRRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17Ra7xRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17Ra8BRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra8RRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra8hRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17Ra8xRBEd-0fNU76fYmlA" name="setMultiplicity" visibility="protected">
          <ownedComment xmi:id="_17Ra9BRBEd-0fNU76fYmlA" annotatedElement="_17Ra8xRBEd-0fNU76fYmlA">
            <body>UnlimitedNatural unlimitedNatural = new UnlimitedNatural();&#xD;
unlimitedNatural.naturalValue = upper;&#xD;
&#xD;
element.lower = lower;&#xD;
element.upper = unlimitedNatural;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17Ra9RRBEd-0fNU76fYmlA" name="element" type="_17RPeRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17Ra9hRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra9xRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17Ra-BRBEd-0fNU76fYmlA" name="addPrimitiveBehavior" visibility="protected">
          <ownedComment xmi:id="_17Ra-RRBEd-0fNU76fYmlA" annotatedElement="_17Ra-BRBEd-0fNU76fYmlA">
            <body>// Add a primitive function to the given locus.&#xD;
&#xD;
// Debug.println(&quot;[addPrimitiveFunction] name = &quot; + name);&#xD;
&#xD;
type.name = name;&#xD;
type.ownedParameter = parameters;&#xD;
&#xD;
// Debug.println(&quot;[addPrimitiveFunction] Adding implementation...&quot;);&#xD;
&#xD;
implementation.types.addValue(type);&#xD;
factory.addPrimitiveBehaviorPrototype(implementation);&#xD;
&#xD;
return type;&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17Ra-hRBEd-0fNU76fYmlA" name="ReturnResult" type="_17ROIRRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17Ra-xRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra_BRBEd-0fNU76fYmlA" name="parameters" type="_17RQQhRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17Ra_RRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17Ra_hRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17Ra_xRBEd-0fNU76fYmlA" name="type" type="_17ROIRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RbABRBEd-0fNU76fYmlA" name="implementation" type="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17RbARRBEd-0fNU76fYmlA" name="factory" type="_17RNrBRBEd-0fNU76fYmlA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17RbAhRBEd-0fNU76fYmlA" name="ChannelImplementation">
        <packagedElement xmi:type="uml:Class" xmi:id="_17RbAxRBEd-0fNU76fYmlA" name="ChannelObject" isAbstract="true">
          <ownedComment xmi:id="_17RbBBRBEd-0fNU76fYmlA">
            <body>import fUML.Semantics.Classes.Kernel.*;&#xD;
</body>
          </ownedComment>
          <generalization xmi:id="_17RbBRRBEd-0fNU76fYmlA" general="_17aRXBRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RbBhRBEd-0fNU76fYmlA" name="getName" isAbstract="true">
            <ownedParameter xmi:id="_17RbBxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RbCBRBEd-0fNU76fYmlA" name="open" isAbstract="true"/>
          <ownedOperation xmi:id="_17RbCRRBEd-0fNU76fYmlA" name="close" isAbstract="true"/>
          <ownedOperation xmi:id="_17RbChRBEd-0fNU76fYmlA" name="isOpen" isAbstract="true">
            <ownedParameter xmi:id="_17RbCxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RbDBRBEd-0fNU76fYmlA" name="execute">
            <ownedComment xmi:id="_17RbDRRBEd-0fNU76fYmlA" annotatedElement="_17RbDBRBEd-0fNU76fYmlA">
              <body>String name = execution.getOperationName();&#xD;
&#xD;
if (name.equals(&quot;getName&quot;)) {&#xD;
    StringValue nameValue = new StringValue();&#xD;
    nameValue.value = this.getName();&#xD;
    execution.setParameterValue(&quot;result&quot;, nameValue);&#xD;
}&#xD;
else if (name.equals(&quot;open&quot;)) {&#xD;
    this.open();&#xD;
}&#xD;
else if (name.equals(&quot;close&quot;)) {&#xD;
    this.close();&#xD;
}&#xD;
else if (name.equals(&quot;isOpen&quot;)) {&#xD;
    BooleanValue isOpenValue = new BooleanValue();&#xD;
    isOpenValue.value = this.isOpen();&#xD;
    execution.setParameterValue(&quot;result&quot;, isOpenValue);&#xD;
}&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RbDhRBEd-0fNU76fYmlA" name="execution" type="_17aROxRBEd-0fNU76fYmlA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RbDxRBEd-0fNU76fYmlA" name="OutputChannelObject" isAbstract="true">
          <ownedComment xmi:id="_17RbEBRBEd-0fNU76fYmlA">
            <body>import fUML.Semantics.Classes.Kernel.*;&#xD;
</body>
          </ownedComment>
          <generalization xmi:id="_17RbERRBEd-0fNU76fYmlA" general="_17RbAxRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RbEhRBEd-0fNU76fYmlA" name="write" isAbstract="true">
            <ownedParameter xmi:id="_17RbExRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17RbFBRBEd-0fNU76fYmlA" name="isFull" isAbstract="true">
            <ownedParameter xmi:id="_17RbFRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RbFhRBEd-0fNU76fYmlA" name="execute">
            <ownedComment xmi:id="_17RbFxRBEd-0fNU76fYmlA" annotatedElement="_17RbFhRBEd-0fNU76fYmlA">
              <body>String name = execution.getOperationName();&#xD;
&#xD;
if (name.equals(&quot;write&quot;)) {&#xD;
    this.write(execution.getParameterValue(&quot;value&quot;).values.getValue(0));&#xD;
}&#xD;
else if (name.equals(&quot;isFull&quot;)) {&#xD;
    BooleanValue isFullValue = new BooleanValue();&#xD;
    isFullValue.value = this.isFull();&#xD;
    execution.setParameterValue(&quot;result&quot;, isFullValue);&#xD;
}&#xD;
else {&#xD;
    super.execute(execution);&#xD;
}&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RbGBRBEd-0fNU76fYmlA" name="execution" type="_17aROxRBEd-0fNU76fYmlA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17RbGRRBEd-0fNU76fYmlA" name="TextOutputChannelObject" isAbstract="true">
          <ownedComment xmi:id="_17RbGhRBEd-0fNU76fYmlA">
            <body>import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
          </ownedComment>
          <generalization xmi:id="_17RbGxRBEd-0fNU76fYmlA" general="_17RbDxRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17RbHBRBEd-0fNU76fYmlA" name="writeString" isAbstract="true">
            <ownedParameter xmi:id="_17RbHRRBEd-0fNU76fYmlA" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RbHhRBEd-0fNU76fYmlA" name="writeNewLine" isAbstract="true"/>
          <ownedOperation xmi:id="_17RbHxRBEd-0fNU76fYmlA" name="writeLine">
            <ownedComment xmi:id="_17RbIBRBEd-0fNU76fYmlA" annotatedElement="_17RbHxRBEd-0fNU76fYmlA">
              <body>this.writeString(value);&#xD;
this.writeNewLine();&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RbIRRBEd-0fNU76fYmlA" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RbIhRBEd-0fNU76fYmlA" name="writeInteger">
            <ownedComment xmi:id="_17RbIxRBEd-0fNU76fYmlA" annotatedElement="_17RbIhRBEd-0fNU76fYmlA">
              <body>this.writeString(Integer.toString(value));</body>
            </ownedComment>
            <ownedParameter xmi:id="_17RbJBRBEd-0fNU76fYmlA" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17RbJRRBEd-0fNU76fYmlA" name="writeBoolean">
            <ownedComment xmi:id="_17RbJhRBEd-0fNU76fYmlA" annotatedElement="_17RbJRRBEd-0fNU76fYmlA">
              <body>this.writeString(Boolean.toString(value));&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQoBRBEd-0fNU76fYmlA" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQoRRBEd-0fNU76fYmlA" name="writeUnlimitedNatural">
            <ownedComment xmi:id="_17aQohRBEd-0fNU76fYmlA" annotatedElement="_17aQoRRBEd-0fNU76fYmlA">
              <body>int naturalValue = value.naturalValue;&#xD;
&#xD;
if (naturalValue &lt; 0) {&#xD;
    this.writeString(&quot;*&quot;);&#xD;
}&#xD;
else {&#xD;
    this.writeString(Integer.toString(naturalValue));&#xD;
}&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQoxRBEd-0fNU76fYmlA" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQpBRBEd-0fNU76fYmlA" name="execute">
            <ownedComment xmi:id="_17aQpRRBEd-0fNU76fYmlA" annotatedElement="_17aQpBRBEd-0fNU76fYmlA">
              <body>String name = execution.getOperationName();&#xD;
// Debug.println(&quot;[execute] operation = &quot; + name);&#xD;
&#xD;
ParameterValue parameterValue = execution.getParameterValue(&quot;value&quot;);&#xD;
// if ((parameterValue != null) &amp;&amp; (parameterValue.values.size() > 0)) {&#xD;
//    Debug.println(&quot;[execute] argument = &quot; + parameterValue.values.getValue(0));&#xD;
// }&#xD;
&#xD;
if (name.equals(&quot;writeNewLine&quot;)) {&#xD;
    this.writeNewLine();&#xD;
}&#xD;
else if (name.equals(&quot;writeString&quot;)) {&#xD;
    this.writeString(((StringValue)(parameterValue.values.getValue(0))).value);&#xD;
}&#xD;
else if (name.equals(&quot;writeLine&quot;)) {&#xD;
    this.writeLine(((StringValue)(parameterValue.values.getValue(0))).value);&#xD;
}&#xD;
else if (name.equals(&quot;writeInteger&quot;)) {&#xD;
    this.writeInteger(((IntegerValue)(parameterValue.values.getValue(0))).value);&#xD;
}&#xD;
else if (name.equals(&quot;writeBoolean&quot;)) {&#xD;
    this.writeBoolean(((BooleanValue)(parameterValue.values.getValue(0))).value);&#xD;
}&#xD;
else if (name.equals(&quot;writeUnlimitedNatural&quot;)) {&#xD;
    this.writeUnlimitedNatural(((UnlimitedNaturalValue)(parameterValue.values.getValue(0))).value);&#xD;
}&#xD;
else {&#xD;
    super.execute(execution);&#xD;
}&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQphRBEd-0fNU76fYmlA" name="execution" type="_17aROxRBEd-0fNU76fYmlA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17aQpxRBEd-0fNU76fYmlA" name="StandardOutputChannelObject">
          <generalization xmi:id="_17aQqBRBEd-0fNU76fYmlA" general="_17RbGRRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aQqRRBEd-0fNU76fYmlA" name="opened" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_17aQqhRBEd-0fNU76fYmlA" name="writeLine">
            <ownedComment xmi:id="_17aQqxRBEd-0fNU76fYmlA" annotatedElement="_17aQqhRBEd-0fNU76fYmlA">
              <body>this.writeString(value);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQrBRBEd-0fNU76fYmlA" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQrRRBEd-0fNU76fYmlA" name="getName">
            <ownedComment xmi:id="_17aQrhRBEd-0fNU76fYmlA" annotatedElement="_17aQrRRBEd-0fNU76fYmlA">
              <body>return &quot;StandardOutput&quot;;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQrxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQsBRBEd-0fNU76fYmlA" name="open">
            <ownedComment xmi:id="_17aQsRRBEd-0fNU76fYmlA" annotatedElement="_17aQsBRBEd-0fNU76fYmlA">
              <body>this.opened = true;&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQshRBEd-0fNU76fYmlA" name="close">
            <ownedComment xmi:id="_17aQsxRBEd-0fNU76fYmlA" annotatedElement="_17aQshRBEd-0fNU76fYmlA">
              <body>this.opened = false;&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQtBRBEd-0fNU76fYmlA" name="isOpen">
            <ownedComment xmi:id="_17aQtRRBEd-0fNU76fYmlA" annotatedElement="_17aQtBRBEd-0fNU76fYmlA">
              <body>return opened;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQthRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQtxRBEd-0fNU76fYmlA" name="write">
            <ownedComment xmi:id="_17aQuBRBEd-0fNU76fYmlA" annotatedElement="_17aQtxRBEd-0fNU76fYmlA">
              <body>this.writeString(value.toString());</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQuRRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQuhRBEd-0fNU76fYmlA" name="writeString">
            <ownedComment xmi:id="_17aQuxRBEd-0fNU76fYmlA" annotatedElement="_17aQuhRBEd-0fNU76fYmlA">
              <body>if (this.isOpen()) {&#xD;
    Debug.println(&quot;>>>>>>>> &quot; + value);&#xD;
}&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQvBRBEd-0fNU76fYmlA" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQvRRBEd-0fNU76fYmlA" name="writeNewLine">
            <ownedComment xmi:id="_17aQvhRBEd-0fNU76fYmlA" annotatedElement="_17aQvRRBEd-0fNU76fYmlA">
              <body>this.writeLine(&quot;&quot;);&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQvxRBEd-0fNU76fYmlA" name="new_">
            <ownedComment xmi:id="_17aQwBRBEd-0fNU76fYmlA" annotatedElement="_17aQvxRBEd-0fNU76fYmlA">
              <body>return (fUML.Semantics.Classes.Kernel.Value)(new StandardOutputChannelObject());&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQwRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQwhRBEd-0fNU76fYmlA" name="isFull">
            <ownedComment xmi:id="_17aQwxRBEd-0fNU76fYmlA" annotatedElement="_17aQwhRBEd-0fNU76fYmlA">
              <body>return false;</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQxBRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17aQxRRBEd-0fNU76fYmlA" name="InputChannelObject" isAbstract="true">
          <ownedComment xmi:id="_17aQxhRBEd-0fNU76fYmlA">
            <body>import fUML.Semantics.Classes.Kernel.*;&#xD;
</body>
          </ownedComment>
          <generalization xmi:id="_17aQxxRBEd-0fNU76fYmlA" general="_17RbAxRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17aQyBRBEd-0fNU76fYmlA" name="hasMore" isAbstract="true">
            <ownedParameter xmi:id="_17aQyRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQyhRBEd-0fNU76fYmlA" name="read" isAbstract="true">
            <ownedParameter xmi:id="_17aQyxRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aQzBRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aQzRRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQzhRBEd-0fNU76fYmlA" name="execute">
            <ownedComment xmi:id="_17aQzxRBEd-0fNU76fYmlA" annotatedElement="_17aQzhRBEd-0fNU76fYmlA">
              <body>String name = execution.getOperationName();&#xD;
&#xD;
if (name.equals(&quot;hasMore&quot;)) { &#xD;
    BooleanValue hasMoreValue = new BooleanValue();&#xD;
    hasMoreValue.value = this.hasMore();&#xD;
    execution.setParameterValue(&quot;result&quot;, hasMoreValue);&#xD;
}&#xD;
else if (name.equals(&quot;read&quot;)) {&#xD;
    execution.setParameterValue(&quot;value&quot;, this.read());&#xD;
}&#xD;
else {&#xD;
    super.execute(execution);&#xD;
}&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aQ0BRBEd-0fNU76fYmlA" name="execution" type="_17aROxRBEd-0fNU76fYmlA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17aQ0RRBEd-0fNU76fYmlA" name="StandardOutputWriteExecution">
          <generalization xmi:id="_17aQ0hRBEd-0fNU76fYmlA" general="_17RMTBRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17aQ0xRBEd-0fNU76fYmlA" name="doBody">
            <ownedParameter xmi:id="_17aQ1BRBEd-0fNU76fYmlA" name="inputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aQ1RRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aQ1hRBEd-0fNU76fYmlA"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17aQ1xRBEd-0fNU76fYmlA" name="outputParameters" type="_17RMPxRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aQ2BRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aQ2RRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aQ2hRBEd-0fNU76fYmlA" name="new_">
            <ownedParameter xmi:id="_17aQ2xRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_17aQ3BRBEd-0fNU76fYmlA" name="Standard Output Write Implementation">
          <ownedBehavior xmi:type="uml:Interaction" xmi:id="_17aQ3RRBEd-0fNU76fYmlA" name="Interaction1">
            <ownedConnector xmi:id="_17aQ3hRBEd-0fNU76fYmlA">
              <end xmi:id="_17aQ3xRBEd-0fNU76fYmlA" role="_17aQ8hRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aQ4BRBEd-0fNU76fYmlA" role="_17aQ8xRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <ownedConnector xmi:id="_17aQ4RRBEd-0fNU76fYmlA">
              <end xmi:id="_17aQ4hRBEd-0fNU76fYmlA" role="_17aQ8xRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aQ4xRBEd-0fNU76fYmlA" role="_17aQ9RRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <ownedConnector xmi:id="_17aQ5BRBEd-0fNU76fYmlA">
              <end xmi:id="_17aQ5RRBEd-0fNU76fYmlA" role="_17aQ9BRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aQ5hRBEd-0fNU76fYmlA" role="_17aQ9RRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <ownedConnector xmi:id="_17aQ5xRBEd-0fNU76fYmlA">
              <end xmi:id="_17aQ6BRBEd-0fNU76fYmlA" role="_17aQ9hRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aQ6RRBEd-0fNU76fYmlA" role="_17aQ8hRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <ownedConnector xmi:id="_17aQ6hRBEd-0fNU76fYmlA">
              <end xmi:id="_17aQ6xRBEd-0fNU76fYmlA" role="_17aQ9hRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aQ7BRBEd-0fNU76fYmlA" role="_17aQ9BRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <lifeline xmi:id="_17aQ7RRBEd-0fNU76fYmlA" name="class_" represents="_17aQ8hRBEd-0fNU76fYmlA"/>
            <lifeline xmi:id="_17aQ7hRBEd-0fNU76fYmlA" name="operation" represents="_17aQ8xRBEd-0fNU76fYmlA"/>
            <lifeline xmi:id="_17aQ7xRBEd-0fNU76fYmlA" name="standardOutputWriteImplementation" represents="_17aQ9BRBEd-0fNU76fYmlA"/>
            <lifeline xmi:id="_17aQ8BRBEd-0fNU76fYmlA" name="opaqueBehavior" represents="_17aQ9RRBEd-0fNU76fYmlA"/>
            <lifeline xmi:id="_17aQ8RRBEd-0fNU76fYmlA" name="object_" represents="_17aQ9hRBEd-0fNU76fYmlA"/>
          </ownedBehavior>
          <ownedAttribute xmi:id="_17aQ8hRBEd-0fNU76fYmlA" type="_17RQ2RRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aQ8xRBEd-0fNU76fYmlA" type="_17RP6RRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aQ9BRBEd-0fNU76fYmlA" type="_17aQ0RRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aQ9RRBEd-0fNU76fYmlA" type="_17ROIRRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aQ9hRBEd-0fNU76fYmlA" type="_17RKphRBEd-0fNU76fYmlA"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17aQ9xRBEd-0fNU76fYmlA" name="Classes">
        <ownedComment xmi:id="_17aQ-BRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.Classes.Kernel.*;&#xD;
</body>
        </ownedComment>
        <ownedOperation xmi:id="_17aQ-RRBEd-0fNU76fYmlA" name="createClass" visibility="protected">
          <ownedComment xmi:id="_17aQ-hRBEd-0fNU76fYmlA" annotatedElement="_17aQ-RRBEd-0fNU76fYmlA">
            <body>Class_ newClass = new Class_();&#xD;
newClass.name = name;&#xD;
newClass.isAbstract = isAbstract;&#xD;
&#xD;
return newClass;&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aQ-xRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQ2RRBEd-0fNU76fYmlA" direction="return"/>
          <ownedParameter xmi:id="_17aQ_BRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17aQ_RRBEd-0fNU76fYmlA" name="isAbstract">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17aQ_hRBEd-0fNU76fYmlA" name="addAttribute" visibility="protected">
          <ownedComment xmi:id="_17aQ_xRBEd-0fNU76fYmlA" annotatedElement="_17aQ_hRBEd-0fNU76fYmlA">
            <body>&#xD;
Property attribute = new Property();&#xD;
attribute.name = name;&#xD;
attribute.typedElement = new TypedElement();&#xD;
attribute.typedElement.type = type;&#xD;
attribute.multiplicityElement = new MultiplicityElement();&#xD;
this.setMultiplicity(attribute.multiplicityElement, 1, 1);&#xD;
&#xD;
if (visibility == null) {&#xD;
    attribute.visibility = VisibilityKind.public_;&#xD;
}&#xD;
else {&#xD;
    attribute.visibility = visibility;&#xD;
}&#xD;
&#xD;
attribute.isComposite = isComposite;&#xD;
if (isComposite) {&#xD;
    attribute.aggregation = AggregationKind.composite;&#xD;
}&#xD;
else {&#xD;
    attribute.aggregation = AggregationKind.none;&#xD;
}&#xD;
&#xD;
attribute.featuringClassifier.addValue(owner);&#xD;
attribute.namespace = owner;&#xD;
&#xD;
owner.ownedAttribute.addValue(attribute);&#xD;
owner.attribute.addValue(attribute);&#xD;
owner.feature.addValue(attribute);&#xD;
owner.ownedMember.addValue(attribute);&#xD;
owner.member.addValue(attribute);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRABRBEd-0fNU76fYmlA" name="owner" type="_17RQ2RRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17aRARRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17aRAhRBEd-0fNU76fYmlA" name="type" type="_17RQrxRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17aRAxRBEd-0fNU76fYmlA" name="visibility" type="_17RQ0xRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aRBBRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aRBRRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17aRBhRBEd-0fNU76fYmlA" name="isComposite">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17aRBxRBEd-0fNU76fYmlA" name="addOperation" visibility="protected">
          <ownedComment xmi:id="_17aRCBRBEd-0fNU76fYmlA" annotatedElement="_17aRBxRBEd-0fNU76fYmlA">
            <body>Operation operation = new Operation();&#xD;
operation.name = name;&#xD;
operation.featuringClassifier.addValue(owner);&#xD;
operation.namespace = owner;&#xD;
&#xD;
if (visibility == null) {&#xD;
    operation.visibility = VisibilityKind.public_;&#xD;
}&#xD;
else {&#xD;
   operation.visibility = visibility;&#xD;
}&#xD;
&#xD;
owner.ownedOperation.addValue(operation);&#xD;
owner.feature.addValue(operation);&#xD;
owner.ownedMember.addValue(operation);&#xD;
owner.member.addValue(operation);&#xD;
&#xD;
return operation;</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRCRRBEd-0fNU76fYmlA" name="owner" type="_17RQ2RRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17aRChRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17aRCxRBEd-0fNU76fYmlA" name="visibility" type="_17RQ0xRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aRDBRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aRDRRBEd-0fNU76fYmlA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17aRDhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RP6RRBEd-0fNU76fYmlA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17aRDxRBEd-0fNU76fYmlA" name="addParameter" visibility="protected">
          <ownedComment xmi:id="_17aREBRBEd-0fNU76fYmlA" annotatedElement="_17aRDxRBEd-0fNU76fYmlA">
            <body>Parameter parameter = new Parameter();&#xD;
parameter.name = name;&#xD;
parameter.type = type;&#xD;
parameter.direction = direction;&#xD;
parameter.multiplicityElement = new MultiplicityElement();&#xD;
this.setMultiplicity(parameter.multiplicityElement, 1, 1);&#xD;
&#xD;
operation.ownedParameter.addValue(parameter);&#xD;
&#xD;
if (direction.equals(ParameterDirectionKind.return_)) {&#xD;
    operation.type = type;&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRERRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17aREhRBEd-0fNU76fYmlA" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17aRExRBEd-0fNU76fYmlA" name="direction" type="_17RQyBRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17aRFBRBEd-0fNU76fYmlA" name="type" type="_17RQrxRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aRFRRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aRFhRBEd-0fNU76fYmlA"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17aRFxRBEd-0fNU76fYmlA" name="setMultiplicity" visibility="protected">
          <ownedComment xmi:id="_17aRGBRBEd-0fNU76fYmlA" annotatedElement="_17aRFxRBEd-0fNU76fYmlA">
            <body>UnlimitedNatural unlimitedNatural = new UnlimitedNatural();&#xD;
unlimitedNatural.naturalValue = upper;&#xD;
&#xD;
element.lower = lower;&#xD;
element.upper = unlimitedNatural;&#xD;
element.isOrdered = false;&#xD;
element.isUnique = true;</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRGRRBEd-0fNU76fYmlA" name="element" type="_17RPeRRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17aRGhRBEd-0fNU76fYmlA" name="lower">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_17aRGxRBEd-0fNU76fYmlA" name="upper">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_17aRHBRBEd-0fNU76fYmlA" name="addGeneralization" visibility="protected">
          <ownedComment xmi:id="_17aRHRRBEd-0fNU76fYmlA" annotatedElement="_17aRHBRBEd-0fNU76fYmlA">
            <body>Generalization generalization = new Generalization();&#xD;
generalization.specific = specific;&#xD;
generalization.general = general;&#xD;
&#xD;
specific.generalization.addValue(generalization);&#xD;
specific.general.addValue(general);&#xD;
specific.superClass.addValue(general);&#xD;
&#xD;
for (int i = 0; i &lt; general.member.size(); i++) {&#xD;
    NamedElement member = general.member.getValue(i);&#xD;
    if (member.visibility != VisibilityKind.private_) {&#xD;
        specific.member.addValue(member);&#xD;
        specific.inheritedMember.addValue(member);&#xD;
        if (member instanceof Feature) {&#xD;
            specific.feature.addValue((Feature)member);&#xD;
            ((Feature)member).featuringClassifier.addValue(specific);&#xD;
        }&#xD;
    }&#xD;
}&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRHhRBEd-0fNU76fYmlA" name="specific" type="_17RQ2RRBEd-0fNU76fYmlA"/>
          <ownedParameter xmi:id="_17aRHxRBEd-0fNU76fYmlA" name="general" type="_17RQ2RRBEd-0fNU76fYmlA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_17aRIBRBEd-0fNU76fYmlA" name="StandardIOClasses">
        <ownedComment xmi:id="_17aRIRRBEd-0fNU76fYmlA">
          <body>import fUML.Syntax.Classes.Kernel.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="_17aRIhRBEd-0fNU76fYmlA" general="_17aQ9xRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17aRIxRBEd-0fNU76fYmlA" name="Channel" type="_17RQ2RRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17aRJBRBEd-0fNU76fYmlA" name="OutputChannel" type="_17RQ2RRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17aRJRRBEd-0fNU76fYmlA" name="TextOutputChannel" type="_17RQ2RRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17aRJhRBEd-0fNU76fYmlA" name="StandardOutputChannel" type="_17RQ2RRBEd-0fNU76fYmlA"/>
        <ownedAttribute xmi:id="_17aRJxRBEd-0fNU76fYmlA" name="InputChannel" type="_17RQ2RRBEd-0fNU76fYmlA"/>
        <ownedOperation xmi:id="_17aRKBRBEd-0fNU76fYmlA" name="StandardIOClasses">
          <ownedComment xmi:id="_17aRKRRBEd-0fNU76fYmlA" annotatedElement="_17aRKBRBEd-0fNU76fYmlA">
            <body>this.createChannelClass(primitiveTypes);&#xD;
this.createOutputChannelClass(primitiveTypes);&#xD;
this.createTextOutputChannelClass(primitiveTypes);&#xD;
this.createStandardOutputChannelClass(primitiveTypes);&#xD;
this.createInputChannelClass(primitiveTypes);&#xD;
&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRKhRBEd-0fNU76fYmlA" name="primitiveTypes" type="_17RaMRRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17aRKxRBEd-0fNU76fYmlA" name="createChannelClass">
          <ownedComment xmi:id="_17aRLBRBEd-0fNU76fYmlA" annotatedElement="_17aRKxRBEd-0fNU76fYmlA">
            <body>// MexSystem.println(&quot;[createChannelClass] Start...&quot;);&#xD;
&#xD;
this.Channel = this.createClass(&quot;Channel&quot;, true);&#xD;
&#xD;
Operation getNameOperation = this.addOperation(this.Channel, &quot;getName&quot;, null);&#xD;
this.addParameter(getNameOperation, &quot;result&quot;, ParameterDirectionKind.return_, primitiveTypes.String);&#xD;
&#xD;
this.addOperation(this.Channel, &quot;open&quot;, null);&#xD;
this.addOperation(this.Channel, &quot;close&quot;, null);&#xD;
&#xD;
Operation isOpenOperation = this.addOperation(this.Channel, &quot;isOpen&quot;, null);&#xD;
this.addParameter(isOpenOperation, &quot;result&quot;, ParameterDirectionKind.return_, primitiveTypes.Boolean);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRLRRBEd-0fNU76fYmlA" name="primitiveTypes" type="_17RaMRRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17aRLhRBEd-0fNU76fYmlA" name="createOutputChannelClass">
          <ownedComment xmi:id="_17aRLxRBEd-0fNU76fYmlA" annotatedElement="_17aRLhRBEd-0fNU76fYmlA">
            <body>// MexSystem.println(&quot;[createOutputChannelClass] Start...&quot;);&#xD;
&#xD;
this.OutputChannel = this.createClass(&quot;OutputChannel&quot;, true);&#xD;
this.addGeneralization(this.OutputChannel, this.Channel);&#xD;
&#xD;
Operation writeOperation = this.addOperation(this.OutputChannel, &quot;write&quot;, null);&#xD;
this.addParameter(writeOperation, &quot;value&quot;, ParameterDirectionKind.in, null);&#xD;
&#xD;
Operation isFullOperation = this.addOperation(this.OutputChannel, &quot;isFull&quot;, null);&#xD;
this.addParameter(isFullOperation, &quot;result&quot;, ParameterDirectionKind.return_, primitiveTypes.Boolean);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRMBRBEd-0fNU76fYmlA" name="primitiveTypes" type="_17RaMRRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17aRMRRBEd-0fNU76fYmlA" name="createTextOutputChannelClass">
          <ownedComment xmi:id="_17aRMhRBEd-0fNU76fYmlA" annotatedElement="_17aRMRRBEd-0fNU76fYmlA">
            <body>// MexSystem.println(&quot;[createTextOutputChannelClass] Start...&quot;);&#xD;
&#xD;
this.TextOutputChannel = this.createClass(&quot;TextOutputChannel&quot;, true);&#xD;
this.addGeneralization(this.TextOutputChannel, this.OutputChannel);&#xD;
&#xD;
Operation writeStringOperation = this.addOperation(this.TextOutputChannel, &quot;writeString&quot;, null);&#xD;
this.addParameter(writeStringOperation, &quot;value&quot;, ParameterDirectionKind.in, primitiveTypes.String);&#xD;
&#xD;
this.addOperation(this.TextOutputChannel,&quot;writeNewLine&quot;, null);&#xD;
&#xD;
Operation writeLineOperation = this.addOperation(this.TextOutputChannel, &quot;writeLine&quot;, null);&#xD;
this.addParameter(writeLineOperation, &quot;value&quot;, ParameterDirectionKind.in, primitiveTypes.String);&#xD;
&#xD;
Operation writeIntegerOperation = this.addOperation(this.TextOutputChannel, &quot;writeInteger&quot;, null);&#xD;
this.addParameter(writeIntegerOperation, &quot;value&quot;, ParameterDirectionKind.in, primitiveTypes.Integer);&#xD;
&#xD;
Operation writeBooleanOperation = this.addOperation(this.TextOutputChannel, &quot;writeBoolean&quot;, null);&#xD;
this.addParameter(writeBooleanOperation, &quot;value&quot;, ParameterDirectionKind.in, primitiveTypes.Boolean);&#xD;
&#xD;
Operation writeUnlimitedNaturalOperation = this.addOperation(this.TextOutputChannel, &quot;writeUnlimitedNatural&quot;, null);&#xD;
this.addParameter(writeUnlimitedNaturalOperation, &quot;value&quot;, ParameterDirectionKind.in, primitiveTypes.UnlimitedNatural);&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRMxRBEd-0fNU76fYmlA" name="primitiveTypes" type="_17RaMRRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17aRNBRBEd-0fNU76fYmlA" name="createStandardOutputChannelClass">
          <ownedComment xmi:id="_17aRNRRBEd-0fNU76fYmlA" annotatedElement="_17aRNBRBEd-0fNU76fYmlA">
            <body>// MexSystem.println(&quot;[createStandardOutputChannelClass] Start...&quot;);&#xD;
&#xD;
this.StandardOutputChannel = this.createClass(&quot;StandardOutputChannel&quot;, false);&#xD;
this.addGeneralization(this.StandardOutputChannel, this.TextOutputChannel);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRNhRBEd-0fNU76fYmlA" name="primitiveTypes" type="_17RaMRRBEd-0fNU76fYmlA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_17aRNxRBEd-0fNU76fYmlA" name="createInputChannelClass">
          <ownedComment xmi:id="_17aROBRBEd-0fNU76fYmlA" annotatedElement="_17aRNxRBEd-0fNU76fYmlA">
            <body>this.InputChannel = this.createClass(&quot;InputChannel&quot;, true);&#xD;
this.addGeneralization(this.InputChannel, this.Channel);&#xD;
&#xD;
Operation readOperation = this.addOperation(this.InputChannel, &quot;read&quot;, null);&#xD;
this.addParameter(readOperation, &quot;value&quot;, ParameterDirectionKind.out, null);&#xD;
&#xD;
Operation hasMoreOperation = this.addOperation(this.InputChannel, &quot;hasMore&quot;, null);&#xD;
this.addParameter(hasMoreOperation, &quot;result&quot;, ParameterDirectionKind.return_, primitiveTypes.Boolean);&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="_17aRORRBEd-0fNU76fYmlA" name="primitiveTypes" type="_17RaMRRBEd-0fNU76fYmlA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17aROhRBEd-0fNU76fYmlA" name="LibraryClassImplementation">
        <packagedElement xmi:type="uml:Class" xmi:id="_17aROxRBEd-0fNU76fYmlA" name="OperationExecution">
          <ownedComment xmi:id="_17aRPBRBEd-0fNU76fYmlA">
            <body>import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
          </ownedComment>
          <generalization xmi:id="_17aRPRRBEd-0fNU76fYmlA" general="_17RMWhRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17aRPhRBEd-0fNU76fYmlA" name="set">
            <ownedComment xmi:id="_17aRPxRBEd-0fNU76fYmlA" annotatedElement="_17aRPhRBEd-0fNU76fYmlA">
              <body>this.context = context;&#xD;
&#xD;
OpaqueBehavior method = new OpaqueBehavior();&#xD;
method.specification = operation;&#xD;
&#xD;
for (int i = 0; i &lt; operation.ownedParameter.size(); i++) {&#xD;
    Parameter operationParameter = operation.ownedParameter.getValue(i);&#xD;
    Parameter methodParameter = new Parameter();&#xD;
    methodParameter.name = operationParameter.name;&#xD;
    methodParameter.direction = operationParameter.direction;&#xD;
    methodParameter.type = operationParameter.type;&#xD;
    methodParameter.multiplicityElement = operationParameter.multiplicityElement;&#xD;
    method.ownedParameter.addValue(methodParameter);&#xD;
}&#xD;
&#xD;
this.types.addValue(method);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRQBRBEd-0fNU76fYmlA" name="context" type="_17aRXBRBEd-0fNU76fYmlA"/>
            <ownedParameter xmi:id="_17aRQRRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRQhRBEd-0fNU76fYmlA" name="new_">
            <ownedComment xmi:id="_17aRQxRBEd-0fNU76fYmlA" annotatedElement="_17aRQhRBEd-0fNU76fYmlA">
              <body>return (Value)(new OperationExecution());&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRRBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRRRRBEd-0fNU76fYmlA" name="execute">
            <ownedComment xmi:id="_17aRRhRBEd-0fNU76fYmlA" annotatedElement="_17aRRRRBEd-0fNU76fYmlA">
              <body>((ImplementationObject)(this.context)).execute(this);&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRRxRBEd-0fNU76fYmlA" name="getOperationName">
            <ownedComment xmi:id="_17aRSBRBEd-0fNU76fYmlA" annotatedElement="_17aRRxRBEd-0fNU76fYmlA">
              <body>return this.getBehavior().specification.name;</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRSRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRShRBEd-0fNU76fYmlA" name="getParameter">
            <ownedComment xmi:id="_17aRSxRBEd-0fNU76fYmlA" annotatedElement="_17aRShRBEd-0fNU76fYmlA">
              <body>// MexSystem.println(&quot;[getParameter] parameterName = &quot; + parameterName);&#xD;
&#xD;
Behavior method = this.getBehavior();&#xD;
&#xD;
for (int i = 0; i &lt; method.ownedParameter.size(); i++) {&#xD;
    Parameter parameter = method.ownedParameter.getValue(i);&#xD;
    if (parameter.name.equals(parameterName)) {&#xD;
        // MexSystem.println(&quot;[getParameter] Parameter found.&quot;);&#xD;
        return parameter;&#xD;
    }&#xD;
}&#xD;
&#xD;
// MexSystem.println(&quot;[getParameter] Parameter not found.&quot;);&#xD;
return null;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRTBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RQQhRBEd-0fNU76fYmlA" direction="return"/>
            <ownedParameter xmi:id="_17aRTRRBEd-0fNU76fYmlA" name="parameterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRThRBEd-0fNU76fYmlA" name="getParameterValue">
            <ownedComment xmi:id="_17aRTxRBEd-0fNU76fYmlA" annotatedElement="_17aRThRBEd-0fNU76fYmlA">
              <body>return this.getParameterValue(this.getParameter(parameterName));</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRUBRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMPxRBEd-0fNU76fYmlA" direction="return"/>
            <ownedParameter xmi:id="_17aRURRBEd-0fNU76fYmlA" name="parameterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRUhRBEd-0fNU76fYmlA" name="setParameterValue">
            <ownedComment xmi:id="_17aRUxRBEd-0fNU76fYmlA" annotatedElement="_17aRUhRBEd-0fNU76fYmlA">
              <body>ParameterValue parameterValue = new ParameterValue();&#xD;
parameterValue.parameter = this.getParameter(parameterName);&#xD;
parameterValue.values = values;&#xD;
&#xD;
this.setParameterValue(parameterValue);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRVBRBEd-0fNU76fYmlA" name="parameterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17aRVRRBEd-0fNU76fYmlA" name="values" type="_17RKJhRBEd-0fNU76fYmlA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aRVhRBEd-0fNU76fYmlA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aRVxRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRWBRBEd-0fNU76fYmlA" name="setParameterValue">
            <ownedComment xmi:id="_17aRWRRBEd-0fNU76fYmlA" annotatedElement="_17aRWBRBEd-0fNU76fYmlA">
              <body>ValueList valueList = new ValueList();&#xD;
valueList.addValue(value);&#xD;
this.setParameterValue(parameterName, valueList);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRWhRBEd-0fNU76fYmlA" name="parameterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17aRWxRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17aRXBRBEd-0fNU76fYmlA" name="ImplementationObject" isAbstract="true">
          <generalization xmi:id="_17aRXRRBEd-0fNU76fYmlA" general="_17RKphRBEd-0fNU76fYmlA"/>
          <ownedOperation xmi:id="_17aRXhRBEd-0fNU76fYmlA" name="execute" isAbstract="true">
            <ownedParameter xmi:id="_17aRXxRBEd-0fNU76fYmlA" name="execution" type="_17aROxRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRYBRBEd-0fNU76fYmlA" name="dispatch">
            <ownedComment xmi:id="_17aRYRRBEd-0fNU76fYmlA" annotatedElement="_17aRYBRBEd-0fNU76fYmlA">
              <body>OperationExecution execution = new OperationExecution();&#xD;
this.locus.add(execution);&#xD;
execution.set(this, operation);&#xD;
return execution;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRYhRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RMWhRBEd-0fNU76fYmlA" direction="return"/>
            <ownedParameter xmi:id="_17aRYxRBEd-0fNU76fYmlA" name="operation" type="_17RP6RRBEd-0fNU76fYmlA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_17aRZBRBEd-0fNU76fYmlA" name="Implementation Object">
          <ownedBehavior xmi:type="uml:Interaction" xmi:id="_17aRZRRBEd-0fNU76fYmlA" name="Interaction1">
            <ownedConnector xmi:id="_17aRZhRBEd-0fNU76fYmlA">
              <end xmi:id="_17aRZxRBEd-0fNU76fYmlA" role="_17aRexRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aRaBRBEd-0fNU76fYmlA" role="_17aRehRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <ownedConnector xmi:id="_17aRaRRBEd-0fNU76fYmlA">
              <end xmi:id="_17aRahRBEd-0fNU76fYmlA" role="_17aRexRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aRaxRBEd-0fNU76fYmlA" role="_17aRfBRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <ownedConnector xmi:id="_17aRbBRBEd-0fNU76fYmlA">
              <end xmi:id="_17aRbRRBEd-0fNU76fYmlA" role="_17aRfRRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aRbhRBEd-0fNU76fYmlA" role="_17aRehRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <ownedConnector xmi:id="_17aRbxRBEd-0fNU76fYmlA">
              <end xmi:id="_17aRcBRBEd-0fNU76fYmlA" role="_17aRfRRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aRcRRBEd-0fNU76fYmlA" role="_17aRfhRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <ownedConnector xmi:id="_17aRchRBEd-0fNU76fYmlA">
              <end xmi:id="_17aRcxRBEd-0fNU76fYmlA" role="_17aRfhRBEd-0fNU76fYmlA"/>
              <end xmi:id="_17aRdBRBEd-0fNU76fYmlA" role="_17aRfBRBEd-0fNU76fYmlA"/>
            </ownedConnector>
            <lifeline xmi:id="_17aRdRRBEd-0fNU76fYmlA" name="implementationObject" represents="_17aRehRBEd-0fNU76fYmlA"/>
            <lifeline xmi:id="_17aRdhRBEd-0fNU76fYmlA" name="class_" represents="_17aRexRBEd-0fNU76fYmlA"/>
            <lifeline xmi:id="_17aRdxRBEd-0fNU76fYmlA" name="operation" represents="_17aRfBRBEd-0fNU76fYmlA"/>
            <lifeline xmi:id="_17aReBRBEd-0fNU76fYmlA" name="operationExecution" represents="_17aRfRRBEd-0fNU76fYmlA"/>
            <lifeline xmi:id="_17aReRRBEd-0fNU76fYmlA" name="opaqueBehavior" represents="_17aRfhRBEd-0fNU76fYmlA"/>
          </ownedBehavior>
          <ownedAttribute xmi:id="_17aRehRBEd-0fNU76fYmlA" type="_17aRXBRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aRexRBEd-0fNU76fYmlA" type="_17RQ2RRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aRfBRBEd-0fNU76fYmlA" type="_17RP6RRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aRfRRBEd-0fNU76fYmlA" type="_17aROxRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aRfhRBEd-0fNU76fYmlA" type="_17ROIRRBEd-0fNU76fYmlA"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_17aRfxRBEd-0fNU76fYmlA" name="PipeImplementation">
        <packagedElement xmi:type="uml:Association" xmi:id="_17aRgBRBEd-0fNU76fYmlA" memberEnd="_17aRhxRBEd-0fNU76fYmlA _17aRgRRBEd-0fNU76fYmlA">
          <ownedEnd xmi:id="_17aRgRRBEd-0fNU76fYmlA" visibility="private" type="_17aRhBRBEd-0fNU76fYmlA" association="_17aRgBRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aRghRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aRgxRBEd-0fNU76fYmlA"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17aRhBRBEd-0fNU76fYmlA" name="PipeInputChannelObject">
          <ownedComment xmi:id="_17aRhRRBEd-0fNU76fYmlA" annotatedElement="_17aRhBRBEd-0fNU76fYmlA">
            <body>&#xD;
</body>
          </ownedComment>
          <generalization xmi:id="_17aRhhRBEd-0fNU76fYmlA" general="_17aQxRRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aRhxRBEd-0fNU76fYmlA" name="values" visibility="private" type="_17RKJhRBEd-0fNU76fYmlA" association="_17aRgBRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aRiBRBEd-0fNU76fYmlA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aRiRRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_17aRihRBEd-0fNU76fYmlA" name="opened" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_17aRixRBEd-0fNU76fYmlA" name="name" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_17aRjBRBEd-0fNU76fYmlA" name="hasMore">
            <ownedComment xmi:id="_17aRjRRBEd-0fNU76fYmlA" annotatedElement="_17aRjBRBEd-0fNU76fYmlA">
              <body>return this.isOpen() &amp;&amp; !(this.values.size() == 0);&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRjhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRjxRBEd-0fNU76fYmlA" name="read">
            <ownedComment xmi:id="_17aRkBRBEd-0fNU76fYmlA" annotatedElement="_17aRjxRBEd-0fNU76fYmlA">
              <body>if (this.hasMore()) {&#xD;
    fUML.Semantics.Classes.Kernel.Value value = this.values.getValue(0);&#xD;
    this.values.remove(0);&#xD;
    return value;&#xD;
}&#xD;
else {&#xD;
    return null;&#xD;
}&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRkRRBEd-0fNU76fYmlA" name="ReturnResult" type="_17RKJhRBEd-0fNU76fYmlA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aRkhRBEd-0fNU76fYmlA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aRkxRBEd-0fNU76fYmlA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRlBRBEd-0fNU76fYmlA" name="receive">
            <ownedComment xmi:id="_17aRlRRBEd-0fNU76fYmlA" annotatedElement="_17aRlBRBEd-0fNU76fYmlA">
              <body>this.values.addValue(value);&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRlhRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRlxRBEd-0fNU76fYmlA" name="open">
            <ownedComment xmi:id="_17aRmBRBEd-0fNU76fYmlA" annotatedElement="_17aRlxRBEd-0fNU76fYmlA">
              <body>opened = true;</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRmRRBEd-0fNU76fYmlA" name="close">
            <ownedComment xmi:id="_17aRmhRBEd-0fNU76fYmlA" annotatedElement="_17aRmRRBEd-0fNU76fYmlA">
              <body>opened = false;&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRmxRBEd-0fNU76fYmlA" name="isOpen">
            <ownedComment xmi:id="_17aRnBRBEd-0fNU76fYmlA" annotatedElement="_17aRmxRBEd-0fNU76fYmlA">
              <body>return opened;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRnRRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRnhRBEd-0fNU76fYmlA" name="getName">
            <ownedComment xmi:id="_17aRnxRBEd-0fNU76fYmlA" annotatedElement="_17aRnhRBEd-0fNU76fYmlA">
              <body>return name;</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRoBRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRoRRBEd-0fNU76fYmlA" name="PipeInputChannelObject">
            <ownedComment xmi:id="_17aRohRBEd-0fNU76fYmlA" annotatedElement="_17aRoRRBEd-0fNU76fYmlA">
              <body>this.name = name;&#xD;
this.opened = true;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRoxRBEd-0fNU76fYmlA" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_17aRpBRBEd-0fNU76fYmlA" name="PipeOutputChannelObject">
          <generalization xmi:id="_17aRpRRBEd-0fNU76fYmlA" general="_17RbDxRBEd-0fNU76fYmlA"/>
          <ownedAttribute xmi:id="_17aRphRBEd-0fNU76fYmlA" name="otherEnd" visibility="private" type="_17aRhBRBEd-0fNU76fYmlA" association="_17aRvxRBEd-0fNU76fYmlA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17aRpxRBEd-0fNU76fYmlA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17aRqBRBEd-0fNU76fYmlA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_17aRqRRBEd-0fNU76fYmlA" name="opened" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_17aRqhRBEd-0fNU76fYmlA" name="name" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_17aRqxRBEd-0fNU76fYmlA" name="write">
            <ownedComment xmi:id="_17aRrBRBEd-0fNU76fYmlA" annotatedElement="_17aRqxRBEd-0fNU76fYmlA">
              <body>if (this.isOpen()) {&#xD;
    this.otherEnd.receive(value);&#xD;
}&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRrRRBEd-0fNU76fYmlA" name="value" type="_17RKJhRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRrhRBEd-0fNU76fYmlA" name="isFull">
            <ownedComment xmi:id="_17aRrxRBEd-0fNU76fYmlA" annotatedElement="_17aRrhRBEd-0fNU76fYmlA">
              <body>return false;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRsBRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRsRRBEd-0fNU76fYmlA" name="PipeOutputChannelObject">
            <ownedComment xmi:id="_17aRshRBEd-0fNU76fYmlA" annotatedElement="_17aRsRRBEd-0fNU76fYmlA">
              <body>this.name = name;&#xD;
this.otherEnd = otherEnd;&#xD;
this.opened = true;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRsxRBEd-0fNU76fYmlA" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_17aRtBRBEd-0fNU76fYmlA" name="otherEnd" type="_17aRhBRBEd-0fNU76fYmlA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRtRRBEd-0fNU76fYmlA" name="getName">
            <ownedComment xmi:id="_17aRthRBEd-0fNU76fYmlA" annotatedElement="_17aRtRRBEd-0fNU76fYmlA">
              <body>return name;</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRtxRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRuBRBEd-0fNU76fYmlA" name="open">
            <ownedComment xmi:id="_17aRuRRBEd-0fNU76fYmlA" annotatedElement="_17aRuBRBEd-0fNU76fYmlA">
              <body>opened = true;&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRuhRBEd-0fNU76fYmlA" name="close">
            <ownedComment xmi:id="_17aRuxRBEd-0fNU76fYmlA" annotatedElement="_17aRuhRBEd-0fNU76fYmlA">
              <body>opened = false;</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_17aRvBRBEd-0fNU76fYmlA" name="isOpen">
            <ownedComment xmi:id="_17aRvRRBEd-0fNU76fYmlA" annotatedElement="_17aRvBRBEd-0fNU76fYmlA">
              <body>return opened;&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:id="_17aRvhRBEd-0fNU76fYmlA" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_17aRvxRBEd-0fNU76fYmlA" memberEnd="_17aRphRBEd-0fNU76fYmlA _17aRwBRBEd-0fNU76fYmlA">
          <ownedEnd xmi:id="_17aRwBRBEd-0fNU76fYmlA" visibility="private" type="_17aRpBRBEd-0fNU76fYmlA" association="_17aRvxRBEd-0fNU76fYmlA"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_17aRwRRBEd-0fNU76fYmlA" name="PrimitiveTypes">
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_17aRwhRBEd-0fNU76fYmlA" name="Tokens"/>
    </packagedElement>
    <profileApplication xmi:id="_17aRwxRBEd-0fNU76fYmlA">
      <eAnnotations xmi:id="_17aRxBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_17aRxRRBEd-0fNU76fYmlA">
      <eAnnotations xmi:id="_17aRxhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_169u5BRBEd-0fNU76fYmlA"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_169u4hRBEd-0fNU76fYmlA"/>
    </profileApplication>
    <profileApplication xmi:id="_17aRxxRBEd-0fNU76fYmlA">
      <eAnnotations xmi:id="_17aRyBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_169mvBRBEd-0fNU76fYmlA"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_169muhRBEd-0fNU76fYmlA"/>
    </profileApplication>
    <profileApplication xmi:id="_17aRyRRBEd-0fNU76fYmlA">
      <eAnnotations xmi:id="_17aRyhRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Uml2Debug.profile.uml#_169rYBRBEd-0fNU76fYmlA"/>
      </eAnnotations>
      <appliedProfile href="Uml2Debug.profile.uml#_169rXhRBEd-0fNU76fYmlA"/>
    </profileApplication>
    <profileApplication xmi:id="_17aRyxRBEd-0fNU76fYmlA">
      <eAnnotations xmi:id="_17aRzBRBEd-0fNU76fYmlA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/UML2.profile.uml#_dhEUENSUEdqN9tnr0j3PAQ"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/UML2.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <Default:Documentation xmi:id="_17aRzRRBEd-0fNU76fYmlA" base_Comment="_17RHuRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aRzhRBEd-0fNU76fYmlA" base_Comment="_17RHwBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aRzxRBEd-0fNU76fYmlA" base_Comment="_17RHwhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR0BRBEd-0fNU76fYmlA" base_Comment="_17RHxRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR0RRBEd-0fNU76fYmlA" base_Comment="_17RHxxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR0hRBEd-0fNU76fYmlA" base_Comment="_17RHyhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR0xRBEd-0fNU76fYmlA" base_Comment="_17RHzhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR1BRBEd-0fNU76fYmlA" base_Comment="_17HtGBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR1RRBEd-0fNU76fYmlA" base_Comment="_17HtHBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR1hRBEd-0fNU76fYmlA" base_Comment="_17RK3hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR1xRBEd-0fNU76fYmlA" base_Comment="_17RK4hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR2BRBEd-0fNU76fYmlA" base_Comment="_17RJdxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR2RRBEd-0fNU76fYmlA" base_Comment="_17RJexRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR2hRBEd-0fNU76fYmlA" base_Comment="_17RJfxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR2xRBEd-0fNU76fYmlA" base_Comment="_17RJhRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR3BRBEd-0fNU76fYmlA" base_Comment="_17RJixRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR3RRBEd-0fNU76fYmlA" base_Comment="_17RJlRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR3hRBEd-0fNU76fYmlA" base_Comment="_17RJnBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR3xRBEd-0fNU76fYmlA" base_Comment="_17RJmhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR4BRBEd-0fNU76fYmlA" base_Comment="_17RJnxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR4RRBEd-0fNU76fYmlA" base_Comment="_17RG-hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR4hRBEd-0fNU76fYmlA" base_Comment="_17RG_RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR4xRBEd-0fNU76fYmlA" base_Comment="_17RHAhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR5BRBEd-0fNU76fYmlA" base_Comment="_17RHBBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR5RRBEd-0fNU76fYmlA" base_Comment="_17RHBxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR5hRBEd-0fNU76fYmlA" base_Comment="_17RHCRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR5xRBEd-0fNU76fYmlA" base_Comment="_17RHCxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR6BRBEd-0fNU76fYmlA" base_Comment="_17RHEBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR6RRBEd-0fNU76fYmlA" base_Comment="_17RHFRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR6hRBEd-0fNU76fYmlA" base_Comment="_17RM_xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR6xRBEd-0fNU76fYmlA" base_Comment="_17RNAhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR7BRBEd-0fNU76fYmlA" base_Comment="_17RNBhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR7RRBEd-0fNU76fYmlA" base_Comment="_17RNChRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR7hRBEd-0fNU76fYmlA" base_Comment="_17RNDhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR7xRBEd-0fNU76fYmlA" base_Comment="_17RNIxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR8BRBEd-0fNU76fYmlA" base_Comment="_17RNGhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR8RRBEd-0fNU76fYmlA" base_Comment="_17RNIBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR8hRBEd-0fNU76fYmlA" base_Comment="_17RNEBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR8xRBEd-0fNU76fYmlA" base_Comment="_17RNGBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR9BRBEd-0fNU76fYmlA" base_Comment="_17RM9BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR9RRBEd-0fNU76fYmlA" base_Comment="_17RM-RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR9hRBEd-0fNU76fYmlA" base_Comment="_17RM_BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR9xRBEd-0fNU76fYmlA" base_Comment="_17RI8RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR-BRBEd-0fNU76fYmlA" base_Comment="_17RI9BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR-RRBEd-0fNU76fYmlA" base_Comment="_17RI-BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR-hRBEd-0fNU76fYmlA" base_Comment="_17RI_BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aR-xRBEd-0fNU76fYmlA" base_Comment="_17RJABRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR_BRBEd-0fNU76fYmlA" base_Comment="_17RJFxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR_RRBEd-0fNU76fYmlA" base_Comment="_17RJHxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR_hRBEd-0fNU76fYmlA" base_Comment="_17RJOxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aR_xRBEd-0fNU76fYmlA" base_Comment="_17RJPhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSABRBEd-0fNU76fYmlA" base_Comment="_17RJMxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSARRBEd-0fNU76fYmlA" base_Comment="_17RJLRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSAhRBEd-0fNU76fYmlA" base_Comment="_17RJKhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSAxRBEd-0fNU76fYmlA" base_Comment="_17RJOBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSBBRBEd-0fNU76fYmlA" base_Comment="_17RJIRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSBRRBEd-0fNU76fYmlA" base_Comment="_17RJBBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSBhRBEd-0fNU76fYmlA" base_Comment="_17RJEhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSBxRBEd-0fNU76fYmlA" base_Comment="_17RNXxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSCBRBEd-0fNU76fYmlA" base_Comment="_17RGyxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSCRRBEd-0fNU76fYmlA" base_Comment="_17RG0hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSChRBEd-0fNU76fYmlA" base_Comment="_17RG1BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSCxRBEd-0fNU76fYmlA" base_Comment="_17RG1xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSDBRBEd-0fNU76fYmlA" base_Comment="_17RG2RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSDRRBEd-0fNU76fYmlA" base_Comment="_17RG2xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSDhRBEd-0fNU76fYmlA" base_Comment="_17RG3RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSDxRBEd-0fNU76fYmlA" base_Comment="_17HtfRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSEBRBEd-0fNU76fYmlA" base_Comment="_17HtgRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSERRBEd-0fNU76fYmlA" base_Comment="_17HtgxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSEhRBEd-0fNU76fYmlA" base_Comment="_17HthxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSExRBEd-0fNU76fYmlA" base_Comment="_17HtiRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSFBRBEd-0fNU76fYmlA" base_Comment="_17RGsxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSFRRBEd-0fNU76fYmlA" base_Comment="_17RGuxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSFhRBEd-0fNU76fYmlA" base_Comment="_17RGwRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSFxRBEd-0fNU76fYmlA" base_Comment="_17RGxxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSGBRBEd-0fNU76fYmlA" base_Comment="_17RGyRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSGRRBEd-0fNU76fYmlA" base_Comment="_17HtBhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSGhRBEd-0fNU76fYmlA" base_Comment="_17HtCRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSGxRBEd-0fNU76fYmlA" base_Comment="_17Hs-RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSHBRBEd-0fNU76fYmlA" base_Comment="_17Hs_RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSHRRBEd-0fNU76fYmlA" base_Comment="_17Hs_xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSHhRBEd-0fNU76fYmlA" base_Comment="_17HtAxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSHxRBEd-0fNU76fYmlA" base_Comment="_17Hs7RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSIBRBEd-0fNU76fYmlA" base_Comment="_17Hs8RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSIRRBEd-0fNU76fYmlA" base_Comment="_17Hs8xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSIhRBEd-0fNU76fYmlA" base_Comment="_17Hs9xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSIxRBEd-0fNU76fYmlA" base_Comment="_17Hs1xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSJBRBEd-0fNU76fYmlA" base_Comment="_17Hs2xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSJRRBEd-0fNU76fYmlA" base_Comment="_17Hs3RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSJhRBEd-0fNU76fYmlA" base_Comment="_17Hs4RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSJxRBEd-0fNU76fYmlA" base_Comment="_17Hs4xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSKBRBEd-0fNU76fYmlA" base_Comment="_17Hs6BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSKRRBEd-0fNU76fYmlA" base_Comment="_17HsxBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSKhRBEd-0fNU76fYmlA" base_Comment="_17HsyBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSKxRBEd-0fNU76fYmlA" base_Comment="_17HszxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSLBRBEd-0fNU76fYmlA" base_Comment="_17Hs1BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSLRRBEd-0fNU76fYmlA" base_Comment="_17HsshRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSLhRBEd-0fNU76fYmlA" base_Comment="_17HsthRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSLxRBEd-0fNU76fYmlA" base_Comment="_17HsuBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSMBRBEd-0fNU76fYmlA" base_Comment="_17HsvBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSMRRBEd-0fNU76fYmlA" base_Comment="_17HsvhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSMhRBEd-0fNU76fYmlA" base_Comment="_17HswhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSMxRBEd-0fNU76fYmlA" base_Comment="_17HsrBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSNBRBEd-0fNU76fYmlA" base_Comment="_17HssBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSNRRBEd-0fNU76fYmlA" base_Comment="_17HslRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSNhRBEd-0fNU76fYmlA" base_Comment="_17HsjxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSNxRBEd-0fNU76fYmlA" base_Comment="_17HskxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSOBRBEd-0fNU76fYmlA" base_Comment="_17HsiRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSORRBEd-0fNU76fYmlA" base_Comment="_17HsjRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSOhRBEd-0fNU76fYmlA" base_Comment="_17HseRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSOxRBEd-0fNU76fYmlA" base_Comment="_17HsfRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSPBRBEd-0fNU76fYmlA" base_Comment="_17HsgRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSPRRBEd-0fNU76fYmlA" base_Comment="_17HtQRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSPhRBEd-0fNU76fYmlA" base_Comment="_17HtTBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSPxRBEd-0fNU76fYmlA" base_Comment="_17HtVhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSQBRBEd-0fNU76fYmlA" base_Comment="_17HtVBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSQRRBEd-0fNU76fYmlA" base_Comment="_17HtWRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSQhRBEd-0fNU76fYmlA" base_Comment="_17HtOxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSQxRBEd-0fNU76fYmlA" base_Comment="_17HtPxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSRBRBEd-0fNU76fYmlA" base_Comment="_17HtKhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSRRRBEd-0fNU76fYmlA" base_Comment="_17HtLhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSRhRBEd-0fNU76fYmlA" base_Comment="_17HtNRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSRxRBEd-0fNU76fYmlA" base_Comment="_17HtORRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSSBRBEd-0fNU76fYmlA" base_Comment="_17HtHhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSSRRBEd-0fNU76fYmlA" base_Comment="_17HtIhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSShRBEd-0fNU76fYmlA" base_Comment="_17HtJhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSSxRBEd-0fNU76fYmlA" base_Comment="_17HtKBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSTBRBEd-0fNU76fYmlA" base_Comment="_17HtEhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSTRRBEd-0fNU76fYmlA" base_Comment="_17HtFhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSThRBEd-0fNU76fYmlA" base_Comment="_17RNrRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSTxRBEd-0fNU76fYmlA" base_Comment="_17RNsBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSUBRBEd-0fNU76fYmlA" base_Comment="_17RNtBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSURRBEd-0fNU76fYmlA" base_Comment="_17RNuBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSUhRBEd-0fNU76fYmlA" base_Comment="_17RNxxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSUxRBEd-0fNU76fYmlA" base_Comment="_17RNwBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSVBRBEd-0fNU76fYmlA" base_Comment="_17RJJhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSVRRBEd-0fNU76fYmlA" base_Comment="_17RNyxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSVhRBEd-0fNU76fYmlA" base_Comment="_17RNzxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSVxRBEd-0fNU76fYmlA" base_Comment="_17RN0xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSWBRBEd-0fNU76fYmlA" base_Comment="_17RN1hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSWRRBEd-0fNU76fYmlA" base_Comment="_17RN2RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSWhRBEd-0fNU76fYmlA" base_Comment="_17RNjxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSWxRBEd-0fNU76fYmlA" base_Comment="_17RNkhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSXBRBEd-0fNU76fYmlA" base_Comment="_17RNlhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSXRRBEd-0fNU76fYmlA" base_Comment="_17RNohRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSXhRBEd-0fNU76fYmlA" base_Comment="_17RNphRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSXxRBEd-0fNU76fYmlA" base_Comment="_17RNZRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSYBRBEd-0fNU76fYmlA" base_Comment="_17RNaBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSYRRBEd-0fNU76fYmlA" base_Comment="_17RNbBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSYhRBEd-0fNU76fYmlA" base_Comment="_17RNcBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSYxRBEd-0fNU76fYmlA" base_Comment="_17RNehRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSZBRBEd-0fNU76fYmlA" base_Comment="_17RNgxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSZRRBEd-0fNU76fYmlA" base_Comment="_17RNgBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSZhRBEd-0fNU76fYmlA" base_Comment="_17RNdBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSZxRBEd-0fNU76fYmlA" base_Comment="_17RNdxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSaBRBEd-0fNU76fYmlA" base_Comment="_17RNhhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSaRRBEd-0fNU76fYmlA" base_Comment="_17RNihRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSahRBEd-0fNU76fYmlA" base_Comment="_17RM1BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSaxRBEd-0fNU76fYmlA" base_Comment="_17RM1xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSbBRBEd-0fNU76fYmlA" base_Comment="_17RM2xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSbRRBEd-0fNU76fYmlA" base_Comment="_17RM3xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSbhRBEd-0fNU76fYmlA" base_Comment="_17RM6RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSbxRBEd-0fNU76fYmlA" base_Comment="_17RM4xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aScBRBEd-0fNU76fYmlA" base_Comment="_17RKpxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aScRRBEd-0fNU76fYmlA" base_Comment="_17RKqxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSchRBEd-0fNU76fYmlA" base_Comment="_17RKrxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aScxRBEd-0fNU76fYmlA" base_Comment="_17RKyhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSdBRBEd-0fNU76fYmlA" base_Comment="_17RKzRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSdRRBEd-0fNU76fYmlA" base_Comment="_17RKwhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSdhRBEd-0fNU76fYmlA" base_Comment="_17RKvxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSdxRBEd-0fNU76fYmlA" base_Comment="_17RKxBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSeBRBEd-0fNU76fYmlA" base_Comment="_17RK0BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSeRRBEd-0fNU76fYmlA" base_Comment="_17RKsxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSehRBEd-0fNU76fYmlA" base_Comment="_17RKuxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSexRBEd-0fNU76fYmlA" base_Comment="_17RMLhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSfBRBEd-0fNU76fYmlA" base_Comment="_17RMMxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSfRRBEd-0fNU76fYmlA" base_Comment="_17RMWxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSfhRBEd-0fNU76fYmlA" base_Comment="_17RMXxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSfxRBEd-0fNU76fYmlA" base_Comment="_17RMYxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSgBRBEd-0fNU76fYmlA" base_Comment="_17RMZxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSgRRBEd-0fNU76fYmlA" base_Comment="_17RMeBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSghRBEd-0fNU76fYmlA" base_Comment="_17RMaxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSgxRBEd-0fNU76fYmlA" base_Comment="_17RMbhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aShBRBEd-0fNU76fYmlA" base_Comment="_17RMaRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aShRRBEd-0fNU76fYmlA" base_Comment="_17RMdBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aShhRBEd-0fNU76fYmlA" base_Comment="_17RMcRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aShxRBEd-0fNU76fYmlA" base_Comment="_17RMfRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSiBRBEd-0fNU76fYmlA" base_Comment="_17RMTRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSiRRBEd-0fNU76fYmlA" base_Comment="_17RMURRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSihRBEd-0fNU76fYmlA" base_Comment="_17RMUxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSixRBEd-0fNU76fYmlA" base_Comment="_17RMQBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSjBRBEd-0fNU76fYmlA" base_Comment="_17RMRhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSjRRBEd-0fNU76fYmlA" base_Comment="_17RMShRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSjhRBEd-0fNU76fYmlA" base_Comment="_17RK1RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSjxRBEd-0fNU76fYmlA" base_Comment="_17RK2RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSkBRBEd-0fNU76fYmlA" base_Comment="_17RL1BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSkRRBEd-0fNU76fYmlA" base_Comment="_17RL2BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSkhRBEd-0fNU76fYmlA" base_Comment="_17RL5BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSkxRBEd-0fNU76fYmlA" base_Comment="_17RL2hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSlBRBEd-0fNU76fYmlA" base_Comment="_17RL4RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSlRRBEd-0fNU76fYmlA" base_Comment="_17RL3RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSlhRBEd-0fNU76fYmlA" base_Comment="_17RL5xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSlxRBEd-0fNU76fYmlA" base_Comment="_17RLrhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSmBRBEd-0fNU76fYmlA" base_Comment="_17RLuRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSmRRBEd-0fNU76fYmlA" base_Comment="_17RLtRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSmhRBEd-0fNU76fYmlA" base_Comment="_17RLvBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSmxRBEd-0fNU76fYmlA" base_Comment="_17RLwBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSnBRBEd-0fNU76fYmlA" base_Comment="_17RLyRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSnRRBEd-0fNU76fYmlA" base_Comment="_17RL0RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSnhRBEd-0fNU76fYmlA" base_Comment="_17RLzhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSnxRBEd-0fNU76fYmlA" base_Comment="_17RLmxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSoBRBEd-0fNU76fYmlA" base_Comment="_17RLnxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSoRRBEd-0fNU76fYmlA" base_Comment="_17RLoxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSohRBEd-0fNU76fYmlA" base_Comment="_17RLqxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSoxRBEd-0fNU76fYmlA" base_Comment="_17RLqBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSpBRBEd-0fNU76fYmlA" base_Comment="_17RLexRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSpRRBEd-0fNU76fYmlA" base_Comment="_17RLfxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSphRBEd-0fNU76fYmlA" base_Comment="_17RLhhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSpxRBEd-0fNU76fYmlA" base_Comment="_17RLjRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSqBRBEd-0fNU76fYmlA" base_Comment="_17RLkBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSqRRBEd-0fNU76fYmlA" base_Comment="_17RLiRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSqhRBEd-0fNU76fYmlA" base_Comment="_17RLkxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSqxRBEd-0fNU76fYmlA" base_Comment="_17RLmBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSrBRBEd-0fNU76fYmlA" base_Comment="_17RLahRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSrRRBEd-0fNU76fYmlA" base_Comment="_17RLbhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSrhRBEd-0fNU76fYmlA" base_Comment="_17RLchRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSrxRBEd-0fNU76fYmlA" base_Comment="_17RLdhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSsBRBEd-0fNU76fYmlA" base_Comment="_17RLXRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSsRRBEd-0fNU76fYmlA" base_Comment="_17RLYRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSshRBEd-0fNU76fYmlA" base_Comment="_17RLZRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSsxRBEd-0fNU76fYmlA" base_Comment="_17RLZxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aStBRBEd-0fNU76fYmlA" base_Comment="_17RLRxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aStRRBEd-0fNU76fYmlA" base_Comment="_17RLShRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSthRBEd-0fNU76fYmlA" base_Comment="_17RLThRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aStxRBEd-0fNU76fYmlA" base_Comment="_17RLUhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSuBRBEd-0fNU76fYmlA" base_Comment="_17RLWhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSuRRBEd-0fNU76fYmlA" base_Comment="_17RLVhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSuhRBEd-0fNU76fYmlA" base_Comment="_17RLKBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSuxRBEd-0fNU76fYmlA" base_Comment="_17RLLBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSvBRBEd-0fNU76fYmlA" base_Comment="_17RK5hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSvRRBEd-0fNU76fYmlA" base_Comment="_17RK6hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSvhRBEd-0fNU76fYmlA" base_Comment="_17RLMRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSvxRBEd-0fNU76fYmlA" base_Comment="_17RLNRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSwBRBEd-0fNU76fYmlA" base_Comment="_17RLQRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSwRRBEd-0fNU76fYmlA" base_Comment="_17RLNxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSwhRBEd-0fNU76fYmlA" base_Comment="_17RLPhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSwxRBEd-0fNU76fYmlA" base_Comment="_17RLOhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSxBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSxRRBEd-0fNU76fYmlA" base_Comment="_17RLChRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSxhRBEd-0fNU76fYmlA" base_Comment="_17RLDhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSxxRBEd-0fNU76fYmlA" base_Comment="_17RLGhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSyBRBEd-0fNU76fYmlA" base_Comment="_17RLFxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSyRRBEd-0fNU76fYmlA" base_Comment="_17RLFBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSyhRBEd-0fNU76fYmlA" base_Comment="_17RLEhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSyxRBEd-0fNU76fYmlA" base_Comment="_17RLHxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSzBRBEd-0fNU76fYmlA" base_Comment="_17RK7xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSzRRBEd-0fNU76fYmlA" base_Comment="_17RK8xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aSzhRBEd-0fNU76fYmlA" base_Comment="_17RKmBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aSzxRBEd-0fNU76fYmlA" base_Comment="_17RKohRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS0BRBEd-0fNU76fYmlA" base_Comment="_17RKnxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS0RRBEd-0fNU76fYmlA" base_Comment="_17RKXBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS0hRBEd-0fNU76fYmlA" base_Comment="_17RKeBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS0xRBEd-0fNU76fYmlA" base_Comment="_17RKexRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS1BRBEd-0fNU76fYmlA" base_Comment="_17RKaxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS1RRBEd-0fNU76fYmlA" base_Comment="_17RKdBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS1hRBEd-0fNU76fYmlA" base_Comment="_17RKgxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS1xRBEd-0fNU76fYmlA" base_Comment="_17RKchRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS2BRBEd-0fNU76fYmlA" base_Comment="_17RKhxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS2RRBEd-0fNU76fYmlA" base_Comment="_17RKbxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS2hRBEd-0fNU76fYmlA" base_Comment="_17RKfhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS2xRBEd-0fNU76fYmlA" base_Comment="_17RKYxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS3BRBEd-0fNU76fYmlA" base_Comment="_17RKkBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS3RRBEd-0fNU76fYmlA" base_Comment="_17RKlRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS3hRBEd-0fNU76fYmlA" base_Comment="_17RK-BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS3xRBEd-0fNU76fYmlA" base_Comment="_17RK_BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS4BRBEd-0fNU76fYmlA" base_Comment="_17RKRxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS4RRBEd-0fNU76fYmlA" base_Comment="_17RKVhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS4hRBEd-0fNU76fYmlA" base_Comment="_17RKTBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS4xRBEd-0fNU76fYmlA" base_Comment="_17RKUxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS5BRBEd-0fNU76fYmlA" base_Comment="_17RKTxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS5RRBEd-0fNU76fYmlA" base_Comment="_17RKWRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS5hRBEd-0fNU76fYmlA" base_Comment="_17RJ9hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS5xRBEd-0fNU76fYmlA" base_Comment="_17RJ-hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS6BRBEd-0fNU76fYmlA" base_Comment="_17RJ_RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS6RRBEd-0fNU76fYmlA" base_Comment="_17RKARRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS6hRBEd-0fNU76fYmlA" base_Comment="_17RKChRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS6xRBEd-0fNU76fYmlA" base_Comment="_17RKDxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS7BRBEd-0fNU76fYmlA" base_Comment="_17RLARRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS7RRBEd-0fNU76fYmlA" base_Comment="_17RLBRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS7hRBEd-0fNU76fYmlA" base_Comment="_17RKERRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS7xRBEd-0fNU76fYmlA" base_Comment="_17RKFRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS8BRBEd-0fNU76fYmlA" base_Comment="_17RKIRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS8RRBEd-0fNU76fYmlA" base_Comment="_17RKHhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS8hRBEd-0fNU76fYmlA" base_Comment="_17RKFxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS8xRBEd-0fNU76fYmlA" base_Comment="_17RKGhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS9BRBEd-0fNU76fYmlA" base_Comment="_17RKJBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS9RRBEd-0fNU76fYmlA" base_Comment="_17RKJxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS9hRBEd-0fNU76fYmlA" base_Comment="_17RKKxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS9xRBEd-0fNU76fYmlA" base_Comment="_17RKMhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS-BRBEd-0fNU76fYmlA" base_Comment="_17RKNRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS-RRBEd-0fNU76fYmlA" base_Comment="_17RKLhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS-hRBEd-0fNU76fYmlA" base_Comment="_17RKOBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS-xRBEd-0fNU76fYmlA" base_Comment="_17RKQRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS_BRBEd-0fNU76fYmlA" base_Comment="_17RKPRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aS_RRBEd-0fNU76fYmlA" base_Comment="_17RKRBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS_hRBEd-0fNU76fYmlA" base_Comment="_17RIiBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aS_xRBEd-0fNU76fYmlA" base_Comment="_17RIjBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTABRBEd-0fNU76fYmlA" base_Comment="_17RIkBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTARRBEd-0fNU76fYmlA" base_Comment="_17RIlBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTAhRBEd-0fNU76fYmlA" base_Comment="_17RImBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTAxRBEd-0fNU76fYmlA" base_Comment="_17RInBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTBBRBEd-0fNU76fYmlA" base_Comment="_17RIoxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTBRRBEd-0fNU76fYmlA" base_Comment="_17RIthRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTBhRBEd-0fNU76fYmlA" base_Comment="_17RItBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTBxRBEd-0fNU76fYmlA" base_Comment="_17RIqhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTCBRBEd-0fNU76fYmlA" base_Comment="_17RIyhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTCRRBEd-0fNU76fYmlA" base_Comment="_17RIvBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTChRBEd-0fNU76fYmlA" base_Comment="_17RIvxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTCxRBEd-0fNU76fYmlA" base_Comment="_17RIzRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTDBRBEd-0fNU76fYmlA" base_Comment="_17RI0BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTDRRBEd-0fNU76fYmlA" base_Comment="_17RI0xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTDhRBEd-0fNU76fYmlA" base_Comment="_17RIxhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTDxRBEd-0fNU76fYmlA" base_Comment="_17RI3BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTEBRBEd-0fNU76fYmlA" base_Comment="_17RI7BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTERRBEd-0fNU76fYmlA" base_Comment="_17RI6hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTEhRBEd-0fNU76fYmlA" base_Comment="_17RI4BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTExRBEd-0fNU76fYmlA" base_Comment="_17RI5RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTFBRBEd-0fNU76fYmlA" base_Comment="_17RIoRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTFRRBEd-0fNU76fYmlA" base_Comment="_17RIuRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTFhRBEd-0fNU76fYmlA" base_Comment="_17RIwhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTFxRBEd-0fNU76fYmlA" base_Comment="_17RIxBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTGBRBEd-0fNU76fYmlA" base_Comment="_17RJQxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTGRRBEd-0fNU76fYmlA" base_Comment="_17RJRxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTGhRBEd-0fNU76fYmlA" base_Comment="_17RJTBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTGxRBEd-0fNU76fYmlA" base_Comment="_17RIORRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTHBRBEd-0fNU76fYmlA" base_Comment="_17RIPRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTHRRBEd-0fNU76fYmlA" base_Comment="_17RIpRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTHhRBEd-0fNU76fYmlA" base_Comment="_17RIJhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTHxRBEd-0fNU76fYmlA" base_Comment="_17RIKhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTIBRBEd-0fNU76fYmlA" base_Comment="_17RILhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTIRRBEd-0fNU76fYmlA" base_Comment="_17RIMRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTIhRBEd-0fNU76fYmlA" base_Comment="_17RINBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTIxRBEd-0fNU76fYmlA" base_Comment="_17RH6BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTJBRBEd-0fNU76fYmlA" base_Comment="_17RH7BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTJRRBEd-0fNU76fYmlA" base_Comment="_17RH8RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTJhRBEd-0fNU76fYmlA" base_Comment="_17RH-RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTJxRBEd-0fNU76fYmlA" base_Comment="_17RIAhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTKBRBEd-0fNU76fYmlA" base_Comment="_17RIBBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTKRRBEd-0fNU76fYmlA" base_Comment="_17RIBxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTKhRBEd-0fNU76fYmlA" base_Comment="_17RIDBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTKxRBEd-0fNU76fYmlA" base_Comment="_17RIERRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTLBRBEd-0fNU76fYmlA" base_Comment="_17RIFhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTLRRBEd-0fNU76fYmlA" base_Comment="_17RH0xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTLhRBEd-0fNU76fYmlA" base_Comment="_17RH1xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTLxRBEd-0fNU76fYmlA" base_Comment="_17RH3BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTMBRBEd-0fNU76fYmlA" base_Comment="_17RH4BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTMRRBEd-0fNU76fYmlA" base_Comment="_17RHshRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTMhRBEd-0fNU76fYmlA" base_Comment="_17RHthRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTMxRBEd-0fNU76fYmlA" base_Comment="_17RHrhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTNBRBEd-0fNU76fYmlA" base_Comment="_17RHgBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTNRRBEd-0fNU76fYmlA" base_Comment="_17RHhBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTNhRBEd-0fNU76fYmlA" base_Comment="_17RHiBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTNxRBEd-0fNU76fYmlA" base_Comment="_17RHoRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTOBRBEd-0fNU76fYmlA" base_Comment="_17RHkRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTORRBEd-0fNU76fYmlA" base_Comment="_17RHpBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTOhRBEd-0fNU76fYmlA" base_Comment="_17RHnxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTOxRBEd-0fNU76fYmlA" base_Comment="_17RHmhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTPBRBEd-0fNU76fYmlA" base_Comment="_17RHlhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTPRRBEd-0fNU76fYmlA" base_Comment="_17RHaRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTPhRBEd-0fNU76fYmlA" base_Comment="_17RHbRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTPxRBEd-0fNU76fYmlA" base_Comment="_17RHcRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTQBRBEd-0fNU76fYmlA" base_Comment="_17RHdRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTQRRBEd-0fNU76fYmlA" base_Comment="_17RHeBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTQhRBEd-0fNU76fYmlA" base_Comment="_17RHexRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTQxRBEd-0fNU76fYmlA" base_Comment="_17RHNRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTRBRBEd-0fNU76fYmlA" base_Comment="_17RHQRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTRRRBEd-0fNU76fYmlA" base_Comment="_17RHOxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTRhRBEd-0fNU76fYmlA" base_Comment="_17RHSBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTRxRBEd-0fNU76fYmlA" base_Comment="_17RHRRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTSBRBEd-0fNU76fYmlA" base_Comment="_17RHPxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTSRRBEd-0fNU76fYmlA" base_Comment="_17RHSxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTShRBEd-0fNU76fYmlA" base_Comment="_17RHThRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTSxRBEd-0fNU76fYmlA" base_Comment="_17RIfxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTTBRBEd-0fNU76fYmlA" base_Comment="_17RIgxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTTRRBEd-0fNU76fYmlA" base_Comment="_17RIbxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTThRBEd-0fNU76fYmlA" base_Comment="_17RIcxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTTxRBEd-0fNU76fYmlA" base_Comment="_17RIdRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTUBRBEd-0fNU76fYmlA" base_Comment="_17RIdxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTURRBEd-0fNU76fYmlA" base_Comment="_17RIehRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTUhRBEd-0fNU76fYmlA" base_Comment="_17RIfRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTUxRBEd-0fNU76fYmlA" base_Comment="_17RIQhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTVBRBEd-0fNU76fYmlA" base_Comment="_17RIRRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTVRRBEd-0fNU76fYmlA" base_Comment="_17RISRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTVhRBEd-0fNU76fYmlA" base_Comment="_17RITRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTVxRBEd-0fNU76fYmlA" base_Comment="_17RITxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTWBRBEd-0fNU76fYmlA" base_Comment="_17RIVBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTWRRBEd-0fNU76fYmlA" base_Comment="_17RIXBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTWhRBEd-0fNU76fYmlA" base_Comment="_17RIWRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTWxRBEd-0fNU76fYmlA" base_Comment="_17RIbBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTXBRBEd-0fNU76fYmlA" base_Comment="_17RIZxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTXRRBEd-0fNU76fYmlA" base_Comment="_17RJohRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTXhRBEd-0fNU76fYmlA" base_Comment="_17RJuRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTXxRBEd-0fNU76fYmlA" base_Comment="_17RJxRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTYBRBEd-0fNU76fYmlA" base_Comment="_17RJyRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTYRRBEd-0fNU76fYmlA" base_Comment="_17RJwBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTYhRBEd-0fNU76fYmlA" base_Comment="_17RJvRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTYxRBEd-0fNU76fYmlA" base_Comment="_17RJwhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTZBRBEd-0fNU76fYmlA" base_Comment="_17RG4hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTZRRBEd-0fNU76fYmlA" base_Comment="_17RG5hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTZhRBEd-0fNU76fYmlA" base_Comment="_17RG6hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTZxRBEd-0fNU76fYmlA" base_Comment="_17RG7hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTaBRBEd-0fNU76fYmlA" base_Comment="_17RG8BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTaRRBEd-0fNU76fYmlA" base_Comment="_17RG9BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTahRBEd-0fNU76fYmlA" base_Comment="_17RG9xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTaxRBEd-0fNU76fYmlA" base_Comment="_17Hr0hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTbBRBEd-0fNU76fYmlA" base_Comment="_17Hr1hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTbRRBEd-0fNU76fYmlA" base_Comment="_17Hr2BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTbhRBEd-0fNU76fYmlA" base_Comment="_17Hr3BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTbxRBEd-0fNU76fYmlA" base_Comment="_17Hr4BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTcBRBEd-0fNU76fYmlA" base_Comment="_17Hr6hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTcRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTchRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTcxRBEd-0fNU76fYmlA" base_Comment="_17Hr7hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTdBRBEd-0fNU76fYmlA" base_Comment="_17Hr8hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTdRRBEd-0fNU76fYmlA" base_Comment="_17Hr9hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTdhRBEd-0fNU76fYmlA" base_Comment="_17Hr-BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTdxRBEd-0fNU76fYmlA" base_Comment="_17HsFBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTeBRBEd-0fNU76fYmlA" base_Comment="_17HsGBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTeRRBEd-0fNU76fYmlA" base_Comment="_17HsDRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTehRBEd-0fNU76fYmlA" base_Comment="_17HsERRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTexRBEd-0fNU76fYmlA" base_Comment="_17Hr-xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTfBRBEd-0fNU76fYmlA" base_Comment="_17Hr_xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTfRRBEd-0fNU76fYmlA" base_Comment="_17HsAxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTfhRBEd-0fNU76fYmlA" base_Comment="_17HsBRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTfxRBEd-0fNU76fYmlA" base_Comment="_17HsCBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTgBRBEd-0fNU76fYmlA" base_Comment="_17HsGxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTgRRBEd-0fNU76fYmlA" base_Comment="_17HsHxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTghRBEd-0fNU76fYmlA" base_Comment="_17HsLBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTgxRBEd-0fNU76fYmlA" base_Comment="_17HsRRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aThBRBEd-0fNU76fYmlA" base_Comment="_17HsORRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aThRRBEd-0fNU76fYmlA" base_Comment="_17HsThRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aThhRBEd-0fNU76fYmlA" base_Comment="_17HsWhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aThxRBEd-0fNU76fYmlA" base_Comment="_17HsMxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTiBRBEd-0fNU76fYmlA" base_Comment="_17HsPxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTiRRBEd-0fNU76fYmlA" base_Comment="_17HsYBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTihRBEd-0fNU76fYmlA" base_Comment="_17HsZBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTixRBEd-0fNU76fYmlA" base_Comment="_17HsOxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTjBRBEd-0fNU76fYmlA" base_Comment="_17HsaRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTjRRBEd-0fNU76fYmlA" base_Comment="_17HsQhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTjhRBEd-0fNU76fYmlA" base_Comment="_17HsPRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTjxRBEd-0fNU76fYmlA" base_Comment="_17HsJRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTkBRBEd-0fNU76fYmlA" base_Comment="_17HsMRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aTkRRBEd-0fNU76fYmlA" base_Operation="_17RYLRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTkhRBEd-0fNU76fYmlA" base_Comment="_17RYLhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTkxRBEd-0fNU76fYmlA" base_Comment="_17RYLhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTlBRBEd-0fNU76fYmlA" base_Comment="_17RYRRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTlRRBEd-0fNU76fYmlA" base_Comment="_17RYRRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTlhRBEd-0fNU76fYmlA" base_Comment="_17RYWhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTlxRBEd-0fNU76fYmlA" base_Comment="_17RYWhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTmBRBEd-0fNU76fYmlA" base_Comment="_17RYMBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTmRRBEd-0fNU76fYmlA" base_Comment="_17RYMBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTmhRBEd-0fNU76fYmlA" base_Comment="_17RYNBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTmxRBEd-0fNU76fYmlA" base_Comment="_17RYNBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTnBRBEd-0fNU76fYmlA" base_Comment="_17RYOBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTnRRBEd-0fNU76fYmlA" base_Comment="_17RYOBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTnhRBEd-0fNU76fYmlA" base_Comment="_17RYPBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTnxRBEd-0fNU76fYmlA" base_Comment="_17RYPBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aToBRBEd-0fNU76fYmlA" base_Comment="_17RYThRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aToRRBEd-0fNU76fYmlA" base_Comment="_17RYThRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTohRBEd-0fNU76fYmlA" base_Comment="_17RYUhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aToxRBEd-0fNU76fYmlA" base_Comment="_17RYUhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTpBRBEd-0fNU76fYmlA" base_Comment="_17RYQhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTpRRBEd-0fNU76fYmlA" base_Comment="_17RYQhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTphRBEd-0fNU76fYmlA" base_Comment="_17RYVhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTpxRBEd-0fNU76fYmlA" base_Comment="_17RYVhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTqBRBEd-0fNU76fYmlA" base_Comment="_17RYSxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTqRRBEd-0fNU76fYmlA" base_Comment="_17RYSxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTqhRBEd-0fNU76fYmlA" base_Comment="_17RYXBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTqxRBEd-0fNU76fYmlA" base_Comment="_17RYXBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:init xmi:id="_17aTrBRBEd-0fNU76fYmlA" base_Class="_17RYYRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aTrRRBEd-0fNU76fYmlA" base_Operation="_17RYaBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTrhRBEd-0fNU76fYmlA" base_Comment="_17RYaRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTrxRBEd-0fNU76fYmlA" base_Comment="_17RYaRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTsBRBEd-0fNU76fYmlA" base_Comment="_17RYfRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTsRRBEd-0fNU76fYmlA" base_Comment="_17RYfRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTshRBEd-0fNU76fYmlA" base_Comment="_17RYgBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTsxRBEd-0fNU76fYmlA" base_Comment="_17RYgBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aTtBRBEd-0fNU76fYmlA" base_Operation="_17RYcRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTtRRBEd-0fNU76fYmlA" base_Comment="_17RYchRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTthRBEd-0fNU76fYmlA" base_Comment="_17RYchRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTtxRBEd-0fNU76fYmlA" base_Comment="_17RYdRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTuBRBEd-0fNU76fYmlA" base_Comment="_17RYdRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTuRRBEd-0fNU76fYmlA" base_Comment="_17RYgxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTuhRBEd-0fNU76fYmlA" base_Comment="_17RYgxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTuxRBEd-0fNU76fYmlA" base_Comment="_17RZABRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTvBRBEd-0fNU76fYmlA" base_Comment="_17RZABRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aTvRRBEd-0fNU76fYmlA" base_Operation="_17RYjBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTvhRBEd-0fNU76fYmlA" base_Comment="_17RYjRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTvxRBEd-0fNU76fYmlA" base_Comment="_17RYjRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTwBRBEd-0fNU76fYmlA" base_Comment="_17RZAhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTwRRBEd-0fNU76fYmlA" base_Comment="_17RZAhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTwhRBEd-0fNU76fYmlA" base_Comment="_17RZBRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTwxRBEd-0fNU76fYmlA" base_Comment="_17RZBRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTxBRBEd-0fNU76fYmlA" base_Comment="_17RYkBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTxRRBEd-0fNU76fYmlA" base_Comment="_17RYkBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTxhRBEd-0fNU76fYmlA" base_Comment="_17RYmRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTxxRBEd-0fNU76fYmlA" base_Comment="_17RYmRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTyBRBEd-0fNU76fYmlA" base_Comment="_17RYnRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTyRRBEd-0fNU76fYmlA" base_Comment="_17RYnRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTyhRBEd-0fNU76fYmlA" base_Comment="_17RZCBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTyxRBEd-0fNU76fYmlA" base_Comment="_17RZCBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTzBRBEd-0fNU76fYmlA" base_Comment="_17RYzBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTzRRBEd-0fNU76fYmlA" base_Comment="_17RYzBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aTzhRBEd-0fNU76fYmlA" base_Comment="_17RZChRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aTzxRBEd-0fNU76fYmlA" base_Comment="_17RZChRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT0BRBEd-0fNU76fYmlA" base_Comment="_17RY-RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT0RRBEd-0fNU76fYmlA" base_Comment="_17RY-RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT0hRBEd-0fNU76fYmlA" base_Comment="_17RY3xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT0xRBEd-0fNU76fYmlA" base_Comment="_17RY3xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT1BRBEd-0fNU76fYmlA" base_Comment="_17RZDBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT1RRBEd-0fNU76fYmlA" base_Comment="_17RZDBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT1hRBEd-0fNU76fYmlA" base_Comment="_17RZDhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT1xRBEd-0fNU76fYmlA" base_Comment="_17RZDhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT2BRBEd-0fNU76fYmlA" base_Comment="_17RZEBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT2RRBEd-0fNU76fYmlA" base_Comment="_17RZEBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT2hRBEd-0fNU76fYmlA" base_Comment="_17RZExRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT2xRBEd-0fNU76fYmlA" base_Comment="_17RZExRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT3BRBEd-0fNU76fYmlA" base_Comment="_17RZFRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT3RRBEd-0fNU76fYmlA" base_Comment="_17RZFRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT3hRBEd-0fNU76fYmlA" base_Comment="_17RZGhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT3xRBEd-0fNU76fYmlA" base_Comment="_17RZGhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT4BRBEd-0fNU76fYmlA" base_Comment="_17RYxhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT4RRBEd-0fNU76fYmlA" base_Comment="_17RYxhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT4hRBEd-0fNU76fYmlA" base_Comment="_17RYrBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT4xRBEd-0fNU76fYmlA" base_Comment="_17RYrBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT5BRBEd-0fNU76fYmlA" base_Comment="_17RYsxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT5RRBEd-0fNU76fYmlA" base_Comment="_17RYsxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT5hRBEd-0fNU76fYmlA" base_Comment="_17RZHRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT5xRBEd-0fNU76fYmlA" base_Comment="_17RZHRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT6BRBEd-0fNU76fYmlA" base_Comment="_17RZIhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT6RRBEd-0fNU76fYmlA" base_Comment="_17RZIhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT6hRBEd-0fNU76fYmlA" base_Comment="_17RZJhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT6xRBEd-0fNU76fYmlA" base_Comment="_17RZJhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT7BRBEd-0fNU76fYmlA" base_Comment="_17RYpBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT7RRBEd-0fNU76fYmlA" base_Comment="_17RYpBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT7hRBEd-0fNU76fYmlA" base_Comment="_17RZKxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT7xRBEd-0fNU76fYmlA" base_Comment="_17RZKxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT8BRBEd-0fNU76fYmlA" base_Comment="_17RZMBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT8RRBEd-0fNU76fYmlA" base_Comment="_17RZMBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT8hRBEd-0fNU76fYmlA" base_Comment="_17RY5BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT8xRBEd-0fNU76fYmlA" base_Comment="_17RY5BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT9BRBEd-0fNU76fYmlA" base_Comment="_17RZLhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT9RRBEd-0fNU76fYmlA" base_Comment="_17RZLhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT9hRBEd-0fNU76fYmlA" base_Comment="_17RZMhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT9xRBEd-0fNU76fYmlA" base_Comment="_17RZMhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT-BRBEd-0fNU76fYmlA" base_Comment="_17RZNRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT-RRBEd-0fNU76fYmlA" base_Comment="_17RZNRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT-hRBEd-0fNU76fYmlA" base_Comment="_17RY0RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT-xRBEd-0fNU76fYmlA" base_Comment="_17RY0RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT_BRBEd-0fNU76fYmlA" base_Comment="_17RY8xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT_RRBEd-0fNU76fYmlA" base_Comment="_17RY8xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aT_hRBEd-0fNU76fYmlA" base_Comment="_17RY2BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aT_xRBEd-0fNU76fYmlA" base_Comment="_17RY2BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUABRBEd-0fNU76fYmlA" base_Comment="_17RY6RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUARRBEd-0fNU76fYmlA" base_Comment="_17RY6RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUAhRBEd-0fNU76fYmlA" base_Comment="_17RY_BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUAxRBEd-0fNU76fYmlA" base_Comment="_17RY_BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUBBRBEd-0fNU76fYmlA" base_Comment="_17RZOBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUBRRBEd-0fNU76fYmlA" base_Comment="_17RZOBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aUBhRBEd-0fNU76fYmlA" base_Operation="_17RZcRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUBxRBEd-0fNU76fYmlA" base_Comment="_17RZchRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUCBRBEd-0fNU76fYmlA" base_Comment="_17RZchRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aUCRRBEd-0fNU76fYmlA" base_Operation="_17RZexRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUChRBEd-0fNU76fYmlA" base_Comment="_17RZfBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUCxRBEd-0fNU76fYmlA" base_Comment="_17RZfBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUDBRBEd-0fNU76fYmlA" base_Comment="_17RZfxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUDRRBEd-0fNU76fYmlA" base_Comment="_17RZfxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUDhRBEd-0fNU76fYmlA" base_Comment="_17RZgxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUDxRBEd-0fNU76fYmlA" base_Comment="_17RZgxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUEBRBEd-0fNU76fYmlA" base_Comment="_17RZhxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUERRBEd-0fNU76fYmlA" base_Comment="_17RZhxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUEhRBEd-0fNU76fYmlA" base_Comment="_17RZixRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUExRBEd-0fNU76fYmlA" base_Comment="_17RZixRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUFBRBEd-0fNU76fYmlA" base_Comment="_17RZjhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUFRRBEd-0fNU76fYmlA" base_Comment="_17RZjhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUFhRBEd-0fNU76fYmlA" base_Comment="_17RZkhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUFxRBEd-0fNU76fYmlA" base_Comment="_17RZkhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUGBRBEd-0fNU76fYmlA" base_Comment="_17RZlxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUGRRBEd-0fNU76fYmlA" base_Comment="_17RZlxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUGhRBEd-0fNU76fYmlA" base_Comment="_17RZmxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUGxRBEd-0fNU76fYmlA" base_Comment="_17RZmxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUHBRBEd-0fNU76fYmlA" base_Comment="_17RZnRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUHRRBEd-0fNU76fYmlA" base_Comment="_17RZnRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUHhRBEd-0fNU76fYmlA" base_Comment="_17RZoBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUHxRBEd-0fNU76fYmlA" base_Comment="_17RZoBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUIBRBEd-0fNU76fYmlA" base_Comment="_17RZpRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUIRRBEd-0fNU76fYmlA" base_Comment="_17RZpRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUIhRBEd-0fNU76fYmlA" base_Comment="_17RZqhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUIxRBEd-0fNU76fYmlA" base_Comment="_17RZqhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUJBRBEd-0fNU76fYmlA" base_Comment="_17RZrxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUJRRBEd-0fNU76fYmlA" base_Comment="_17RZrxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUJhRBEd-0fNU76fYmlA" base_Comment="_17RZtBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUJxRBEd-0fNU76fYmlA" base_Comment="_17RZtBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUKBRBEd-0fNU76fYmlA" base_Comment="_17RZuRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUKRRBEd-0fNU76fYmlA" base_Comment="_17RZuRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aUKhRBEd-0fNU76fYmlA" base_Operation="_17RZvhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUKxRBEd-0fNU76fYmlA" base_Comment="_17RZvxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aULBRBEd-0fNU76fYmlA" base_Comment="_17RZvxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aULRRBEd-0fNU76fYmlA" base_Comment="_17RZwhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aULhRBEd-0fNU76fYmlA" base_Comment="_17RZwhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aULxRBEd-0fNU76fYmlA" base_Comment="_17RZxhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUMBRBEd-0fNU76fYmlA" base_Comment="_17RZxhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUMRRBEd-0fNU76fYmlA" base_Comment="_17RZyRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUMhRBEd-0fNU76fYmlA" base_Comment="_17RZyRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUMxRBEd-0fNU76fYmlA" base_Comment="_17RZ0hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUNBRBEd-0fNU76fYmlA" base_Comment="_17RZ0hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUNRRBEd-0fNU76fYmlA" base_Comment="_17RZ3hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUNhRBEd-0fNU76fYmlA" base_Comment="_17RZ3hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aUNxRBEd-0fNU76fYmlA" base_Operation="_17RaNhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUOBRBEd-0fNU76fYmlA" base_Comment="_17RaNxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUORRBEd-0fNU76fYmlA" base_Comment="_17RaNxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUOhRBEd-0fNU76fYmlA" base_Comment="_17RaOhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUOxRBEd-0fNU76fYmlA" base_Comment="_17RaOhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUPBRBEd-0fNU76fYmlA" base_Comment="_17RaQxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUPRRBEd-0fNU76fYmlA" base_Comment="_17RaQxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUPhRBEd-0fNU76fYmlA" base_Comment="_17RaUhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUPxRBEd-0fNU76fYmlA" base_Comment="_17RaUhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUQBRBEd-0fNU76fYmlA" base_Comment="_17RaWBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUQRRBEd-0fNU76fYmlA" base_Comment="_17RaWBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUQhRBEd-0fNU76fYmlA" base_Comment="_17RaXRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUQxRBEd-0fNU76fYmlA" base_Comment="_17RaXRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aURBRBEd-0fNU76fYmlA" base_Comment="_17RaYxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aURRRBEd-0fNU76fYmlA" base_Comment="_17RaYxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aURhRBEd-0fNU76fYmlA" base_Comment="_17RaaBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aURxRBEd-0fNU76fYmlA" base_Comment="_17RaaBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUSBRBEd-0fNU76fYmlA" base_Comment="_17RabhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUSRRBEd-0fNU76fYmlA" base_Comment="_17RabhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUShRBEd-0fNU76fYmlA" base_Comment="_17RacxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUSxRBEd-0fNU76fYmlA" base_Comment="_17RacxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUTBRBEd-0fNU76fYmlA" base_Comment="_17RaeRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUTRRBEd-0fNU76fYmlA" base_Comment="_17RaeRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUThRBEd-0fNU76fYmlA" base_Comment="_17RafhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUTxRBEd-0fNU76fYmlA" base_Comment="_17RafhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUUBRBEd-0fNU76fYmlA" base_Comment="_17RahBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUURRBEd-0fNU76fYmlA" base_Comment="_17RahBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUUhRBEd-0fNU76fYmlA" base_Comment="_17RamBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUUxRBEd-0fNU76fYmlA" base_Comment="_17RamBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUVBRBEd-0fNU76fYmlA" base_Comment="_17RanxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUVRRBEd-0fNU76fYmlA" base_Comment="_17RanxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUVhRBEd-0fNU76fYmlA" base_Comment="_17RarhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUVxRBEd-0fNU76fYmlA" base_Comment="_17RarhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aUWBRBEd-0fNU76fYmlA" base_Operation="_17RavhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUWRRBEd-0fNU76fYmlA" base_Comment="_17RavxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUWhRBEd-0fNU76fYmlA" base_Comment="_17RavxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUWxRBEd-0fNU76fYmlA" base_Comment="_17RaxxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUXBRBEd-0fNU76fYmlA" base_Comment="_17RaxxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUXRRBEd-0fNU76fYmlA" base_Comment="_17RazxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUXhRBEd-0fNU76fYmlA" base_Comment="_17RazxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aUXxRBEd-0fNU76fYmlA" base_Operation="_17Ra1BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUYBRBEd-0fNU76fYmlA" base_Comment="_17Ra1RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUYRRBEd-0fNU76fYmlA" base_Comment="_17Ra1RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUYhRBEd-0fNU76fYmlA" base_Comment="_17Ra2hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUYxRBEd-0fNU76fYmlA" base_Comment="_17Ra2hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUZBRBEd-0fNU76fYmlA" base_Comment="_17Ra4xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUZRRBEd-0fNU76fYmlA" base_Comment="_17Ra4xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUZhRBEd-0fNU76fYmlA" base_Comment="_17Ra7BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUZxRBEd-0fNU76fYmlA" base_Comment="_17Ra7BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUaBRBEd-0fNU76fYmlA" base_Comment="_17Ra9BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUaRRBEd-0fNU76fYmlA" base_Comment="_17Ra9BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUahRBEd-0fNU76fYmlA" base_Comment="_17Ra-RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUaxRBEd-0fNU76fYmlA" base_Comment="_17Ra-RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUbBRBEd-0fNU76fYmlA" base_Comment="_17RbDRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUbRRBEd-0fNU76fYmlA" base_Comment="_17RbDRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUbhRBEd-0fNU76fYmlA" base_Comment="_17RbFxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUbxRBEd-0fNU76fYmlA" base_Comment="_17RbFxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUcBRBEd-0fNU76fYmlA" base_Comment="_17RbIBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUcRRBEd-0fNU76fYmlA" base_Comment="_17RbIBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUchRBEd-0fNU76fYmlA" base_Comment="_17RbIxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUcxRBEd-0fNU76fYmlA" base_Comment="_17RbIxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUdBRBEd-0fNU76fYmlA" base_Comment="_17RbJhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUdRRBEd-0fNU76fYmlA" base_Comment="_17RbJhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUdhRBEd-0fNU76fYmlA" base_Comment="_17aQohRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUdxRBEd-0fNU76fYmlA" base_Comment="_17aQohRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUeBRBEd-0fNU76fYmlA" base_Comment="_17aQpRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUeRRBEd-0fNU76fYmlA" base_Comment="_17aQpRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUehRBEd-0fNU76fYmlA" base_Comment="_17aQqxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUexRBEd-0fNU76fYmlA" base_Comment="_17aQqxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUfBRBEd-0fNU76fYmlA" base_Comment="_17aQrhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUfRRBEd-0fNU76fYmlA" base_Comment="_17aQrhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUfhRBEd-0fNU76fYmlA" base_Comment="_17aQsRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUfxRBEd-0fNU76fYmlA" base_Comment="_17aQsRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUgBRBEd-0fNU76fYmlA" base_Comment="_17aQsxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUgRRBEd-0fNU76fYmlA" base_Comment="_17aQsxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUghRBEd-0fNU76fYmlA" base_Comment="_17aQtRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUgxRBEd-0fNU76fYmlA" base_Comment="_17aQtRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUhBRBEd-0fNU76fYmlA" base_Comment="_17aQuBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUhRRBEd-0fNU76fYmlA" base_Comment="_17aQuBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUhhRBEd-0fNU76fYmlA" base_Comment="_17aQuxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUhxRBEd-0fNU76fYmlA" base_Comment="_17aQuxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUiBRBEd-0fNU76fYmlA" base_Comment="_17aQvhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUiRRBEd-0fNU76fYmlA" base_Comment="_17aQvhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUihRBEd-0fNU76fYmlA" base_Comment="_17aQwBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUixRBEd-0fNU76fYmlA" base_Comment="_17aQwBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUjBRBEd-0fNU76fYmlA" base_Comment="_17aQwxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUjRRBEd-0fNU76fYmlA" base_Comment="_17aQwxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUjhRBEd-0fNU76fYmlA" base_Comment="_17aQzxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUjxRBEd-0fNU76fYmlA" base_Comment="_17aQzxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUkBRBEd-0fNU76fYmlA" base_Comment="_17aQ-hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUkRRBEd-0fNU76fYmlA" base_Comment="_17aQ-hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUkhRBEd-0fNU76fYmlA" base_Comment="_17aQ_xRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUkxRBEd-0fNU76fYmlA" base_Comment="_17aQ_xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUlBRBEd-0fNU76fYmlA" base_Comment="_17aRCBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUlRRBEd-0fNU76fYmlA" base_Comment="_17aRCBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUlhRBEd-0fNU76fYmlA" base_Comment="_17aREBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUlxRBEd-0fNU76fYmlA" base_Comment="_17aREBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUmBRBEd-0fNU76fYmlA" base_Comment="_17aRGBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUmRRBEd-0fNU76fYmlA" base_Comment="_17aRGBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUmhRBEd-0fNU76fYmlA" base_Comment="_17aRHRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUmxRBEd-0fNU76fYmlA" base_Comment="_17aRHRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aUnBRBEd-0fNU76fYmlA" base_Operation="_17aRKBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUnRRBEd-0fNU76fYmlA" base_Comment="_17aRKRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUnhRBEd-0fNU76fYmlA" base_Comment="_17aRKRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUnxRBEd-0fNU76fYmlA" base_Comment="_17aRLBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUoBRBEd-0fNU76fYmlA" base_Comment="_17aRLBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUoRRBEd-0fNU76fYmlA" base_Comment="_17aRLxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUohRBEd-0fNU76fYmlA" base_Comment="_17aRLxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUoxRBEd-0fNU76fYmlA" base_Comment="_17aRMhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUpBRBEd-0fNU76fYmlA" base_Comment="_17aRMhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUpRRBEd-0fNU76fYmlA" base_Comment="_17aRNRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUphRBEd-0fNU76fYmlA" base_Comment="_17aRNRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUpxRBEd-0fNU76fYmlA" base_Comment="_17aROBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUqBRBEd-0fNU76fYmlA" base_Comment="_17aROBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUqRRBEd-0fNU76fYmlA" base_Comment="_17aRPxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUqhRBEd-0fNU76fYmlA" base_Comment="_17aRPxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUqxRBEd-0fNU76fYmlA" base_Comment="_17aRQxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUrBRBEd-0fNU76fYmlA" base_Comment="_17aRQxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUrRRBEd-0fNU76fYmlA" base_Comment="_17aRRhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUrhRBEd-0fNU76fYmlA" base_Comment="_17aRRhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUrxRBEd-0fNU76fYmlA" base_Comment="_17aRSBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUsBRBEd-0fNU76fYmlA" base_Comment="_17aRSBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUsRRBEd-0fNU76fYmlA" base_Comment="_17aRSxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUshRBEd-0fNU76fYmlA" base_Comment="_17aRSxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUsxRBEd-0fNU76fYmlA" base_Comment="_17aRTxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUtBRBEd-0fNU76fYmlA" base_Comment="_17aRTxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUtRRBEd-0fNU76fYmlA" base_Comment="_17aRUxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUthRBEd-0fNU76fYmlA" base_Comment="_17aRUxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUtxRBEd-0fNU76fYmlA" base_Comment="_17aRWRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUuBRBEd-0fNU76fYmlA" base_Comment="_17aRWRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUuRRBEd-0fNU76fYmlA" base_Comment="_17aRYRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUuhRBEd-0fNU76fYmlA" base_Comment="_17aRYRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUuxRBEd-0fNU76fYmlA" base_Comment="_17aRhRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUvBRBEd-0fNU76fYmlA" base_Comment="_17aRjRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUvRRBEd-0fNU76fYmlA" base_Comment="_17aRjRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUvhRBEd-0fNU76fYmlA" base_Comment="_17aRkBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUvxRBEd-0fNU76fYmlA" base_Comment="_17aRkBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUwBRBEd-0fNU76fYmlA" base_Comment="_17aRlRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUwRRBEd-0fNU76fYmlA" base_Comment="_17aRlRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUwhRBEd-0fNU76fYmlA" base_Comment="_17aRmBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUwxRBEd-0fNU76fYmlA" base_Comment="_17aRmBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUxBRBEd-0fNU76fYmlA" base_Comment="_17aRmhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUxRRBEd-0fNU76fYmlA" base_Comment="_17aRmhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUxhRBEd-0fNU76fYmlA" base_Comment="_17aRnBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUxxRBEd-0fNU76fYmlA" base_Comment="_17aRnBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUyBRBEd-0fNU76fYmlA" base_Comment="_17aRnxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUyRRBEd-0fNU76fYmlA" base_Comment="_17aRnxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aUyhRBEd-0fNU76fYmlA" base_Operation="_17aRoRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUyxRBEd-0fNU76fYmlA" base_Comment="_17aRohRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUzBRBEd-0fNU76fYmlA" base_Comment="_17aRohRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUzRRBEd-0fNU76fYmlA" base_Comment="_17aRrBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aUzhRBEd-0fNU76fYmlA" base_Comment="_17aRrBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aUzxRBEd-0fNU76fYmlA" base_Comment="_17aRrxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aU0BRBEd-0fNU76fYmlA" base_Comment="_17aRrxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aU0RRBEd-0fNU76fYmlA" base_Operation="_17aRsRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU0hRBEd-0fNU76fYmlA" base_Comment="_17aRshRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aU0xRBEd-0fNU76fYmlA" base_Comment="_17aRshRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU1BRBEd-0fNU76fYmlA" base_Comment="_17aRthRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aU1RRBEd-0fNU76fYmlA" base_Comment="_17aRthRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU1hRBEd-0fNU76fYmlA" base_Comment="_17aRuRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aU1xRBEd-0fNU76fYmlA" base_Comment="_17aRuRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU2BRBEd-0fNU76fYmlA" base_Comment="_17aRuxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aU2RRBEd-0fNU76fYmlA" base_Comment="_17aRuxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU2hRBEd-0fNU76fYmlA" base_Comment="_17aRvRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aU2xRBEd-0fNU76fYmlA" base_Comment="_17aRvRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU3BRBEd-0fNU76fYmlA" base_Comment="_17RRcxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU3RRBEd-0fNU76fYmlA" base_Comment="_17RPwxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU3hRBEd-0fNU76fYmlA" base_Comment="_17RPxhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU3xRBEd-0fNU76fYmlA" base_Comment="_17RP2xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU4BRBEd-0fNU76fYmlA" base_Comment="_17RPnxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU4RRBEd-0fNU76fYmlA" base_Comment="_17RPohRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU4hRBEd-0fNU76fYmlA" base_Comment="_17RPpRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU4xRBEd-0fNU76fYmlA" base_Comment="_17RPqBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU5BRBEd-0fNU76fYmlA" base_Comment="_17RPqxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU5RRBEd-0fNU76fYmlA" base_Comment="_17RPrhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU5hRBEd-0fNU76fYmlA" base_Comment="_17RQvhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aU5xRBEd-0fNU76fYmlA" base_Operation="_17RPnBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU6BRBEd-0fNU76fYmlA" base_Comment="_17RPnRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU6RRBEd-0fNU76fYmlA" base_Comment="_17RPUhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU6hRBEd-0fNU76fYmlA" base_Comment="_17RPaxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU6xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU7BRBEd-0fNU76fYmlA" base_Comment="_17RPWxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU7RRBEd-0fNU76fYmlA" base_Comment="_17RPdBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU7hRBEd-0fNU76fYmlA" base_Comment="_17RPdxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU7xRBEd-0fNU76fYmlA" base_Comment="_17RPSRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU8BRBEd-0fNU76fYmlA" base_Comment="_17RPPBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU8RRBEd-0fNU76fYmlA" base_Comment="_17RPPxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU8hRBEd-0fNU76fYmlA" base_Comment="_17RQqhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU8xRBEd-0fNU76fYmlA" base_Comment="_17RQrRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU9BRBEd-0fNU76fYmlA" base_Comment="_17RROxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU9RRBEd-0fNU76fYmlA" base_Comment="_17RRPhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU9hRBEd-0fNU76fYmlA" base_Comment="_17RRQRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU9xRBEd-0fNU76fYmlA" base_Comment="_17RP3hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU-BRBEd-0fNU76fYmlA" base_Comment="_17RRRBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU-RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU-hRBEd-0fNU76fYmlA" base_Comment="_17RRRxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU-xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU_BRBEd-0fNU76fYmlA" base_Comment="_17RRTxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU_RRBEd-0fNU76fYmlA" base_Comment="_17RRVRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU_hRBEd-0fNU76fYmlA" base_Comment="_17RRqRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aU_xRBEd-0fNU76fYmlA" base_Comment="_17RRrBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVABRBEd-0fNU76fYmlA" base_Comment="_17RO3RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVARRBEd-0fNU76fYmlA" base_Comment="_17RO6RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVAhRBEd-0fNU76fYmlA" base_Comment="_17RO5hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVAxRBEd-0fNU76fYmlA" base_Comment="_17RO7xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVBBRBEd-0fNU76fYmlA" base_Comment="_17RO4xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVBRRBEd-0fNU76fYmlA" base_Comment="_17RO7BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVBhRBEd-0fNU76fYmlA" base_Comment="_17RO4BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVBxRBEd-0fNU76fYmlA" base_Comment="_17RPIxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVCBRBEd-0fNU76fYmlA" base_Comment="_17RPJhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVCRRBEd-0fNU76fYmlA" base_Comment="_17RO8hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVChRBEd-0fNU76fYmlA" base_Comment="_17RQVxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVCxRBEd-0fNU76fYmlA" base_Comment="_17RQURRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVDBRBEd-0fNU76fYmlA" base_Comment="_17RQYBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVDRRBEd-0fNU76fYmlA" base_Comment="_17RQWhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVDhRBEd-0fNU76fYmlA" base_Comment="_17RQXRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVDxRBEd-0fNU76fYmlA" base_Comment="_17RQVBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVEBRBEd-0fNU76fYmlA" base_Comment="_17RQThRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVERRBEd-0fNU76fYmlA" base_Comment="_17RQGBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVEhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVExRBEd-0fNU76fYmlA" base_Comment="_17RQGxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVFBRBEd-0fNU76fYmlA" base_Comment="_17RPAxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVFRRBEd-0fNU76fYmlA" base_Comment="_17RPBhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVFhRBEd-0fNU76fYmlA" base_Comment="_17RPCRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVFxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVGBRBEd-0fNU76fYmlA" base_Comment="_17RQHhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVGRRBEd-0fNU76fYmlA" base_Comment="_17RRARRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVGhRBEd-0fNU76fYmlA" base_Comment="_17RRBBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVGxRBEd-0fNU76fYmlA" base_Comment="_17RRBxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVHBRBEd-0fNU76fYmlA" base_Comment="_17RRChRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVHRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVHhRBEd-0fNU76fYmlA" base_Comment="_17RRDRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVHxRBEd-0fNU76fYmlA" base_Comment="_17RQlRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVIBRBEd-0fNU76fYmlA" base_Comment="_17RQmBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVIRRBEd-0fNU76fYmlA" base_Comment="_17RR0RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVIhRBEd-0fNU76fYmlA" base_Comment="_17RR1BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVIxRBEd-0fNU76fYmlA" base_Comment="_17RRYxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVJBRBEd-0fNU76fYmlA" base_Comment="_17RRfxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVJRRBEd-0fNU76fYmlA" base_Comment="_17RQNBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVJhRBEd-0fNU76fYmlA" base_Comment="_17RRExRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVJxRBEd-0fNU76fYmlA" base_Comment="_17RORxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVKBRBEd-0fNU76fYmlA" base_Comment="_17ROShRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aVKRRBEd-0fNU76fYmlA" base_Operation="_17ROYRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVKhRBEd-0fNU76fYmlA" base_Comment="_17ROYhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVKxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVLBRBEd-0fNU76fYmlA" base_Comment="_17ROZBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVLRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVLhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVLxRBEd-0fNU76fYmlA" base_Comment="_17RQIRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVMBRBEd-0fNU76fYmlA" base_Comment="_17RREBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVMRRBEd-0fNU76fYmlA" base_Comment="_17ROshRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVMhRBEd-0fNU76fYmlA" base_Comment="_17ROmRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVMxRBEd-0fNU76fYmlA" base_Comment="_17ROjxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVNBRBEd-0fNU76fYmlA" base_Comment="_17ROoRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVNRRBEd-0fNU76fYmlA" base_Comment="_17RTNxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVNhRBEd-0fNU76fYmlA" base_Comment="_17RTOhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVNxRBEd-0fNU76fYmlA" base_Comment="_17RStRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVOBRBEd-0fNU76fYmlA" base_Comment="_17RS-hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVORRBEd-0fNU76fYmlA" base_Comment="_17RS1xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVOhRBEd-0fNU76fYmlA" base_Comment="_17RS2hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVOxRBEd-0fNU76fYmlA" base_Comment="_17RTPRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVPBRBEd-0fNU76fYmlA" base_Comment="_17RTGBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVPRRBEd-0fNU76fYmlA" base_Comment="_17RTGxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVPhRBEd-0fNU76fYmlA" base_Comment="_17RTHhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVPxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVQBRBEd-0fNU76fYmlA" base_Comment="_17RTdxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVQRRBEd-0fNU76fYmlA" base_Comment="_17RTehRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVQhRBEd-0fNU76fYmlA" base_Comment="_17RTfRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVQxRBEd-0fNU76fYmlA" base_Comment="_17RUCRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVRBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVRRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVRhRBEd-0fNU76fYmlA" base_Comment="_17RUDBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVRxRBEd-0fNU76fYmlA" base_Comment="_17RUAxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVSBRBEd-0fNU76fYmlA" base_Comment="_17RUBhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVSRRBEd-0fNU76fYmlA" base_Comment="_17RT4xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVShRBEd-0fNU76fYmlA" base_Comment="_17RT5hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVSxRBEd-0fNU76fYmlA" base_Comment="_17RT6RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVTBRBEd-0fNU76fYmlA" base_Comment="_17RT7BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVTRRBEd-0fNU76fYmlA" base_Comment="_17RT7xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVThRBEd-0fNU76fYmlA" base_Comment="_17RTrRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVTxRBEd-0fNU76fYmlA" base_Comment="_17RTsBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVUBRBEd-0fNU76fYmlA" base_Comment="_17RTsxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVURRBEd-0fNU76fYmlA" base_Comment="_17RTthRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVUhRBEd-0fNU76fYmlA" base_Comment="_17RTuRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVUxRBEd-0fNU76fYmlA" base_Comment="_17RTvBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVVBRBEd-0fNU76fYmlA" base_Comment="_17RTvxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVVRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVVhRBEd-0fNU76fYmlA" base_Comment="_17RTwhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVVxRBEd-0fNU76fYmlA" base_Comment="_17RUkxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVWBRBEd-0fNU76fYmlA" base_Comment="_17RUlhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVWRRBEd-0fNU76fYmlA" base_Comment="_17RUmRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVWhRBEd-0fNU76fYmlA" base_Comment="_17ROZxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVWxRBEd-0fNU76fYmlA" base_Comment="_17RTQBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVXBRBEd-0fNU76fYmlA" base_Comment="_17RVLxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVXRRBEd-0fNU76fYmlA" base_Comment="_17RVMhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVXhRBEd-0fNU76fYmlA" base_Comment="_17RUxRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVXxRBEd-0fNU76fYmlA" base_Comment="_17RUzhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVYBRBEd-0fNU76fYmlA" base_Comment="_17RU0RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVYRRBEd-0fNU76fYmlA" base_Comment="_17RU1BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVYhRBEd-0fNU76fYmlA" base_Comment="_17RUyBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVYxRBEd-0fNU76fYmlA" base_Comment="_17RUyxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVZBRBEd-0fNU76fYmlA" base_Comment="_17RU4BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVZRRBEd-0fNU76fYmlA" base_Comment="_17RU7RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVZhRBEd-0fNU76fYmlA" base_Comment="_17RVBhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVZxRBEd-0fNU76fYmlA" base_Comment="_17RVGRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVaBRBEd-0fNU76fYmlA" base_Comment="_17RVHBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVaRRBEd-0fNU76fYmlA" base_Comment="_17RUuBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVahRBEd-0fNU76fYmlA" base_Comment="_17RUuxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVaxRBEd-0fNU76fYmlA" base_Comment="_17RWWxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVbBRBEd-0fNU76fYmlA" base_Comment="_17RWXhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVbRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVbhRBEd-0fNU76fYmlA" base_Comment="_17RWeBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVbxRBEd-0fNU76fYmlA" base_Comment="_17RWexRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVcBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVcRRBEd-0fNU76fYmlA" base_Comment="_17RVjRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVchRBEd-0fNU76fYmlA" base_Comment="_17RV2xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVcxRBEd-0fNU76fYmlA" base_Comment="_17RVpBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVdBRBEd-0fNU76fYmlA" base_Comment="_17RVoRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVdRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVdhRBEd-0fNU76fYmlA" base_Comment="_17RVkBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVdxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVeBRBEd-0fNU76fYmlA" base_Comment="_17RWfhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVeRRBEd-0fNU76fYmlA" base_Comment="_17RVeBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVehRBEd-0fNU76fYmlA" base_Comment="_17RVexRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVexRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVfBRBEd-0fNU76fYmlA" base_Comment="_17RV5RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVfRRBEd-0fNU76fYmlA" base_Comment="_17RWQBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVfhRBEd-0fNU76fYmlA" base_Comment="_17RVtBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVfxRBEd-0fNU76fYmlA" base_Comment="_17RVtxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVgBRBEd-0fNU76fYmlA" base_Comment="_17RWihRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVgRRBEd-0fNU76fYmlA" base_Comment="_17RWjRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVghRBEd-0fNU76fYmlA" base_Comment="_17RVxxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVgxRBEd-0fNU76fYmlA" base_Comment="_17RV8hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVhBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVhRRBEd-0fNU76fYmlA" base_Comment="_17RV9RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVhhRBEd-0fNU76fYmlA" base_Comment="_17RWExRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVhxRBEd-0fNU76fYmlA" base_Comment="_17RWFhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aViBRBEd-0fNU76fYmlA" base_Comment="_17RV0RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aViRRBEd-0fNU76fYmlA" base_Comment="_17RWNBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVihRBEd-0fNU76fYmlA" base_Comment="_17RWNxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVixRBEd-0fNU76fYmlA" base_Comment="_17RWShRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVjBRBEd-0fNU76fYmlA" base_Comment="_17RWaBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVjRRBEd-0fNU76fYmlA" base_Comment="_17RWAhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVjhRBEd-0fNU76fYmlA" base_Comment="_17RWBRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVjxRBEd-0fNU76fYmlA" base_Comment="_17RWIxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVkBRBEd-0fNU76fYmlA" base_Comment="_17RWJhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVkRRBEd-0fNU76fYmlA" base_Comment="_17RXoxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVkhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVkxRBEd-0fNU76fYmlA" base_Comment="_17RXphRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVlBRBEd-0fNU76fYmlA" base_Comment="_17RXSRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVlRRBEd-0fNU76fYmlA" base_Comment="_17RXZBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVlhRBEd-0fNU76fYmlA" base_Comment="_17RXRhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVlxRBEd-0fNU76fYmlA" base_Comment="_17RXCxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVmBRBEd-0fNU76fYmlA" base_Comment="_17RXYRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVmRRBEd-0fNU76fYmlA" base_Comment="_17RXfhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVmhRBEd-0fNU76fYmlA" base_Comment="_17RXgRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVmxRBEd-0fNU76fYmlA" base_Comment="_17RXexRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVnBRBEd-0fNU76fYmlA" base_Comment="_17RXXhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVnRRBEd-0fNU76fYmlA" base_Comment="_17RXFxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVnhRBEd-0fNU76fYmlA" base_Comment="_17RXhBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVnxRBEd-0fNU76fYmlA" base_Comment="_17RXLBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVoBRBEd-0fNU76fYmlA" base_Comment="_17RXLxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVoRRBEd-0fNU76fYmlA" base_Comment="_17RXMhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVohRBEd-0fNU76fYmlA" base_Comment="_17RXNRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVoxRBEd-0fNU76fYmlA" base_Comment="_17RVxBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aVpBRBEd-0fNU76fYmlA" base_Comment="_17RYuhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVpRRBEd-0fNU76fYmlA" base_Comment="_17RYuhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVphRBEd-0fNU76fYmlA" base_Comment="_17RYwBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aVpxRBEd-0fNU76fYmlA" base_Comment="_17RYwBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVqBRBEd-0fNU76fYmlA" base_Comment="_17RVkxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVqRRBEd-0fNU76fYmlA" base_Comment="_17RHWRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVqhRBEd-0fNU76fYmlA" base_Comment="_17RHXBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVqxRBEd-0fNU76fYmlA" base_Comment="_17RHZBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVrBRBEd-0fNU76fYmlA" base_Comment="_17RI2RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVrRRBEd-0fNU76fYmlA" base_Comment="_17RHkxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVrhRBEd-0fNU76fYmlA" base_Comment="_17RIGxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVrxRBEd-0fNU76fYmlA" base_Comment="_17RIIxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVsBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aVsRRBEd-0fNU76fYmlA" base_Comment="_17HtZxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVshRBEd-0fNU76fYmlA" base_Comment="_17HtaBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aVsxRBEd-0fNU76fYmlA" base_Comment="_17HtaxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVtBRBEd-0fNU76fYmlA" base_Comment="_17HtbBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aVtRRBEd-0fNU76fYmlA" base_Comment="_17RM0BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aVthRBEd-0fNU76fYmlA" base_Comment="_17RMzRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aVtxRBEd-0fNU76fYmlA" base_Comment="_17RMyhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aVuBRBEd-0fNU76fYmlA" base_Comment="_17HtXxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVuRRBEd-0fNU76fYmlA" base_Comment="_17HtQhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVuhRBEd-0fNU76fYmlA" base_Comment="_17HtBRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVuxRBEd-0fNU76fYmlA" base_Comment="_17HsHBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVvBRBEd-0fNU76fYmlA" base_Comment="_17Hr_BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVvRRBEd-0fNU76fYmlA" base_Comment="_17HsDhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVvhRBEd-0fNU76fYmlA" base_Comment="_17HsFRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVvxRBEd-0fNU76fYmlA" base_Comment="_17Hr8xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVwBRBEd-0fNU76fYmlA" base_Comment="_17Hr7xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVwRRBEd-0fNU76fYmlA" base_Comment="_17Hr6xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVwhRBEd-0fNU76fYmlA" base_Comment="_17Hr2RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVwxRBEd-0fNU76fYmlA" base_Comment="_17Hr0xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVxBRBEd-0fNU76fYmlA" base_Comment="_17RJeBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVxRRBEd-0fNU76fYmlA" base_Comment="_17RJkhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVxhRBEd-0fNU76fYmlA" base_Comment="_17RJoxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVxxRBEd-0fNU76fYmlA" base_Comment="_17RG-xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVyBRBEd-0fNU76fYmlA" base_Comment="_17RG4xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVyRRBEd-0fNU76fYmlA" base_Comment="_17RGzBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVyhRBEd-0fNU76fYmlA" base_Comment="_17HtfhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVyxRBEd-0fNU76fYmlA" base_Comment="_17RIQxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVzBRBEd-0fNU76fYmlA" base_Comment="_17RIcBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVzRRBEd-0fNU76fYmlA" base_Comment="_17RIgBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVzhRBEd-0fNU76fYmlA" base_Comment="_17RIiRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aVzxRBEd-0fNU76fYmlA" base_Comment="_17RI8hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV0BRBEd-0fNU76fYmlA" base_Comment="_17RJRBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV0RRBEd-0fNU76fYmlA" base_Comment="_17RIOhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV0hRBEd-0fNU76fYmlA" base_Comment="_17RIJxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV0xRBEd-0fNU76fYmlA" base_Comment="_17RH5RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV1BRBEd-0fNU76fYmlA" base_Comment="_17RHuhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV1RRBEd-0fNU76fYmlA" base_Comment="_17RH1BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV1hRBEd-0fNU76fYmlA" base_Comment="_17RH3RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV1xRBEd-0fNU76fYmlA" base_Comment="_17RHsxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV2BRBEd-0fNU76fYmlA" base_Comment="_17RHrxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV2RRBEd-0fNU76fYmlA" base_Comment="_17RHgRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV2hRBEd-0fNU76fYmlA" base_Comment="_17RHahRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV2xRBEd-0fNU76fYmlA" base_Comment="_17RHUxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV3BRBEd-0fNU76fYmlA" base_Comment="_17RHNhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV3RRBEd-0fNU76fYmlA" base_Comment="_17RM1RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV3hRBEd-0fNU76fYmlA" base_Comment="_17RMyxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV3xRBEd-0fNU76fYmlA" base_Comment="_17RNABRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV4BRBEd-0fNU76fYmlA" base_Comment="_17RM7hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV4RRBEd-0fNU76fYmlA" base_Comment="_17RMXBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV4hRBEd-0fNU76fYmlA" base_Comment="_17RMThRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV4xRBEd-0fNU76fYmlA" base_Comment="_17RMQRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV5BRBEd-0fNU76fYmlA" base_Comment="_17RL1RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV5RRBEd-0fNU76fYmlA" base_Comment="_17RLrxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV5hRBEd-0fNU76fYmlA" base_Comment="_17RLnBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV5xRBEd-0fNU76fYmlA" base_Comment="_17RLfBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV6BRBEd-0fNU76fYmlA" base_Comment="_17RLaxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV6RRBEd-0fNU76fYmlA" base_Comment="_17RLXhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV6hRBEd-0fNU76fYmlA" base_Comment="_17RLSBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV6xRBEd-0fNU76fYmlA" base_Comment="_17RLKRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV7BRBEd-0fNU76fYmlA" base_Comment="_17RLMhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV7RRBEd-0fNU76fYmlA" base_Comment="_17RLCxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV7hRBEd-0fNU76fYmlA" base_Comment="_17RK1hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV7xRBEd-0fNU76fYmlA" base_Comment="_17RK3xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV8BRBEd-0fNU76fYmlA" base_Comment="_17RK5xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV8RRBEd-0fNU76fYmlA" base_Comment="_17RK8BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV8hRBEd-0fNU76fYmlA" base_Comment="_17RK-RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV8xRBEd-0fNU76fYmlA" base_Comment="_17RLAhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV9BRBEd-0fNU76fYmlA" base_Comment="_17RKqBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV9RRBEd-0fNU76fYmlA" base_Comment="_17RKmRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV9hRBEd-0fNU76fYmlA" base_Comment="_17RKXRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV9xRBEd-0fNU76fYmlA" base_Comment="_17RKSBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV-BRBEd-0fNU76fYmlA" base_Comment="_17RKEhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV-RRBEd-0fNU76fYmlA" base_Comment="_17RKKBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV-hRBEd-0fNU76fYmlA" base_Comment="_17RNrhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV-xRBEd-0fNU76fYmlA" base_Comment="_17RNkBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV_BRBEd-0fNU76fYmlA" base_Comment="_17RNZhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV_RRBEd-0fNU76fYmlA" base_Comment="_17HtYBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV_hRBEd-0fNU76fYmlA" base_Comment="_17HtPBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aV_xRBEd-0fNU76fYmlA" base_Comment="_17HtKxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWABRBEd-0fNU76fYmlA" base_Comment="_17HtNhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWARRBEd-0fNU76fYmlA" base_Comment="_17HtHxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWAhRBEd-0fNU76fYmlA" base_Comment="_17HtExRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWAxRBEd-0fNU76fYmlA" base_Comment="_17HtGRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWBBRBEd-0fNU76fYmlA" base_Comment="_17Hs-hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWBRRBEd-0fNU76fYmlA" base_Comment="_17HtABRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWBhRBEd-0fNU76fYmlA" base_Comment="_17Hs7hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWBxRBEd-0fNU76fYmlA" base_Comment="_17Hs9BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWCBRBEd-0fNU76fYmlA" base_Comment="_17Hs2BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWCRRBEd-0fNU76fYmlA" base_Comment="_17Hs3hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWChRBEd-0fNU76fYmlA" base_Comment="_17HsxRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWCxRBEd-0fNU76fYmlA" base_Comment="_17HssxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWDBRBEd-0fNU76fYmlA" base_Comment="_17HsuRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWDRRBEd-0fNU76fYmlA" base_Comment="_17HsvxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWDhRBEd-0fNU76fYmlA" base_Comment="_17HsrRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWDxRBEd-0fNU76fYmlA" base_Comment="_17HslhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWEBRBEd-0fNU76fYmlA" base_Comment="_17HskBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWERRBEd-0fNU76fYmlA" base_Comment="_17HsihRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWEhRBEd-0fNU76fYmlA" base_Comment="_17HsehRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWExRBEd-0fNU76fYmlA" base_Comment="_17HsfhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWFBRBEd-0fNU76fYmlA" base_Comment="_17RYihRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWFRRBEd-0fNU76fYmlA" base_Comment="_17RZvBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWFhRBEd-0fNU76fYmlA" base_Comment="_17RYbxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWFxRBEd-0fNU76fYmlA" base_Comment="_17RYFxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWGBRBEd-0fNU76fYmlA" base_Comment="_17RZeRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWGRRBEd-0fNU76fYmlA" base_Comment="_17RbBBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWGhRBEd-0fNU76fYmlA" base_Comment="_17aQxhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWGxRBEd-0fNU76fYmlA" base_Comment="_17RbEBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWHBRBEd-0fNU76fYmlA" base_Comment="_17RbGhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWHRRBEd-0fNU76fYmlA" base_Comment="_17RaQBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWHhRBEd-0fNU76fYmlA" base_Comment="_17aRPBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWHxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWIBRBEd-0fNU76fYmlA" base_Comment="_17aQ-BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWIRRBEd-0fNU76fYmlA" base_Comment="_17Ra2BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWIhRBEd-0fNU76fYmlA" base_Comment="_17RalRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWIxRBEd-0fNU76fYmlA" base_Comment="_17aRIRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWJBRBEd-0fNU76fYmlA" base_Comment="_17RJ9xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWJRRBEd-0fNU76fYmlA" base_Comment="_17RZ4hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWJhRBEd-0fNU76fYmlA" base_Comment="_17RPKRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWJxRBEd-0fNU76fYmlA" base_Comment="_17RZOhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWKBRBEd-0fNU76fYmlA" base_Comment="_17RZ6BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWKRRBEd-0fNU76fYmlA" base_Comment="_17RZPhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWKhRBEd-0fNU76fYmlA" base_Comment="_17RZ7BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWKxRBEd-0fNU76fYmlA" base_Comment="_17RZ7BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWLBRBEd-0fNU76fYmlA" base_Comment="_17RZQxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWLRRBEd-0fNU76fYmlA" base_Comment="_17RZRxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:create xmi:id="_17aWLhRBEd-0fNU76fYmlA" base_Operation="_17RZ_hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWLxRBEd-0fNU76fYmlA" base_Comment="_17RZ_xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWMBRBEd-0fNU76fYmlA" base_Comment="_17RaDRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWMRRBEd-0fNU76fYmlA" base_Comment="_17RZ8xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWMhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWMxRBEd-0fNU76fYmlA" base_Comment="_17RYXxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWNBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWNRRBEd-0fNU76fYmlA" base_Comment="_17RaBxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWNhRBEd-0fNU76fYmlA" base_Comment="_17RaBRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWNxRBEd-0fNU76fYmlA" base_Comment="_17RNKhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWOBRBEd-0fNU76fYmlA" base_Comment="_17RNKBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWORRBEd-0fNU76fYmlA" base_Comment="_17RM6xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWOhRBEd-0fNU76fYmlA" base_Comment="_17RXoBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWOxRBEd-0fNU76fYmlA" base_Comment="_17RZSxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWPBRBEd-0fNU76fYmlA" base_Comment="_17RZThRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWPRRBEd-0fNU76fYmlA" base_Comment="_17RZzBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWPhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWPxRBEd-0fNU76fYmlA" base_Comment="_17RaERRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWQBRBEd-0fNU76fYmlA" base_Comment="_17HtRRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWQRRBEd-0fNU76fYmlA" base_Comment="_17HtYxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWQhRBEd-0fNU76fYmlA" base_Comment="_17HtURRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWQxRBEd-0fNU76fYmlA" base_Comment="_17HtShRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWRBRBEd-0fNU76fYmlA" base_Comment="_17RN9hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWRRRBEd-0fNU76fYmlA" base_Comment="_17RN3xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWRhRBEd-0fNU76fYmlA" base_Comment="_17RN4hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWRxRBEd-0fNU76fYmlA" base_Comment="_17RN-BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWSBRBEd-0fNU76fYmlA" base_Comment="_17RN6BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWSRRBEd-0fNU76fYmlA" base_Comment="_17RMHRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWShRBEd-0fNU76fYmlA" base_Comment="_17RMIBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWSxRBEd-0fNU76fYmlA" base_Comment="_17RMGhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWTBRBEd-0fNU76fYmlA" base_Comment="_17RMKhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWTRRBEd-0fNU76fYmlA" base_Comment="_17RMKxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWThRBEd-0fNU76fYmlA" base_Comment="_17RMJRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWTxRBEd-0fNU76fYmlA" base_Comment="_17RaCRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWUBRBEd-0fNU76fYmlA" base_Comment="_17RNRxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWURRBEd-0fNU76fYmlA" base_Comment="_17RNThRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWUhRBEd-0fNU76fYmlA" base_Comment="_17RNShRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWUxRBEd-0fNU76fYmlA" base_Comment="_17RNURRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWVBRBEd-0fNU76fYmlA" base_Comment="_17RNJRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWVRRBEd-0fNU76fYmlA" base_Comment="_17RN_RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWVhRBEd-0fNU76fYmlA" base_Comment="_17ROABRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWVxRBEd-0fNU76fYmlA" base_Comment="_17ROAxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWWBRBEd-0fNU76fYmlA" base_Comment="_17ROCRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWWRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWWhRBEd-0fNU76fYmlA" base_Comment="_17RNHRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWWxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWXBRBEd-0fNU76fYmlA" base_Comment="_17HtXRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWXRRBEd-0fNU76fYmlA" base_Comment="_17RKxxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWXhRBEd-0fNU76fYmlA" base_Comment="_17HsShRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWXxRBEd-0fNU76fYmlA" base_Comment="_17RNYxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWYBRBEd-0fNU76fYmlA" base_Comment="_17RNYRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWYRRBEd-0fNU76fYmlA" base_Comment="_17HsJxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWYhRBEd-0fNU76fYmlA" base_Comment="_17RJshRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWYxRBEd-0fNU76fYmlA" base_Comment="_17HthRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWZBRBEd-0fNU76fYmlA" base_Comment="_17RJtxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWZRRBEd-0fNU76fYmlA" base_Comment="_17RJuxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWZhRBEd-0fNU76fYmlA" base_Comment="_17RIrxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWZxRBEd-0fNU76fYmlA" base_Comment="_17HtMBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWaBRBEd-0fNU76fYmlA" base_Comment="_17ROXhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWaRRBEd-0fNU76fYmlA" base_Comment="_17RTihRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWahRBEd-0fNU76fYmlA" base_Comment="_17RTEBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWaxRBEd-0fNU76fYmlA" base_Comment="_17RTJBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWbBRBEd-0fNU76fYmlA" base_Comment="_17RQ3hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWbRRBEd-0fNU76fYmlA" base_Comment="_17RRjhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWbhRBEd-0fNU76fYmlA" base_Comment="_17RPEBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWbxRBEd-0fNU76fYmlA" base_Comment="_17RPfhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWcBRBEd-0fNU76fYmlA" base_Comment="_17RQaxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWcRRBEd-0fNU76fYmlA" base_Comment="_17RRsxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWchRBEd-0fNU76fYmlA" base_Comment="_17RRuBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWcxRBEd-0fNU76fYmlA" base_Comment="_17RPMBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWdBRBEd-0fNU76fYmlA" base_Comment="_17RVDRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWdRRBEd-0fNU76fYmlA" base_Comment="_17RU9BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWdhRBEd-0fNU76fYmlA" base_Comment="_17RU-RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWdxRBEd-0fNU76fYmlA" base_Comment="_17RU_hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWeBRBEd-0fNU76fYmlA" base_Comment="_17ROTxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWeRRBEd-0fNU76fYmlA" base_Comment="_17ROOxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWehRBEd-0fNU76fYmlA" base_Comment="_17ROJBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWexRBEd-0fNU76fYmlA" base_Comment="_17ROJxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWfBRBEd-0fNU76fYmlA" base_Comment="_17RP7hRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWfRRBEd-0fNU76fYmlA" base_Comment="_17RTABRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWfhRBEd-0fNU76fYmlA" base_Comment="_17RUrBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWfxRBEd-0fNU76fYmlA" base_Comment="_17ROpxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWgBRBEd-0fNU76fYmlA" base_Comment="_17RXihRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWgRRBEd-0fNU76fYmlA" base_Comment="_17RXjhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWghRBEd-0fNU76fYmlA" base_Comment="_17RXkRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWgxRBEd-0fNU76fYmlA" base_Comment="_17RUfhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWhBRBEd-0fNU76fYmlA" base_Comment="_17RUgRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWhRRBEd-0fNU76fYmlA" base_Comment="_17RUhBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWhhRBEd-0fNU76fYmlA" base_Comment="_17RXOhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWhxRBEd-0fNU76fYmlA" base_Comment="_17RXEBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWiBRBEd-0fNU76fYmlA" base_Comment="_17RXaRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWiRRBEd-0fNU76fYmlA" base_Comment="_17RWTxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWihRBEd-0fNU76fYmlA" base_Comment="_17RNvBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWixRBEd-0fNU76fYmlA" base_Comment="_17RNRBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWjBRBEd-0fNU76fYmlA" base_Comment="_17RHqRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWjRRBEd-0fNU76fYmlA" base_Comment="_17HsChRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWjhRBEd-0fNU76fYmlA" base_Comment="_17RHihRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWjxRBEd-0fNU76fYmlA" base_Comment="_17RLRBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWkBRBEd-0fNU76fYmlA" base_Comment="_17HsVBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWkRRBEd-0fNU76fYmlA" base_Comment="_17RZXxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWkhRBEd-0fNU76fYmlA" base_Comment="_17RaGxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWkxRBEd-0fNU76fYmlA" base_Comment="_17RZzxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWlBRBEd-0fNU76fYmlA" base_Comment="_17RZ2BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWlRRBEd-0fNU76fYmlA" base_Comment="_17RP4RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWlhRBEd-0fNU76fYmlA" base_Comment="_17RSgBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWlxRBEd-0fNU76fYmlA" base_Comment="_17RSfRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWmBRBEd-0fNU76fYmlA" base_Comment="_17RSgxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWmRRBEd-0fNU76fYmlA" base_Comment="_17RSlBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWmhRBEd-0fNU76fYmlA" base_Comment="_17RSlxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWmxRBEd-0fNU76fYmlA" base_Comment="_17RP5BRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWnBRBEd-0fNU76fYmlA" base_Comment="_17RRGxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWnRRBEd-0fNU76fYmlA" base_Comment="_17RP5xRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWnhRBEd-0fNU76fYmlA" base_Comment="_17RQNxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWnxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWoBRBEd-0fNU76fYmlA" base_Comment="_17RQPBRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWoRRBEd-0fNU76fYmlA" base_Comment="_17RQ5BRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWohRBEd-0fNU76fYmlA" base_Comment="_17RQ4RRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWoxRBEd-0fNU76fYmlA" base_Comment="_17ROqhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWpBRBEd-0fNU76fYmlA" base_Comment="_17RRWRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWpRRBEd-0fNU76fYmlA" base_Comment="_17RVNRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWphRBEd-0fNU76fYmlA" base_Comment="_17RTgBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWpxRBEd-0fNU76fYmlA" base_Comment="_17RTgxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWqBRBEd-0fNU76fYmlA" base_Comment="_17RZURRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWqRRBEd-0fNU76fYmlA" base_Comment="_17RaExRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWqhRBEd-0fNU76fYmlA" base_Comment="_17RZVBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWqxRBEd-0fNU76fYmlA" base_Comment="_17RZVhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWrBRBEd-0fNU76fYmlA" base_Comment="_17RaFRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWrRRBEd-0fNU76fYmlA" base_Comment="_17RJCRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWrhRBEd-0fNU76fYmlA" base_Comment="_17RZWRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWrxRBEd-0fNU76fYmlA" base_Comment="_17RaihRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWsBRBEd-0fNU76fYmlA" base_Comment="_17RakhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWsRRBEd-0fNU76fYmlA" base_Comment="_17RaphRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWshRBEd-0fNU76fYmlA" base_Comment="_17RaFxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWsxRBEd-0fNU76fYmlA" base_Comment="_17RahxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWtBRBEd-0fNU76fYmlA" base_Comment="_17RZXBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWtRRBEd-0fNU76fYmlA" base_Comment="_17RaGRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWthRBEd-0fNU76fYmlA" base_Comment="_17RJjxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWtxRBEd-0fNU76fYmlA" base_Comment="_17RJiRRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWuBRBEd-0fNU76fYmlA" base_Comment="_17RJgxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWuRRBEd-0fNU76fYmlA" base_Comment="_17RJphRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWuhRBEd-0fNU76fYmlA" base_Comment="_17RJqhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWuxRBEd-0fNU76fYmlA" base_Comment="_17RJrhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWvBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWvRRBEd-0fNU76fYmlA" base_Comment="_17HsNhRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aWvhRBEd-0fNU76fYmlA" base_Comment="_17HsIxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWvxRBEd-0fNU76fYmlA" base_Comment="_17RHjBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWwBRBEd-0fNU76fYmlA" base_Comment="_17RHYRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWwRRBEd-0fNU76fYmlA" base_Comment="_17RHZhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWwhRBEd-0fNU76fYmlA" base_Comment="_17RIYRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWwxRBEd-0fNU76fYmlA" base_Comment="_17Hr5RRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWxBRBEd-0fNU76fYmlA" base_Comment="_17RHnBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWxRRBEd-0fNU76fYmlA" base_Comment="_17HsmRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWxhRBEd-0fNU76fYmlA" base_Comment="_17HsnxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWxxRBEd-0fNU76fYmlA" base_Comment="_17RZZRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWyBRBEd-0fNU76fYmlA" base_Comment="_17RaHxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWyRRBEd-0fNU76fYmlA" base_Comment="_17RY7hRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWyhRBEd-0fNU76fYmlA" base_Comment="_17HspxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWyxRBEd-0fNU76fYmlA" base_Comment="_17RZaBRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWzBRBEd-0fNU76fYmlA" base_Comment="_17RaIRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWzRRBEd-0fNU76fYmlA" base_Comment="_17RZYhRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWzhRBEd-0fNU76fYmlA" base_Comment="_17RaHRRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aWzxRBEd-0fNU76fYmlA" base_Comment="_17RZaxRBEd-0fNU76fYmlA"/>
  <Uml2Debug:java xmi:id="_17aW0BRBEd-0fNU76fYmlA" base_Comment="_17RaIxRBEd-0fNU76fYmlA"/>
  <Default:Documentation xmi:id="_17aW0RRBEd-0fNU76fYmlA" base_Comment="_17RHVBRBEd-0fNU76fYmlA"/>
</xmi:XMI>
